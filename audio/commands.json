[
  {
    "Id": 1,
    "Sentence": "Follow the oldest woman in the dining room please",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Follow(Person(oldest woman, in: dining room))"
  },
  {
    "Id": 2,
    "Sentence": "Grasp the orange, pinpoint a paprika in the living room, and tell the time please",
    "Remarks": "orange\n\t Robot will find it on the end table\n\n",
    "Command": "Sequence(Take(object: orange, from: end table), Find(Find(object: paprika, in: living room)), Speak(the time))"
  },
  {
    "Id": 3,
    "Sentence": "Serve some grape juice in a cup",
    "Remarks": null,
    "Command": "Pour(grape juice, in: cup)"
  },
  {
    "Id": 4,
    "Sentence": "Close the corridor door",
    "Remarks": null,
    "Command": "Close(door: corridor)"
  },
  {
    "Id": 5,
    "Sentence": "Robot please escort the tallest person in the living room to the exit",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Guide(Person(tallest person, in: living room), to: exit)"
  },
  {
    "Id": 6,
    "Sentence": "Robot please look for Skyler at the couch, conduct her to the couch, and find Skyler",
    "Remarks": "Skyler\n\t She is waving at the bedroom\n\n",
    "Command": "Sequence(Guide(Person(Skyler, at: couch)), Find(Person(Skyler)))"
  },
  {
    "Id": 7,
    "Sentence": "Enter to the kitchen, find Jennifer, and locate Jennifer at the dishwasher please",
    "Remarks": "Jennifer\n\t She is waving. Place three people in the room\n\n",
    "Command": "Sequence(Find(Person(Jennifer, in: kitchen)), Find(Person(Jennifer, at: dishwasher)))"
  },
  {
    "Id": 8,
    "Sentence": "Offer something to eat to all the elders raising their left arm in the dining room please",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: elders raising their left arm, in: dining room, somethingTo: eat)"
  },
  {
    "Id": 9,
    "Sentence": "Robot please offer something to eat to all the women in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Serve(to: women, in: corridor, somethingTo: eat)"
  },
  {
    "Id": 10,
    "Sentence": "Find a paprika in the living room, get the apple from the sink, and look for Jennifer",
    "Remarks": "Jennifer\n\t She is lying at the couch\n\n",
    "Command": "Sequence(Find(Find(object: paprika, in: living room)), Take(object: apple, from: sink), Find(Person(Jennifer)))"
  },
  {
    "Id": 11,
    "Sentence": "Offer something to eat to all the women raising their left arm in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Serve(to: women raising their left arm, in: corridor, somethingTo: eat)"
  },
  {
    "Id": 12,
    "Sentence": "Pick up the apple from the storage table, deliver it to Robert, and look for a cloth in the corridor",
    "Remarks": "Robert\n\t He is lying at the bed\n\n",
    "Command": "Sequence(Bring(object: apple, from: storage table, to: Person(Robert)), Find(Find(object: cloth, in: corridor)))"
  },
  {
    "Id": 13,
    "Sentence": "Go behind the person at the exit",
    "Remarks": "Remarks\n\t The Professional Walker must leave the arena and walk through a crowd of at least 5 people who must not let the robot pass. Once the robot has re-encountered its operator, the Professional Walker must lead the robot to bedroom \n\n",
    "Command": "Follow(Person(at: exit))"
  },
  {
    "Id": 14,
    "Sentence": "Grasp the fruits from the bookcase, spot Charlie at the exit, and accompany her to the exit please",
    "Remarks": "paprika\n\t Place to \n\n",
    "Command": "Sequence(Take(object: fruits, from: bookcase), Guide(Person(Charlie, at: exit)))"
  },
  {
    "Id": 15,
    "Sentence": "Could you enter to the living room, find the apple, and say something",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022the day of the week\u0022\n\n",
    "Command": "Sequence(Find(object: apple, in: living room), Speak())"
  },
  {
    "Id": 16,
    "Sentence": "Could you find Alex, pick up the apple from the counter, and look for Alex at the sink",
    "Remarks": "Alex\n\t He is standing at the dining table\n\n",
    "Command": "Sequence(Find(Person(Alex)), Take(object: apple, from: counter), Find(Person(Alex, at: sink)))"
  },
  {
    "Id": 17,
    "Sentence": "Set orange on the cupboard, locate a orange, and answer a question please",
    "Remarks": "orange\n\t Robot must place it on the cupboard\n\n",
    "Command": "Sequence(Bring(object: orange, on: cupboard), Find(object: orange), Answer(question: question))"
  },
  {
    "Id": 18,
    "Sentence": "Offer something to drink to all the elders wearing shoes in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Serve(to: elders wearing shoes, in: kitchen, somethingTo: drink)"
  },
  {
    "Id": 19,
    "Sentence": "Robot please tell me how many women are wearing jackets in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women are wearing jackets, in: kitchen)"
  },
  {
    "Id": 20,
    "Sentence": "Take the left-most object from the side table to the bookcase please",
    "Remarks": null,
    "Command": "Bring(object: left-most object, from: side table, to: side table)"
  },
  {
    "Id": 21,
    "Sentence": "Offer something to eat to all the elders pointing to the right in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Serve(to: elders pointing to the right, in: corridor, somethingTo: eat)"
  },
  {
    "Id": 22,
    "Sentence": "Describe the objects in the end table to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: end table, to: me)"
  },
  {
    "Id": 23,
    "Sentence": "Deliver me some grape juice in a bowl please",
    "Remarks": null,
    "Command": "Pour(grape juice, in: bowl)"
  },
  {
    "Id": 24,
    "Sentence": "Robot please offer something to eat to all the children waving in the bedroom",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "Serve(to: children waving, in: bedroom, somethingTo: eat)"
  },
  {
    "Id": 25,
    "Sentence": "Offer something to eat to all the children in the corridor please",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Serve(to: children, in: corridor, somethingTo: eat)"
  },
  {
    "Id": 26,
    "Sentence": "Could you close the entrance door",
    "Remarks": null,
    "Command": "Close(door: entrance)"
  },
  {
    "Id": 27,
    "Sentence": "Could you deliver me some grape juice in a bowl",
    "Remarks": null,
    "Command": "Pour(grape juice, in: bowl)"
  },
  {
    "Id": 28,
    "Sentence": "Leave a bowl on the cupboard and a spoon on its left",
    "Remarks": null,
    "Command": "SetTheTable(using: bowl, on: cupboard, place: spoon, at: on its left)"
  },
  {
    "Id": 29,
    "Sentence": "Could you please bring the orange juice to the woman raising their left arm in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Bring(object: orange juice, to: Person(woman raising their left arm), in: dining room)"
  },
  {
    "Id": 30,
    "Sentence": "Look for William, grasp the paprika from the counter, and navigate to the counter, look for the cloth, and put it on the end table please",
    "Remarks": "William\n\t He is sitting at the bedroom\n\n",
    "Command": "Sequence(Find(Person(William)), Bring(object: paprika, from: counter, to: todo))"
  },
  {
    "Id": 31,
    "Sentence": "Look for Francis at the entrance, get the paprika from the storage table, and say something please",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022your team\u0027s name\u0022\n\n",
    "Command": "Sequence(Find(Person(Francis, at: entrance)), Take(object: paprika, from: storage table), Speak())"
  },
  {
    "Id": 32,
    "Sentence": "Could you please locate Robert at the couch, pick up the paprika from the cupboard, and put the cup in the kitchen done",
    "Remarks": null,
    "Command": "Sequence(Find(Person(Robert, at: couch)), Take(object: paprika, from: cupboard), Bring(object: cup, in: kitchen)))"
  },
  {
    "Id": 33,
    "Sentence": "Bring the apple to the person pointing to the right in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Bring(object: apple, to: Person(person pointing to the right), in: living room)"
  },
  {
    "Id": 34,
    "Sentence": "Hand me some food from the microwave",
    "Remarks": null,
    "Command": "Bring(category: food, from: microwave, to speaker)"
  },
  {
    "Id": 35,
    "Sentence": "Look for Jennifer at the exit, put dish on the storage table, and look for Jennifer",
    "Remarks": "Jennifer\n\t She is sitting at the kitchen\n\n",
    "Command": "Sequence(Find(Person(Jennifer, at: exit)), Bring(object: dish, on: storage table), Find(Person(Jennifer)))"
  },
  {
    "Id": 36,
    "Sentence": "Could you please get to know Skyler at the entrance, then find him in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\nRemarks\n\tThere is only one person at entrance\n\n",
    "Command": "Meet(Person(named: Skyler, at: entrance), movingTo: kitchen)"
  },
  {
    "Id": 37,
    "Sentence": "Find the bag in the bedroom",
    "Remarks": null,
    "Command": "Find(object: bag, in: bedroom)"
  },
  {
    "Id": 38,
    "Sentence": "Spot Robin at the dishwasher, lead her to the dishwasher, and say something please",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022a joke\u0022\n\n",
    "Command": "Sequence(Guide(Person(Robin, at: dishwasher)), Speak())"
  },
  {
    "Id": 39,
    "Sentence": "Take the apple from the end table, put it on the bookcase, and say something please",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022what day is tomorrow\u0022\n\n",
    "Command": "Sequence(Bring(object: apple, from: end table, to: todo), Speak())"
  },
  {
    "Id": 40,
    "Sentence": "Could you open the exit door",
    "Remarks": null,
    "Command": "Open(door: exit)"
  },
  {
    "Id": 41,
    "Sentence": "Tell me how many women are wearing jackets in the corridor please",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women are wearing jackets, in: corridor)"
  },
  {
    "Id": 42,
    "Sentence": "Open the exit door please",
    "Remarks": null,
    "Command": "Open(door: exit)"
  },
  {
    "Id": 43,
    "Sentence": "Enter to the living room, find the paprika, and put it to the living room",
    "Remarks": null,
    "Command": "Bring(object: paprika, in: living room, to: living room)"
  },
  {
    "Id": 44,
    "Sentence": "Go to the dining room, locate the cereal, and set the cereal in the living room done please",
    "Remarks": null,
    "Command": "Sequence(Find(object: cereal, in: dining room), Bring(object: cereal, in: living room)))"
  },
  {
    "Id": 45,
    "Sentence": "Robot please describe the objects in the side table to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: side table, to: me)"
  },
  {
    "Id": 46,
    "Sentence": "Please contact Skyler at the bed, then greet him in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\nRemarks\n\tThere is only one person at bed\n\n",
    "Command": "Meet(Person(named: Skyler, at: bed), movingTo: kitchen)"
  },
  {
    "Id": 47,
    "Sentence": "Bring the potato chips to the person wearing orange pants in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Bring(object: potato chips, to: Person(person wearing orange pants), in: dining room)"
  },
  {
    "Id": 48,
    "Sentence": "Pinpoint Charlie, get the orange from the side table, and look for Charlie at the entrance please",
    "Remarks": "Charlie\n\t He is standing at the corridor\n\n",
    "Command": "Sequence(Find(Person(Charlie)), Take(object: orange, from: side table), Find(Person(Charlie, at: entrance)))"
  },
  {
    "Id": 49,
    "Sentence": "Go to the bedroom, locate the drinks, and look for Alex in the bedroom please",
    "Remarks": null,
    "Command": "Sequence(Find(object: drinks, in: bedroom), Find(Person(Alex, in: bedroom)))"
  },
  {
    "Id": 50,
    "Sentence": "Introduce yourself to the child in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(child, in: kitchen), method: introduce yourself to)"
  },
  {
    "Id": 51,
    "Sentence": "Please tell me how the person standing at the bookcase looks like",
    "Remarks": null,
    "Command": "Describe(person: standing, at: bookcase, to: speaker)"
  },
  {
    "Id": 52,
    "Sentence": "Robot please find Linda, get the orange from the bookcase, and bring it to me",
    "Remarks": "Linda\n\t She is lying at the entrance\n\n",
    "Command": "Sequence(Find(Person(Linda)), Bring(object: orange, from: bookcase, to: speaker))"
  },
  {
    "Id": 53,
    "Sentence": "Enter to the living room, look for Robin, and escort her please",
    "Remarks": null,
    "Command": "Guide(Person(Robin, in: living room))"
  },
  {
    "Id": 54,
    "Sentence": "Could you please place paprika on the bookcase, grasp the fruits from the bookcase, and put it on the bookcase",
    "Remarks": "orange\n\t Place to \n\n",
    "Command": "Sequence(Bring(object: paprika, on: bookcase), Bring(object: fruits, from: bookcase, to: bookcase))"
  },
  {
    "Id": 55,
    "Sentence": "Lead the person at the couch to the exit",
    "Remarks": "Remarks\n\t All doors between couch and the target location are closed, as well as all paths to get there are blocked. \n\n",
    "Command": "Guide(Person(at: couch), to: exit)"
  },
  {
    "Id": 56,
    "Sentence": "Describe the person standing at the couch to the person at the end table please",
    "Remarks": null,
    "Command": "Describe(person: standing, at: couch, to: Person(at: couch)))"
  },
  {
    "Id": 57,
    "Sentence": "Open the corridor door please",
    "Remarks": null,
    "Command": "Open(door: corridor)"
  },
  {
    "Id": 58,
    "Sentence": "Offer something to eat to all the men wearing blouses in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: men wearing blouses, in: dining room, somethingTo: eat)"
  },
  {
    "Id": 59,
    "Sentence": "Tell me how many children are pointing to the right in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children are pointing to the right, in: kitchen)"
  },
  {
    "Id": 60,
    "Sentence": "Robot please get the apple, find William at the bed, and lead him to the exit",
    "Remarks": "apple\n\t Robot will find it on the cupboard\n\n",
    "Command": "Sequence(Take(object: apple, from: cupboard), Guide(Person(William, at: bed)))"
  },
  {
    "Id": 61,
    "Sentence": "Tell me how many women in the corridor are wearing yellow",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women are wearing yellow, in: corridor)"
  },
  {
    "Id": 62,
    "Sentence": "Close the exit door please",
    "Remarks": null,
    "Command": "Close(door: exit)"
  },
  {
    "Id": 63,
    "Sentence": "Find the basket in the kitchen please",
    "Remarks": null,
    "Command": "Find(object: basket, in: kitchen)"
  },
  {
    "Id": 64,
    "Sentence": "Tell me how many people are raising their left arm in the bedroom",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: people are raising their left arm, in: bedroom)"
  },
  {
    "Id": 65,
    "Sentence": "Open the entrance door please",
    "Remarks": null,
    "Command": "Open(door: entrance)"
  },
  {
    "Id": 66,
    "Sentence": "Tell me how many people are waving in the corridor please",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: people are waving, in: corridor)"
  },
  {
    "Id": 67,
    "Sentence": "Robot please tell me how many men are pointing to the left in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: men are pointing to the left, in: dining room)"
  },
  {
    "Id": 68,
    "Sentence": "Put the pringles into the bag on the sink please",
    "Remarks": null,
    "Command": "Store(object: pringles, in: bag on the sink)"
  },
  {
    "Id": 69,
    "Sentence": "Could you please put bowl on the cupboard, find Francis, and escort him to the kitchen",
    "Remarks": "Francis\n\t He is sitting at the dishwasher\n\n",
    "Command": "Sequence(Bring(object: bowl, on: cupboard), Guide(Person(Francis)))"
  },
  {
    "Id": 70,
    "Sentence": "Serve some chocolate drink in a bowl",
    "Remarks": null,
    "Command": "Pour(chocolate drink, in: bowl)"
  },
  {
    "Id": 71,
    "Sentence": "Find Mary in the dining room, spot Mary, and say something about yourself please",
    "Remarks": "Mary\n\t She is sitting at the sink\n\n",
    "Command": "Sequence(Find(Person(Mary, in: dining room)), Find(Person(Mary)), Speak(something about yourself))"
  },
  {
    "Id": 72,
    "Sentence": "Hand me some cutlery from the basket on the bookcase",
    "Remarks": null,
    "Command": "Bring(category: cutlery, from: basket on the bookcase, to speaker)"
  },
  {
    "Id": 73,
    "Sentence": "Open the entrance door",
    "Remarks": null,
    "Command": "Open(door: entrance)"
  },
  {
    "Id": 74,
    "Sentence": "Pick up a food from the cupboard and put it into the oven",
    "Remarks": null,
    "Command": "Store(category: food, from: cupboard, in: oven)"
  },
  {
    "Id": 75,
    "Sentence": "Put the chocolate drink into the oven",
    "Remarks": null,
    "Command": "Store(object: chocolate drink, in: oven)"
  },
  {
    "Id": 76,
    "Sentence": "Please serve some chocolate drink in a bowl",
    "Remarks": null,
    "Command": "Pour(chocolate drink, in: bowl)"
  },
  {
    "Id": 77,
    "Sentence": "Robot please close the corridor door",
    "Remarks": null,
    "Command": "Close(door: corridor)"
  },
  {
    "Id": 78,
    "Sentence": "Robot please close the corridor door",
    "Remarks": null,
    "Command": "Close(door: corridor)"
  },
  {
    "Id": 79,
    "Sentence": "Look for the bag in the kitchen please",
    "Remarks": null,
    "Command": "Find(object: bag, in: kitchen)"
  },
  {
    "Id": 80,
    "Sentence": "Place grape juice on the bookcase, leave the grape juice in the living room done, and answer a question please",
    "Remarks": null,
    "Command": "Sequence(Bring(object: grape juice, on: bookcase), Bring(object: grape juice, in: living room)), Answer(question: question))"
  },
  {
    "Id": 81,
    "Sentence": "Get the bowl, give it to Mary, and locate Mary at the dining table",
    "Remarks": "Mary\n\t She is lying at the entrance\n\n",
    "Command": "Sequence(Bring(todo, to: Person(Mary)), Find(Person(Mary, at: dining table)))"
  },
  {
    "Id": 82,
    "Sentence": "Navigate to the dining room, look for William, and pinpoint a sponge in the dining room please",
    "Remarks": "William\n\t He is waving. Place three people in the room\n\n",
    "Command": "Sequence(Find(Person(William, in: dining room)), Find(Find(object: sponge, in: dining room)))"
  },
  {
    "Id": 83,
    "Sentence": "Could you please pick up a drinks from the counter and put it into the fridge",
    "Remarks": null,
    "Command": "Store(category: drinks, from: counter, in: fridge)"
  },
  {
    "Id": 84,
    "Sentence": "Pick up a containers from the end table and put it into the fridge please",
    "Remarks": null,
    "Command": "Store(category: containers, from: end table, in: fridge)"
  },
  {
    "Id": 85,
    "Sentence": "Describe the objects in the desk to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: desk, to: me)"
  },
  {
    "Id": 86,
    "Sentence": "Accompany the person at the dishwasher to the exit please",
    "Remarks": "Remarks\n\t All doors between dishwasher and the target location are closed, as well as all paths to get there are blocked. \n\n",
    "Command": "Guide(Person(at: dishwasher), to: exit)"
  },
  {
    "Id": 87,
    "Sentence": "Could you please pick up the fruits from the cupboard, deliver to it to me, and answer a question",
    "Remarks": "apple\n\t Place to \n\n",
    "Command": "Sequence(Bring(object: fruits, from: cupboard, to: speaker), Answer(question: question))"
  },
  {
    "Id": 88,
    "Sentence": "Offer something to eat to all the women pointing to the left in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: women pointing to the left, in: living room, somethingTo: eat)"
  },
  {
    "Id": 89,
    "Sentence": "Robot please pick up a snacks from the storage table and put it into the oven",
    "Remarks": null,
    "Command": "Store(category: snacks, from: storage table, in: oven)"
  },
  {
    "Id": 90,
    "Sentence": "Could you please tell me how the person sitting at the bookcase looks like",
    "Remarks": null,
    "Command": "Describe(person: sitting, at: bookcase, to: speaker)"
  },
  {
    "Id": 91,
    "Sentence": "Tell me how many men are pointing to the left in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: men are pointing to the left, in: living room)"
  },
  {
    "Id": 92,
    "Sentence": "Could you count the tableware items at the side table and inform me",
    "Remarks": null,
    "Command": "Count(object: tableware items, at: side table, reportTo: speaker)"
  },
  {
    "Id": 93,
    "Sentence": "Please pinpoint Jennifer at the bookcase, take the paprika from the counter, and deliver it to Jennifer",
    "Remarks": "Jennifer\n\t She is lying at the exit\n\n",
    "Command": "Sequence(Find(Person(Jennifer, at: bookcase)), Bring(object: paprika, from: counter, to: Person(Jennifer)))"
  },
  {
    "Id": 94,
    "Sentence": "Get the tray, leave it to the kitchen, and look for Linda at the dining table please",
    "Remarks": null,
    "Command": "Sequence(Bring(todo, to: kitchen), Find(Person(Linda, at: dining table)))"
  },
  {
    "Id": 95,
    "Sentence": "Deliver me the tallest object from the bookcase please",
    "Remarks": null,
    "Command": "Bring(object: tallest object, from: bookcase, to: speaker)"
  },
  {
    "Id": 96,
    "Sentence": "Please tell me how many children are wearing black in the bedroom",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children are wearing black, in: bedroom)"
  },
  {
    "Id": 97,
    "Sentence": "Go to the kitchen, pinpoint James, and locate James please",
    "Remarks": "James\n\t He is standing at the couch\n\n",
    "Command": "Sequence(Find(Person(James, in: kitchen)), Find(Person(James)))"
  },
  {
    "Id": 98,
    "Sentence": "Set a bowl on the storage table and a spoon in it please",
    "Remarks": null,
    "Command": "SetTheTable(using: bowl, on: storage table, place: spoon, at: in it)"
  },
  {
    "Id": 99,
    "Sentence": "Robot please bring the paprika to the child in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Bring(object: paprika, to: Person(child), in: corridor)"
  },
  {
    "Id": 100,
    "Sentence": "Salute the woman dressed in an orange shirt in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(woman dressed in an orange shirt, in: kitchen), method: salute)"
  },
  {
    "Id": 101,
    "Sentence": "Describe to me the person standing at the entrance please",
    "Remarks": null,
    "Command": "Describe(person: standing, at: entrance, to: speaker)"
  },
  {
    "Id": 102,
    "Sentence": "Please enter to the corridor, look for the fruits, and tell what day is tomorrow",
    "Remarks": null,
    "Command": "Sequence(Find(object: fruits, in: corridor), Speak(what day is tomorrow))"
  },
  {
    "Id": 103,
    "Sentence": "Robot please bring me some food from the microwave",
    "Remarks": null,
    "Command": "Bring(category: food, from: microwave, to speaker)"
  },
  {
    "Id": 104,
    "Sentence": "Meet John at the couch and follow him please",
    "Remarks": "Remarks\n\t Follow John to the bedroom\n\n",
    "Command": "todo"
  },
  {
    "Id": 105,
    "Sentence": "Robot please describe the objects in the bookcase to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: bookcase, to: me)"
  },
  {
    "Id": 106,
    "Sentence": "Take the paprika from the counter, place it on the counter, and get the paprika",
    "Remarks": "paprika\n\t Robot will find it on the counter\n\n",
    "Command": "Sequence(Bring(object: paprika, from: counter, to: todo), Take(object: paprika, from: counter))"
  },
  {
    "Id": 107,
    "Sentence": "Offer something to drink to all the women raising their left arm in the corridor please",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Serve(to: women raising their left arm, in: corridor, somethingTo: drink)"
  },
  {
    "Id": 108,
    "Sentence": "Enter to the dining room, find the paprika, and place it to the kitchen please",
    "Remarks": null,
    "Command": "Bring(object: paprika, in: dining room, to: kitchen)"
  },
  {
    "Id": 109,
    "Sentence": "Describe the objects in the counter to me please",
    "Remarks": null,
    "Command": "DescribeObjects(at: counter, to: me)"
  },
  {
    "Id": 110,
    "Sentence": "Offer something to eat to all the children dressed in yellow in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Serve(to: children dressed in yellow, in: kitchen, somethingTo: eat)"
  },
  {
    "Id": 111,
    "Sentence": "Find a knife in the dining room, retrieve the orange, and deliver it to Francis please",
    "Remarks": "Francis\n\t He is sitting at the couch\n\n",
    "Command": "Sequence(Find(Find(object: knife, in: dining room)), Bring(todo, to: Person(Francis)))"
  },
  {
    "Id": 112,
    "Sentence": "Close the entrance door please",
    "Remarks": null,
    "Command": "Close(door: entrance)"
  },
  {
    "Id": 113,
    "Sentence": "Look for the basket in the dining room",
    "Remarks": null,
    "Command": "Find(object: basket, in: dining room)"
  },
  {
    "Id": 114,
    "Sentence": "Deliver me the drinks at the top storage table please",
    "Remarks": null,
    "Command": "Bring(category: drinks, from: Location(top, of: storage table), to: speaker)"
  },
  {
    "Id": 115,
    "Sentence": "Take the fruits at the storage table \u0027s right to the storage table please",
    "Remarks": null,
    "Command": "Bring(category: fruits, from: Location(right, of: storage table), to: storage table)"
  },
  {
    "Id": 116,
    "Sentence": "Hand me the drinks at the left side table",
    "Remarks": null,
    "Command": "Bring(category: drinks, from: Location(left, of: side table), to: speaker)"
  },
  {
    "Id": 117,
    "Sentence": "Tell me how many men are waving in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: men are waving, in: corridor)"
  },
  {
    "Id": 118,
    "Sentence": "Pick up the orange from the bookcase, put it to the living room, and locate Charlie in the bedroom please",
    "Remarks": null,
    "Command": "Sequence(Bring(object: orange, from: bookcase, to: living room), Find(Person(Charlie, in: bedroom)))"
  },
  {
    "Id": 119,
    "Sentence": "Robot please locate Francis, lead him to the entrance, and answer a question",
    "Remarks": "Francis\n\t He is standing at the dishwasher\n\n",
    "Command": "Sequence(Guide(Person(Francis)), Answer(question: question))"
  },
  {
    "Id": 120,
    "Sentence": "Tell me how many elders there are in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: elders, in: living room)"
  },
  {
    "Id": 121,
    "Sentence": "Robot please look for the tray in the corridor",
    "Remarks": null,
    "Command": "Find(object: tray, in: corridor)"
  },
  {
    "Id": 122,
    "Sentence": "Tell me how many children are raising their right arm in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children are raising their right arm, in: kitchen)"
  },
  {
    "Id": 123,
    "Sentence": "Offer something to drink to all the people raising their right arm in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Serve(to: people raising their right arm, in: kitchen, somethingTo: drink)"
  },
  {
    "Id": 124,
    "Sentence": "Find Jennifer, place dish on the cupboard, and say the day of the week",
    "Remarks": "Jennifer\n\t She is waving at the sink\n\n",
    "Command": "Sequence(Find(Person(Jennifer)), Bring(object: dish, on: cupboard), Speak(the day of the week))"
  },
  {
    "Id": 125,
    "Sentence": "Describe to me the person sitting at the end table please",
    "Remarks": null,
    "Command": "Describe(person: sitting, at: end table, to: speaker)"
  },
  {
    "Id": 126,
    "Sentence": "Close the exit door please",
    "Remarks": null,
    "Command": "Close(door: exit)"
  },
  {
    "Id": 127,
    "Sentence": "Meet Mary at the exit, then greet her in the corridor please",
    "Remarks": "corridor\n\t At least three people must be here\nRemarks\n\tThere is only one person at exit\n\n",
    "Command": "Meet(Person(named: Mary, at: exit), movingTo: corridor)"
  },
  {
    "Id": 128,
    "Sentence": "Describe the objects in the cupboard to me please",
    "Remarks": null,
    "Command": "DescribeObjects(at: cupboard, to: me)"
  },
  {
    "Id": 129,
    "Sentence": "Handshake the man dressed in a black shirt in the bedroom please",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(man dressed in a black shirt, in: bedroom), method: handshake)"
  },
  {
    "Id": 130,
    "Sentence": "Could you find the tray in the bedroom",
    "Remarks": null,
    "Command": "Find(object: tray, in: bedroom)"
  },
  {
    "Id": 131,
    "Sentence": "Hand me the snacks at the center desk",
    "Remarks": null,
    "Command": "Bring(category: snacks, from: Location(center, of: desk), to: speaker)"
  },
  {
    "Id": 132,
    "Sentence": "Grasp the fruits from the desk, find Linda in the kitchen, and take the apple from the desk",
    "Remarks": "apple\n\t Place to \n\n",
    "Command": "Sequence(Take(object: fruits, from: desk), Find(Person(Linda, in: kitchen)), Take(object: apple, from: desk))"
  },
  {
    "Id": 133,
    "Sentence": "Could you please look for Mary at the bed, look for a grape juice in the corridor, and locate Mary",
    "Remarks": "Mary\n\t She is sitting at the living room\n\n",
    "Command": "Sequence(Find(Person(Mary, at: bed)), Find(Find(object: grape juice, in: corridor)), Find(Person(Mary)))"
  },
  {
    "Id": 134,
    "Sentence": "Meet Linda at the bookcase, then greet her in the bedroom please",
    "Remarks": "bedroom\n\t At least three people must be here\nRemarks\n\tThere is only one person at bookcase\n\n",
    "Command": "Meet(Person(named: Linda, at: bookcase), movingTo: bedroom)"
  },
  {
    "Id": 135,
    "Sentence": "Tell me how many women in the bedroom are wearing shoes please",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women are wearing shoes, in: bedroom)"
  },
  {
    "Id": 136,
    "Sentence": "Salute the man pointing to the left in the corridor please",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(man pointing to the left, in: corridor), method: salute)"
  },
  {
    "Id": 137,
    "Sentence": "Could you go to the living room, find John, and tell what day is tomorrow",
    "Remarks": "John\n\t He is standing. Place three people in the room\n\n",
    "Command": "Sequence(Find(Person(John, in: living room)), Speak(what day is tomorrow))"
  },
  {
    "Id": 138,
    "Sentence": "Pick up the cloth, look for Francis, and follow her",
    "Remarks": "Francis\n\t She is standing at the bedroom\n\n",
    "Command": "Sequence(Take(todo), Follow(Person(Francis)))"
  },
  {
    "Id": 139,
    "Sentence": "Place the orange in the kitchen done, locate Mary at the dining table, and say the day of the week please",
    "Remarks": null,
    "Command": "Sequence(Bring(object: orange, in: kitchen)), Find(Person(Mary, at: dining table)), Speak(the day of the week))"
  },
  {
    "Id": 140,
    "Sentence": "Go to the corridor, locate the orange, and put it to the dining room",
    "Remarks": null,
    "Command": "Bring(object: orange, in: corridor, to: dining room)"
  },
  {
    "Id": 141,
    "Sentence": "Pinpoint a apple in the dining room, look for William, and locate a apple in the dining room",
    "Remarks": "William\n\t He is standing at the couch\n\n",
    "Command": "Sequence(Find(Find(object: apple, in: dining room)), Find(Person(William)), Find(Find(object: apple, in: dining room)))"
  },
  {
    "Id": 142,
    "Sentence": "Tell me how many yellow orange are in the cupboard",
    "Remarks": null,
    "Command": "Count(object: yellow orange, at: cupboard, reportTo: speaker)"
  },
  {
    "Id": 143,
    "Sentence": "Tell me how many women dressed in white there are in the living room please",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women dressed in white, in: living room)"
  },
  {
    "Id": 144,
    "Sentence": "Find Skyler, guide her to the exit, and place paprika on the bookcase",
    "Remarks": "Skyler\n\t She is lying at the end table\n\n",
    "Command": "Sequence(Guide(Person(Skyler)), Bring(object: paprika, on: bookcase))"
  },
  {
    "Id": 145,
    "Sentence": "Robot please offer something to drink to all the elders pointing to the right in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Serve(to: elders pointing to the right, in: kitchen, somethingTo: drink)"
  },
  {
    "Id": 146,
    "Sentence": "Take the black object from the counter to the bookcase please",
    "Remarks": null,
    "Command": "Bring(object: black object, from: counter, to: counter)"
  },
  {
    "Id": 147,
    "Sentence": "Tell me how many children there are in the bedroom",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children, in: bedroom)"
  },
  {
    "Id": 148,
    "Sentence": "Pour some orange juice in a bowl please",
    "Remarks": null,
    "Command": "Pour(orange juice, in: bowl)"
  },
  {
    "Id": 149,
    "Sentence": "Tell me how many men are pointing to the left in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: men are pointing to the left, in: living room)"
  },
  {
    "Id": 150,
    "Sentence": "Open the corridor door",
    "Remarks": null,
    "Command": "Open(door: corridor)"
  },
  {
    "Id": 151,
    "Sentence": "Enter to the bedroom, pinpoint the orange, and speak",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022the time\u0022\n\n",
    "Command": "Sequence(Find(object: orange, in: bedroom), Speak())"
  },
  {
    "Id": 152,
    "Sentence": "Robot please locate a dish in the bedroom, find Charlie, and follow him",
    "Remarks": "Charlie\n\t He is sitting at the kitchen\n\n",
    "Command": "Sequence(Find(Find(object: dish, in: bedroom)), Follow(Person(Charlie)))"
  },
  {
    "Id": 153,
    "Sentence": "Put the crackers in the living room done, locate Robin in the kitchen, and follow her please",
    "Remarks": null,
    "Command": "Sequence(Bring(object: crackers, in: living room)), Follow(Person(Robin, in: kitchen)))"
  },
  {
    "Id": 154,
    "Sentence": "Robot please tell me how many women in the bedroom are wearing gray",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women are wearing gray, in: bedroom)"
  },
  {
    "Id": 155,
    "Sentence": "Pick up the paprika, bring it to Alex at the end table, and tell the time",
    "Remarks": "paprika\n\t Robot will find it on the storage table\n\n",
    "Command": "Sequence(Bring(object: paprika, from: storage table, to: Person(Alex, at: end table)), Speak(the time))"
  },
  {
    "Id": 156,
    "Sentence": "Robot please deliver me the tallest object from the side table",
    "Remarks": null,
    "Command": "Bring(object: tallest object, from: side table, to: speaker)"
  },
  {
    "Id": 157,
    "Sentence": "Place a cup on the bookcase and a knife on it",
    "Remarks": null,
    "Command": "SetTheTable(using: cup, on: bookcase, place: knife, at: on it)"
  },
  {
    "Id": 158,
    "Sentence": "Could you please offer something to eat to all the women pointing to the right in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Serve(to: women pointing to the right, in: corridor, somethingTo: eat)"
  },
  {
    "Id": 159,
    "Sentence": "Locate Alex at the sink, spot Alex at the sink, and put the paprika in the kitchen done",
    "Remarks": null,
    "Command": "Sequence(Find(Person(Alex, at: sink)), Find(Person(Alex, at: sink)), Bring(object: paprika, in: kitchen)))"
  },
  {
    "Id": 160,
    "Sentence": "Look for Francis in the kitchen, take the paprika from the storage table, and say something please",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022the day of the week\u0022\n\n",
    "Command": "Sequence(Find(Person(Francis, in: kitchen)), Take(object: paprika, from: storage table), Speak())"
  },
  {
    "Id": 161,
    "Sentence": "Find Robert in the bedroom, locate the pringles, and tell a joke",
    "Remarks": "pringles\n\t Robot must place it on the counter\n\n",
    "Command": "Sequence(Find(Person(Robert, in: bedroom)), Find(object: pringles), Speak(a joke))"
  },
  {
    "Id": 162,
    "Sentence": "Pinpoint Patricia at the couch, find Patricia in the dining room, and say something please",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022the day of the month\u0022\n\n",
    "Command": "Sequence(Find(Person(Patricia, at: couch)), Find(Person(Patricia, in: dining room)), Speak())"
  },
  {
    "Id": 163,
    "Sentence": "Serve some coke in a cup please",
    "Remarks": null,
    "Command": "Pour(coke, in: cup)"
  },
  {
    "Id": 164,
    "Sentence": "Serve some coke in a bowl",
    "Remarks": null,
    "Command": "Pour(coke, in: bowl)"
  },
  {
    "Id": 165,
    "Sentence": "Go to the living room, find Patricia, and get the orange",
    "Remarks": "orange\n\t Robot will find it on the storage table\n\n",
    "Command": "Sequence(Find(Person(Patricia, in: living room)), Take(object: orange, from: storage table))"
  },
  {
    "Id": 166,
    "Sentence": "Robot please offer something to eat to all the women pointing to the left in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Serve(to: women pointing to the left, in: kitchen, somethingTo: eat)"
  },
  {
    "Id": 167,
    "Sentence": "Could you please set apple on the sink, pick up the paprika, and go to the sink, look for the bowl, and give it to Jennifer at the bookcase",
    "Remarks": "paprika\n\t Robot will find it on the sink\n\n",
    "Command": "Sequence(Bring(object: apple, on: sink), Bring(object: paprika, from: sink, to: todo))"
  },
  {
    "Id": 168,
    "Sentence": "Tell me how many women are wearing blue in the living room please",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women are wearing blue, in: living room)"
  },
  {
    "Id": 169,
    "Sentence": "Tell me how many cleaning stuff items are in the end table please",
    "Remarks": null,
    "Command": "Count(object: cleaning stuff items, at: end table, reportTo: speaker)"
  },
  {
    "Id": 170,
    "Sentence": "Accompany the person at the sink please",
    "Remarks": "Remarks\n\t The Professional Walker must leave the arena and walk through a crowd of at least 5 people who must not let the robot pass. Once the robot has re-encountered its operator, the Professional Walker must lead the robot to dining room \n\n",
    "Command": "Follow(Person(at: sink))"
  },
  {
    "Id": 171,
    "Sentence": "Robot please leave orange on the side table, pinpoint James at the dishwasher, and say something",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022whether you dream or not on electric sheep\u0022\n\n",
    "Command": "Sequence(Bring(object: orange, on: side table), Find(Person(James, at: dishwasher)), Speak())"
  },
  {
    "Id": 172,
    "Sentence": "Could you describe the person sitting at the exit to the person at the end table",
    "Remarks": null,
    "Command": "Describe(person: sitting, at: exit, to: Person(at: exit)))"
  },
  {
    "Id": 173,
    "Sentence": "Tell me how many people in the kitchen are wearing blue please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: people are wearing blue, in: kitchen)"
  },
  {
    "Id": 174,
    "Sentence": "Could you pour some orange juice in a bowl",
    "Remarks": null,
    "Command": "Pour(orange juice, in: bowl)"
  },
  {
    "Id": 175,
    "Sentence": "Robot please bring me the gray object from the bookcase",
    "Remarks": null,
    "Command": "Bring(object: gray object, from: bookcase, to: speaker)"
  },
  {
    "Id": 176,
    "Sentence": "Locate the tray in the living room",
    "Remarks": null,
    "Command": "Find(object: tray, in: living room)"
  },
  {
    "Id": 177,
    "Sentence": "Robot please set the dish in the kitchen done, locate a dish in the living room, and answer a question",
    "Remarks": null,
    "Command": "Sequence(Bring(object: dish, in: kitchen)), Find(Find(object: dish, in: living room)), Answer(question: question))"
  },
  {
    "Id": 178,
    "Sentence": "Could you tell me how many women are wearing T-shirts in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women are wearing T-shirts, in: dining room)"
  },
  {
    "Id": 179,
    "Sentence": "Get acquainted with Robert at the dining table, then find him in the dining room please",
    "Remarks": "dining room\n\t At least three people must be here\nRemarks\n\tThere is only one person at dining table\n\n",
    "Command": "Meet(Person(named: Robert, at: dining table), movingTo: dining room)"
  },
  {
    "Id": 180,
    "Sentence": "Could you please introduce yourself to the child in the bedroom",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(child, in: bedroom), method: introduce yourself to)"
  },
  {
    "Id": 181,
    "Sentence": "Get acquainted with Alex at the end table, then greet him in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\nRemarks\n\tThere is only one person at end table\n\n",
    "Command": "Meet(Person(named: Alex, at: end table), movingTo: kitchen)"
  },
  {
    "Id": 182,
    "Sentence": "Please tell me how the person standing at the exit looks like",
    "Remarks": null,
    "Command": "Describe(person: standing, at: exit, to: speaker)"
  },
  {
    "Id": 183,
    "Sentence": "Please open the entrance door",
    "Remarks": null,
    "Command": "Open(door: entrance)"
  },
  {
    "Id": 184,
    "Sentence": "Get the apple from the storage table, set it on the bookcase, and say something please",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022your team\u0027s country\u0022\n\n",
    "Command": "Sequence(Bring(object: apple, from: storage table, to: todo), Speak())"
  },
  {
    "Id": 185,
    "Sentence": "Describe the objects in the counter to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: counter, to: me)"
  },
  {
    "Id": 186,
    "Sentence": "Take the orange, look for Elizabeth in the bedroom, and answer a question",
    "Remarks": "orange\n\t Robot will find it on the bookcase\n\n",
    "Command": "Sequence(Take(object: orange, from: bookcase), Find(Person(Elizabeth, in: bedroom)), Answer(question: question))"
  },
  {
    "Id": 187,
    "Sentence": "Tell me how many women are wearing coats in the dining room please",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women are wearing coats, in: dining room)"
  },
  {
    "Id": 188,
    "Sentence": "Describe the objects in the cupboard to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: cupboard, to: me)"
  },
  {
    "Id": 189,
    "Sentence": "Describe the objects in the counter to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: counter, to: me)"
  },
  {
    "Id": 190,
    "Sentence": "Take the snacks at the side table \u0027s middle bottom to the cupboard",
    "Remarks": null,
    "Command": "Bring(category: snacks, from: Location(middle bottom, of: side table), to: side table)"
  },
  {
    "Id": 191,
    "Sentence": "Could you please tell me how many children in the corridor are wearing white",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children are wearing white, in: corridor)"
  },
  {
    "Id": 192,
    "Sentence": "Could you please put sausages on the desk, grasp the paprika, and deliver to the bowl to the person pointing to the right in the kitchen",
    "Remarks": "paprika\n\t Robot will find it on the desk\n\n",
    "Command": "Sequence(Bring(object: sausages, on: desk), Bring(object: paprika, from: desk, to: todo))"
  },
  {
    "Id": 193,
    "Sentence": "Offer something to eat to all the women in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: women, in: dining room, somethingTo: eat)"
  },
  {
    "Id": 194,
    "Sentence": "Could you please hand me some tableware from the microwave",
    "Remarks": null,
    "Command": "Bring(category: tableware, from: microwave, to speaker)"
  },
  {
    "Id": 195,
    "Sentence": "Introduce yourself to the woman pointing to the right in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(woman pointing to the right, in: kitchen), method: introduce yourself to)"
  },
  {
    "Id": 196,
    "Sentence": "Close the exit door please",
    "Remarks": null,
    "Command": "Close(door: exit)"
  },
  {
    "Id": 197,
    "Sentence": "Could you please count the drinks items at the side table and report to me",
    "Remarks": null,
    "Command": "Count(object: drinks items, at: side table, reportTo: speaker)"
  },
  {
    "Id": 198,
    "Sentence": "Please tell me how many elders in the dining room are wearing gray",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: elders are wearing gray, in: dining room)"
  },
  {
    "Id": 199,
    "Sentence": "Could you please pick up the paprika from the dining table, place it on the dining table, and say something",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022what day is tomorrow\u0022\n\n",
    "Command": "Sequence(Bring(object: paprika, from: dining table, to: dining table), Speak())"
  },
  {
    "Id": 200,
    "Sentence": "Grasp the apple, leave the tray on the counter, and say a joke please",
    "Remarks": "apple\n\t Robot will find it on the storage table\n\n",
    "Command": "Sequence(Bring(object: apple, from: storage table, to: counter), Speak(a joke))"
  },
  {
    "Id": 201,
    "Sentence": "Please offer something to eat to all the lying down women in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: lying down women, in: living room, somethingTo: eat)"
  },
  {
    "Id": 202,
    "Sentence": "Navigate to the kitchen, find the apple, and bring it to Mary",
    "Remarks": "Mary\n\t She is waving at the bed\n\n",
    "Command": "Bring(object: apple, in: kitchen, to: Person(Mary))"
  },
  {
    "Id": 203,
    "Sentence": "Could you please go to the corridor, find the orange juice, and look for the orange juice",
    "Remarks": "orange juice\n\t Robot must place it on the desk\n\n",
    "Command": "Sequence(Find(object: orange juice, in: corridor), Find(object: orange juice))"
  },
  {
    "Id": 204,
    "Sentence": "Put a dish on the bookcase and a spoon on it",
    "Remarks": null,
    "Command": "SetTheTable(using: dish, on: bookcase, place: spoon, at: on it)"
  },
  {
    "Id": 205,
    "Sentence": "Come behind the woman wearing a hat in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Follow(Person(woman wearing a hat, in: dining room))"
  },
  {
    "Id": 206,
    "Sentence": "Describe the objects in the side table to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: side table, to: me)"
  },
  {
    "Id": 207,
    "Sentence": "Spot Skyler, guide him to the end table, and place chocolate drink on the storage table",
    "Remarks": "Skyler\n\t He is sitting at the dining table\n\n",
    "Command": "Sequence(Guide(Person(Skyler)), Bring(object: chocolate drink, on: storage table))"
  },
  {
    "Id": 208,
    "Sentence": "Open the corridor door please",
    "Remarks": null,
    "Command": "Open(door: corridor)"
  },
  {
    "Id": 209,
    "Sentence": "Tell me how many gray sausages are in the bookcase please",
    "Remarks": null,
    "Command": "Count(object: gray sausages, at: bookcase, reportTo: speaker)"
  },
  {
    "Id": 210,
    "Sentence": "Tell me how many women there are in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women, in: kitchen)"
  },
  {
    "Id": 211,
    "Sentence": "Could you get the apple from the end table, deliver to it to me, and speak",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022your team\u0027s country\u0022\n\n",
    "Command": "Sequence(Bring(object: apple, from: end table, to: speaker), Speak())"
  },
  {
    "Id": 212,
    "Sentence": "Describe the person standing at the couch to the person at the end table",
    "Remarks": null,
    "Command": "Describe(person: standing, at: couch, to: Person(at: couch)))"
  },
  {
    "Id": 213,
    "Sentence": "Serve some orange juice in a cup",
    "Remarks": null,
    "Command": "Pour(orange juice, in: cup)"
  },
  {
    "Id": 214,
    "Sentence": "Guide the man raising their right arm in the dining room to the exit please",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Guide(Person(man raising their right arm, in: dining room), to: exit)"
  },
  {
    "Id": 215,
    "Sentence": "Could you please enter to the corridor, find Skyler, and answer a question",
    "Remarks": "Skyler\n\t He is sitting. Place three people in the room\n\n",
    "Command": "Sequence(Find(Person(Skyler, in: corridor)), Answer(question: question))"
  },
  {
    "Id": 216,
    "Sentence": "Tell me how many people in the bedroom are wearing orange please",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: people are wearing orange, in: bedroom)"
  },
  {
    "Id": 217,
    "Sentence": "Describe the objects in the storage table to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: storage table, to: me)"
  },
  {
    "Id": 218,
    "Sentence": "Could you open the entrance door",
    "Remarks": null,
    "Command": "Open(door: entrance)"
  },
  {
    "Id": 219,
    "Sentence": "Place a dish on the bookcase and a fork on its left",
    "Remarks": null,
    "Command": "SetTheTable(using: dish, on: bookcase, place: fork, at: on its left)"
  },
  {
    "Id": 220,
    "Sentence": "Could you please hand me some drinks from the basket on the side table",
    "Remarks": null,
    "Command": "Bring(category: drinks, from: basket on the side table, to speaker)"
  },
  {
    "Id": 221,
    "Sentence": "Offer something to eat to all the children in the living room please",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: children, in: living room, somethingTo: eat)"
  },
  {
    "Id": 222,
    "Sentence": "Bring the apple to the slimmest person in the bedroom please",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "Bring(object: apple, to: Person(slimmest person), in: bedroom)"
  },
  {
    "Id": 223,
    "Sentence": "Robot please tell me how the person sitting at the bookcase looks like",
    "Remarks": null,
    "Command": "Describe(person: sitting, at: bookcase, to: speaker)"
  },
  {
    "Id": 224,
    "Sentence": "Locate Linda at the couch, escort her, and answer a question please",
    "Remarks": null,
    "Command": "Sequence(Guide(Person(Linda, at: couch)), Answer(question: question))"
  },
  {
    "Id": 225,
    "Sentence": "Put the coke into the oven",
    "Remarks": null,
    "Command": "Store(object: coke, in: oven)"
  },
  {
    "Id": 226,
    "Sentence": "Tell me how many women are wearing white in the dining room please",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women are wearing white, in: dining room)"
  },
  {
    "Id": 227,
    "Sentence": "Open the entrance door please",
    "Remarks": null,
    "Command": "Open(door: entrance)"
  },
  {
    "Id": 228,
    "Sentence": "Offer something to drink to all the lying down men in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Serve(to: lying down men, in: kitchen, somethingTo: drink)"
  },
  {
    "Id": 229,
    "Sentence": "Please navigate to the living room, look for the cleaning stuff, and look for Robin in the living room",
    "Remarks": null,
    "Command": "Sequence(Find(object: cleaning stuff, in: living room), Find(Person(Robin, in: living room)))"
  },
  {
    "Id": 230,
    "Sentence": "Could you tell me how many women in the kitchen are wearing orange",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women are wearing orange, in: kitchen)"
  },
  {
    "Id": 231,
    "Sentence": "Enter to the bedroom, spot the bowl, and speak please",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022the day of the month\u0022\n\n",
    "Command": "Sequence(Find(object: bowl, in: bedroom), Speak())"
  },
  {
    "Id": 232,
    "Sentence": "Could you please enter to the kitchen, look for Alex, and leave the coke in the living room done",
    "Remarks": null,
    "Command": "Sequence(Find(Person(Alex, in: kitchen)), Bring(object: coke, in: living room)))"
  },
  {
    "Id": 233,
    "Sentence": "Please pick up a snacks from the end table and put it into the bag on the counter",
    "Remarks": null,
    "Command": "Store(category: snacks, from: end table, in: bag on the counter)"
  },
  {
    "Id": 234,
    "Sentence": "Salute the person dressed in a white sweater in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(person dressed in a white sweater, in: kitchen), method: salute)"
  },
  {
    "Id": 235,
    "Sentence": "Locate a paprika in the dining room, look for Robin at the couch, and speak",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022your team\u0027s country\u0022\n\n",
    "Command": "Sequence(Find(Find(object: paprika, in: dining room)), Find(Person(Robin, at: couch)), Speak())"
  },
  {
    "Id": 236,
    "Sentence": "Tell me how many women are pointing to the right in the bedroom",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women are pointing to the right, in: bedroom)"
  },
  {
    "Id": 237,
    "Sentence": "Enter to the bedroom, locate Skyler, and follow him please",
    "Remarks": "Skyler\n\t He is sitting. Place three people in the room\n\n",
    "Command": "Follow(Person(Skyler, in: bedroom))"
  },
  {
    "Id": 238,
    "Sentence": "Could you please put the apple into the fridge",
    "Remarks": null,
    "Command": "Store(object: apple, in: fridge)"
  },
  {
    "Id": 239,
    "Sentence": "Retrieve the apple from the storage table, locate Alex, and accompany him",
    "Remarks": "Alex\n\t He is standing at the bedroom\n\n",
    "Command": "Sequence(Take(object: apple, from: storage table), Follow(Person(Alex)))"
  },
  {
    "Id": 240,
    "Sentence": "Pick up the apple from the bookcase, take the apple from the bookcase from the bookcase to the side table, and spot Linda please",
    "Remarks": "Linda\n\t She is sitting at the kitchen\n\n",
    "Command": "Sequence(Bring(object: apple, from: bookcase, to: bookcase), Find(Person(Linda)))"
  },
  {
    "Id": 241,
    "Sentence": "Salute the child in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(child, in: dining room), method: salute)"
  },
  {
    "Id": 242,
    "Sentence": "Bring me some fruits from the microwave please",
    "Remarks": null,
    "Command": "Bring(category: fruits, from: microwave, to speaker)"
  },
  {
    "Id": 243,
    "Sentence": "Take the fruits from the bookcase, find Alex in the bedroom, and go behind her",
    "Remarks": "apple\n\t Place to \n\n",
    "Command": "Sequence(Take(object: fruits, from: bookcase), Follow(Person(Alex, in: bedroom)))"
  },
  {
    "Id": 244,
    "Sentence": "Could you please pick up the orange from the bookcase, locate Francis at the dishwasher, and find a bowl",
    "Remarks": "bowl\n\t Robot must place it on the bookcase\n\n",
    "Command": "Sequence(Take(object: orange, from: bookcase), Find(Person(Francis, at: dishwasher)), Find(object: bowl))"
  },
  {
    "Id": 245,
    "Sentence": "Meet Elizabeth at the end table and accompany her to the dining room please",
    "Remarks": null,
    "Command": "todo"
  },
  {
    "Id": 246,
    "Sentence": "Count the yellow orange at the counter and report to me please",
    "Remarks": null,
    "Command": "Count(object: yellow orange, at: counter, reportTo: speaker)"
  },
  {
    "Id": 247,
    "Sentence": "Get the apple from the cupboard, place it to the kitchen, and set knife on the cupboard",
    "Remarks": null,
    "Command": "Sequence(Bring(object: apple, from: cupboard, to: kitchen), Bring(object: knife, on: cupboard))"
  },
  {
    "Id": 248,
    "Sentence": "Find Robert, locate a paprika in the living room, and spot Robert in the living room",
    "Remarks": "Robert\n\t He is waving at the corridor\n\n",
    "Command": "Sequence(Find(Person(Robert)), Find(Find(object: paprika, in: living room)), Find(Person(Robert, in: living room)))"
  },
  {
    "Id": 249,
    "Sentence": "Could you tell me how many people there are in the bedroom",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: people, in: bedroom)"
  },
  {
    "Id": 250,
    "Sentence": "Locate Robert in the kitchen, look for Robert, and answer a question",
    "Remarks": "Robert\n\t He is waving at the dining table\n\n",
    "Command": "Sequence(Find(Person(Robert, in: kitchen)), Find(Person(Robert)), Answer(question: question))"
  },
  {
    "Id": 251,
    "Sentence": "Look for a apple, look for Linda at the sink, and guide her to the exit please",
    "Remarks": "apple\n\t Robot must place it on the dining table\n\n",
    "Command": "Sequence(Find(object: apple), Guide(Person(Linda, at: sink)))"
  },
  {
    "Id": 252,
    "Sentence": "Please look for Skyler at the bed, find Skyler, and place apple on the counter",
    "Remarks": "Skyler\n\t He is sitting at the dishwasher\n\n",
    "Command": "Sequence(Find(Person(Skyler, at: bed)), Find(Person(Skyler)), Bring(object: apple, on: counter))"
  },
  {
    "Id": 253,
    "Sentence": "Pick up the bowl, place it on the dining table, and say something please",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022a joke\u0022\n\n",
    "Command": "Sequence(Bring(todo, to: dining table), Speak())"
  },
  {
    "Id": 254,
    "Sentence": "Could you locate Robin at the dining table, place the sausages in the bedroom done, and tell your team\u0027s country",
    "Remarks": null,
    "Command": "Sequence(Find(Person(Robin, at: dining table)), Bring(object: sausages, in: bedroom)), Speak(your team\u0027s country))"
  },
  {
    "Id": 255,
    "Sentence": "Could you locate a paprika in the dining room, find Skyler, and tell the time",
    "Remarks": "Skyler\n\t He is waving at the corridor\n\n",
    "Command": "Sequence(Find(Find(object: paprika, in: dining room)), Find(Person(Skyler)), Speak(the time))"
  },
  {
    "Id": 256,
    "Sentence": "Tell me how many elders in the dining room are pointing to the right please",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: elders are pointing to the right, in: dining room)"
  },
  {
    "Id": 257,
    "Sentence": "Get the orange from the sink, spot Francis, and say your team\u0027s affiliation",
    "Remarks": "Francis\n\t She is sitting at the corridor\n\n",
    "Command": "Sequence(Take(object: orange, from: sink), Find(Person(Francis)), Speak(your team\u0027s affiliation))"
  },
  {
    "Id": 258,
    "Sentence": "Please look for Robin, find Robin at the end table, and pick up the orange from the sink",
    "Remarks": "Robin\n\t He is standing at the bedroom\n\n",
    "Command": "Sequence(Find(Person(Robin)), Find(Person(Robin, at: end table)), Take(object: orange, from: sink))"
  },
  {
    "Id": 259,
    "Sentence": "Robot please locate Robin, pinpoint Robin in the dining room, and find Robin at the sink",
    "Remarks": "Robin\n\t She is sitting at the kitchen\n\n",
    "Command": "Sequence(Find(Person(Robin)), Find(Person(Robin, in: dining room)), Find(Person(Robin, at: sink)))"
  },
  {
    "Id": 260,
    "Sentence": "Put a cup on the end table and a spoon on it",
    "Remarks": null,
    "Command": "SetTheTable(using: cup, on: end table, place: spoon, at: on it)"
  },
  {
    "Id": 261,
    "Sentence": "Could you please describe the objects in the cupboard to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: cupboard, to: me)"
  },
  {
    "Id": 262,
    "Sentence": "Count the fruits items at the counter and inform me",
    "Remarks": null,
    "Command": "Count(object: fruits items, at: counter, reportTo: speaker)"
  },
  {
    "Id": 263,
    "Sentence": "Offer something to drink to all the children wearing shoes in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Serve(to: children wearing shoes, in: corridor, somethingTo: drink)"
  },
  {
    "Id": 264,
    "Sentence": "Bring me the cleaning stuff at the center bookcase please",
    "Remarks": null,
    "Command": "Bring(category: cleaning stuff, from: Location(center, of: bookcase), to: speaker)"
  },
  {
    "Id": 265,
    "Sentence": "Could you tell me how the person sitting at the dishwasher looks like",
    "Remarks": null,
    "Command": "Describe(person: sitting, at: dishwasher, to: speaker)"
  },
  {
    "Id": 266,
    "Sentence": "Count the red orange at the bookcase and inform me please",
    "Remarks": null,
    "Command": "Count(object: red orange, at: bookcase, reportTo: speaker)"
  },
  {
    "Id": 267,
    "Sentence": "Enter to the dining room, find Charlie, and lead her to the dining room please",
    "Remarks": "Charlie\n\t She is waving. Place three people in the room\n\n",
    "Command": "Guide(Person(Charlie, in: dining room), to: dining room)"
  },
  {
    "Id": 268,
    "Sentence": "Follow Alex from the couch to the living room please",
    "Remarks": null,
    "Command": "todo"
  },
  {
    "Id": 269,
    "Sentence": "Retrieve the paprika, retrieve the tray, and answer a question please",
    "Remarks": "paprika\n\t Robot will find it on the storage table\n\n",
    "Command": "Sequence(Take(object: paprika, from: storage table), Take(todo), Answer(question: question))"
  },
  {
    "Id": 270,
    "Sentence": "Could you please describe the objects in the dining table to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: dining table, to: me)"
  },
  {
    "Id": 271,
    "Sentence": "Tell me how many children in the kitchen are lying down please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children are lying down, in: kitchen)"
  },
  {
    "Id": 272,
    "Sentence": "Find Charlie in the dining room, follow her, and pinpoint Charlie",
    "Remarks": "Charlie\n\t She is standing at the kitchen\n\n",
    "Command": "Sequence(Follow(Person(Charlie, in: dining room)), Find(Person(Charlie)))"
  },
  {
    "Id": 273,
    "Sentence": "Could you bring me some food from the fridge",
    "Remarks": null,
    "Command": "Bring(category: food, from: fridge, to speaker)"
  },
  {
    "Id": 274,
    "Sentence": "Open the exit door",
    "Remarks": null,
    "Command": "Open(door: exit)"
  },
  {
    "Id": 275,
    "Sentence": "Robot please pick up a cleaning stuff from the desk and put it into the fridge",
    "Remarks": null,
    "Command": "Store(category: cleaning stuff, from: desk, in: fridge)"
  },
  {
    "Id": 276,
    "Sentence": "Take the cutlery at the sink \u0027s top to the cupboard",
    "Remarks": null,
    "Command": "Bring(category: cutlery, from: Location(top, of: sink), to: sink)"
  },
  {
    "Id": 277,
    "Sentence": "Say hello to the person dressed in a white sweater in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(person dressed in a white sweater, in: kitchen), method: say hello to)"
  },
  {
    "Id": 278,
    "Sentence": "Offer something to eat to all the people pointing to the right in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Serve(to: people pointing to the right, in: corridor, somethingTo: eat)"
  },
  {
    "Id": 279,
    "Sentence": "Look for Michael, look for a paprika in the bedroom, and locate a paprika in the bedroom",
    "Remarks": "Michael\n\t He is waving at the dining table\n\n",
    "Command": "Sequence(Find(Person(Michael)), Find(Find(object: paprika, in: bedroom)), Find(Find(object: paprika, in: bedroom)))"
  },
  {
    "Id": 280,
    "Sentence": "Get the paprika, take the paprika from the end table, and look for Francis at the exit please",
    "Remarks": "paprika\n\t Robot will find it on the end table\n\n",
    "Command": "Sequence(Take(object: paprika, from: end table), Take(object: paprika, from: end table), Find(Person(Francis, at: exit)))"
  },
  {
    "Id": 281,
    "Sentence": "Open the entrance door",
    "Remarks": null,
    "Command": "Open(door: entrance)"
  },
  {
    "Id": 282,
    "Sentence": "Could you please put the crackers into the oven",
    "Remarks": null,
    "Command": "Store(object: crackers, in: oven)"
  },
  {
    "Id": 283,
    "Sentence": "Deliver to me some orange juice in a bowl please",
    "Remarks": null,
    "Command": "Pour(orange juice, in: bowl)"
  },
  {
    "Id": 284,
    "Sentence": "Find Alex at the end table, pinpoint a cloth, and say your team\u0027s affiliation",
    "Remarks": "cloth\n\t Robot must place it on the storage table\n\n",
    "Command": "Sequence(Find(Person(Alex, at: end table)), Find(object: cloth), Speak(your team\u0027s affiliation))"
  },
  {
    "Id": 285,
    "Sentence": "Could you tell me how the person standing at the desk looks like",
    "Remarks": null,
    "Command": "Describe(person: standing, at: desk, to: speaker)"
  },
  {
    "Id": 286,
    "Sentence": "Tell me how many men in the corridor are wearing blue",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: men are wearing blue, in: corridor)"
  },
  {
    "Id": 287,
    "Sentence": "Could you locate Robin at the dishwasher, escort him, and look for Robin in the bedroom",
    "Remarks": null,
    "Command": "Sequence(Guide(Person(Robin, at: dishwasher)), Find(Person(Robin, in: bedroom)))"
  },
  {
    "Id": 288,
    "Sentence": "Locate William at the bed, escort him to the bed, and speak",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022the day of the week\u0022\n\n",
    "Command": "Sequence(Guide(Person(William, at: bed)), Speak())"
  },
  {
    "Id": 289,
    "Sentence": "Could you tell me how many women dressed in yellow there are in the bedroom",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women dressed in yellow, in: bedroom)"
  },
  {
    "Id": 290,
    "Sentence": "Close the corridor door",
    "Remarks": null,
    "Command": "Close(door: corridor)"
  },
  {
    "Id": 291,
    "Sentence": "Enter to the dining room, locate the food, and take the tray",
    "Remarks": null,
    "Command": "Sequence(Find(object: food, in: dining room), Take(todo))"
  },
  {
    "Id": 292,
    "Sentence": "Retrieve the fruits from the storage table, hand the bowl to me, and say whether you dream or not on electric sheep",
    "Remarks": "paprika\n\t Place to \n\n",
    "Command": "Sequence(Bring(object: fruits, from: storage table, to: todo), Speak(whether you dream or not on electric sheep))"
  },
  {
    "Id": 293,
    "Sentence": "Locate a crackers, place crackers on the end table, and place crackers on the end table please",
    "Remarks": "crackers\n\t Robot must place it on the end table\n\n",
    "Command": "Sequence(Find(object: crackers), Bring(object: crackers, on: end table), Bring(object: crackers, on: end table))"
  },
  {
    "Id": 294,
    "Sentence": "Contact William at the dishwasher, then greet him in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\nRemarks\n\tThere is only one person at dishwasher\n\n",
    "Command": "Meet(Person(named: William, at: dishwasher), movingTo: corridor)"
  },
  {
    "Id": 295,
    "Sentence": "Take the containers at the dining table \u0027s center to the cupboard",
    "Remarks": null,
    "Command": "Bring(category: containers, from: Location(center, of: dining table), to: dining table)"
  },
  {
    "Id": 296,
    "Sentence": "Tell me how many elders are wearing blue in the dining room please",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: elders are wearing blue, in: dining room)"
  },
  {
    "Id": 297,
    "Sentence": "Get the apple from the storage table, put the orange juice on the storage table, and speak please",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022the day of the month\u0022\n\n",
    "Command": "Sequence(Bring(object: apple, from: storage table, to: storage table), Speak())"
  },
  {
    "Id": 298,
    "Sentence": "Take the apple from the storage table, find Skyler, and answer a question",
    "Remarks": "Skyler\n\t She is standing at the bookcase\n\n",
    "Command": "Sequence(Take(object: apple, from: storage table), Find(Person(Skyler)), Answer(question: question))"
  },
  {
    "Id": 299,
    "Sentence": "Bring the orange to the oldest man in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Bring(object: orange, to: Person(oldest man), in: dining room)"
  },
  {
    "Id": 300,
    "Sentence": "Tell me how many men are sitting in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: men are sitting, in: kitchen)"
  },
  {
    "Id": 301,
    "Sentence": "Robot please close the entrance door",
    "Remarks": null,
    "Command": "Close(door: entrance)"
  },
  {
    "Id": 302,
    "Sentence": "Could you please close the entrance door",
    "Remarks": null,
    "Command": "Close(door: entrance)"
  },
  {
    "Id": 303,
    "Sentence": "Look for a paprika in the dining room, find Skyler, and say a joke",
    "Remarks": "Skyler\n\t She is lying at the bookcase\n\n",
    "Command": "Sequence(Find(Find(object: paprika, in: dining room)), Find(Person(Skyler)), Speak(a joke))"
  },
  {
    "Id": 304,
    "Sentence": "Get the apple, bring the bowl to me, and spot Skyler at the sink",
    "Remarks": "apple\n\t Robot will find it on the bookcase\n\n",
    "Command": "Sequence(Bring(object: apple, from: bookcase, to: todo), Find(Person(Skyler, at: sink)))"
  },
  {
    "Id": 305,
    "Sentence": "Please take the food at the side table \u0027s left to the cupboard",
    "Remarks": null,
    "Command": "Bring(category: food, from: Location(left, of: side table), to: side table)"
  },
  {
    "Id": 306,
    "Sentence": "Could you look for Francis at the dishwasher, pinpoint Francis at the dishwasher, and speak",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022the day of the week\u0022\n\n",
    "Command": "Sequence(Find(Person(Francis, at: dishwasher)), Find(Person(Francis, at: dishwasher)), Speak())"
  },
  {
    "Id": 307,
    "Sentence": "Find Robin in the kitchen, leave the apple in the living room done, and leave apple on the bookcase please",
    "Remarks": null,
    "Command": "Sequence(Find(Person(Robin, in: kitchen)), Bring(object: apple, in: living room)), Bring(object: apple, on: bookcase))"
  },
  {
    "Id": 308,
    "Sentence": "Tell me how many children are raising their right arm in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children are raising their right arm, in: kitchen)"
  },
  {
    "Id": 309,
    "Sentence": "Get the orange, put the coke on the storage table, and locate Elizabeth at the desk",
    "Remarks": "orange\n\t Robot will find it on the counter\n\n",
    "Command": "Sequence(Bring(object: orange, from: counter, to: storage table), Find(Person(Elizabeth, at: desk)))"
  },
  {
    "Id": 310,
    "Sentence": "Get the bowl, locate a paprika in the bedroom, and find James please",
    "Remarks": "James\n\t He is waving at the bookcase\n\n",
    "Command": "Sequence(Take(todo), Find(Find(object: paprika, in: bedroom)), Find(Person(James)))"
  },
  {
    "Id": 311,
    "Sentence": "Take the cleaning stuff at the dining table \u0027s center to the end table please",
    "Remarks": null,
    "Command": "Bring(category: cleaning stuff, from: Location(center, of: dining table), to: dining table)"
  },
  {
    "Id": 312,
    "Sentence": "Describe the person standing at the bookcase to me please",
    "Remarks": null,
    "Command": "Describe(person: standing, at: bookcase, to: speaker)"
  },
  {
    "Id": 313,
    "Sentence": "Could you enter to the living room, locate the fruits, and find a apple in the living room",
    "Remarks": null,
    "Command": "Sequence(Find(object: fruits, in: living room), Find(Find(object: apple, in: living room)))"
  },
  {
    "Id": 314,
    "Sentence": "Tell me how many people are wearing yellow in the corridor please",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: people are wearing yellow, in: corridor)"
  },
  {
    "Id": 315,
    "Sentence": "Locate Francis at the bed, place a cleaning stuff on the counter done, and find Francis at the bed",
    "Remarks": "cloth\n\t Place 3 objects of the same category at counter\n\n",
    "Command": "Sequence(Find(Person(Francis, at: bed)), Bring(object: cleaning stuff, on: counter), Find(Person(Francis, at: bed)))"
  },
  {
    "Id": 316,
    "Sentence": "Robot please spot the basket in the corridor",
    "Remarks": null,
    "Command": "Find(object: basket, in: corridor)"
  },
  {
    "Id": 317,
    "Sentence": "Could you please set a cup on the bookcase and a knife in it",
    "Remarks": null,
    "Command": "SetTheTable(using: cup, on: bookcase, place: knife, at: in it)"
  },
  {
    "Id": 318,
    "Sentence": "Pick up a drinks from the dining table and put it into the fridge please",
    "Remarks": null,
    "Command": "Store(category: drinks, from: dining table, in: fridge)"
  },
  {
    "Id": 319,
    "Sentence": "Enter to the dining room, look for Francis, and escort her",
    "Remarks": null,
    "Command": "Guide(Person(Francis, in: dining room))"
  },
  {
    "Id": 320,
    "Sentence": "Look for a paprika, take the orange, and get the tray to the sink please",
    "Remarks": "paprika\n\t Robot must place it on the side table\n\n",
    "Command": "Sequence(Find(object: paprika), Bring(todo, to: sink))"
  },
  {
    "Id": 321,
    "Sentence": "Find Skyler, locate a knife in the dining room, and answer a question please",
    "Remarks": "Skyler\n\t He is waving at the sink\n\n",
    "Command": "Sequence(Find(Person(Skyler)), Find(Find(object: knife, in: dining room)), Answer(question: question))"
  },
  {
    "Id": 322,
    "Sentence": "Escort the woman waving in the dining room to the exit",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Guide(Person(woman waving, in: dining room), to: exit)"
  },
  {
    "Id": 323,
    "Sentence": "Robot please grasp the paprika from the end table, hand it to John, and answer a question",
    "Remarks": "John\n\t He is waving at the entrance\n\n",
    "Command": "Sequence(Bring(object: paprika, from: end table, to: Person(John)), Answer(question: question))"
  },
  {
    "Id": 324,
    "Sentence": "Deliver me some containers from the oven",
    "Remarks": null,
    "Command": "Bring(category: containers, from: oven, to speaker)"
  },
  {
    "Id": 325,
    "Sentence": "Find Jennifer, conduct her to the dishwasher, and look for a paprika in the bedroom please",
    "Remarks": "Jennifer\n\t She is lying at the couch\n\n",
    "Command": "Sequence(Guide(Person(Jennifer)), Find(Find(object: paprika, in: bedroom)))"
  },
  {
    "Id": 326,
    "Sentence": "Offer something to drink to all the people raising their left arm in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: people raising their left arm, in: living room, somethingTo: drink)"
  },
  {
    "Id": 327,
    "Sentence": "Meet Charlie at the exit and go behind her",
    "Remarks": "Remarks\n\t Follow Charlie to the kitchen\n\n",
    "Command": "todo"
  },
  {
    "Id": 328,
    "Sentence": "Please bring the apple to the fattest woman in the bedroom",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "Bring(object: apple, to: Person(fattest woman), in: bedroom)"
  },
  {
    "Id": 329,
    "Sentence": "Robot please deliver me some fruits from the microwave",
    "Remarks": null,
    "Command": "Bring(category: fruits, from: microwave, to speaker)"
  },
  {
    "Id": 330,
    "Sentence": "Could you please tell me how the person standing at the dishwasher looks like",
    "Remarks": null,
    "Command": "Describe(person: standing, at: dishwasher, to: speaker)"
  },
  {
    "Id": 331,
    "Sentence": "Could you put a cup on the side table and a spoon on its right",
    "Remarks": null,
    "Command": "SetTheTable(using: cup, on: side table, place: spoon, at: on its right)"
  },
  {
    "Id": 332,
    "Sentence": "Offer something to eat to all the people wearing jackets in the corridor please",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Serve(to: people wearing jackets, in: corridor, somethingTo: eat)"
  },
  {
    "Id": 333,
    "Sentence": "Retrieve the apple, spot John at the dishwasher, and answer a question please",
    "Remarks": "apple\n\t Robot will find it on the storage table\n\n",
    "Command": "Sequence(Take(object: apple, from: storage table), Find(Person(John, at: dishwasher)), Answer(question: question))"
  },
  {
    "Id": 334,
    "Sentence": "Enter to the corridor, locate Alex, and look for a potato chips in the corridor",
    "Remarks": "Alex\n\t She is waving. Place three people in the room\n\n",
    "Command": "Sequence(Find(Person(Alex, in: corridor)), Find(Find(object: potato chips, in: corridor)))"
  },
  {
    "Id": 335,
    "Sentence": "Place cereal on the end table, look for a cereal in the dining room, and locate Francis",
    "Remarks": "Francis\n\t She is standing at the end table\n\n",
    "Command": "Sequence(Bring(object: cereal, on: end table), Find(Find(object: cereal, in: dining room)), Find(Person(Francis)))"
  },
  {
    "Id": 336,
    "Sentence": "Tell me how many elders wearing pants there are in the bedroom",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: elders wearing pants, in: bedroom)"
  },
  {
    "Id": 337,
    "Sentence": "Robot please describe the person lying down at the exit to the person at the bookcase",
    "Remarks": null,
    "Command": "Describe(person: lying down, at: exit, to: Person(at: exit)))"
  },
  {
    "Id": 338,
    "Sentence": "Could you tell me how many children are pointing to the right in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children are pointing to the right, in: kitchen)"
  },
  {
    "Id": 339,
    "Sentence": "Robot please look for a orange in the corridor, pick up the fruits from the side table, and grasp the apple from the side table",
    "Remarks": "apple\n\t Place to \n\n",
    "Command": "Sequence(Find(Find(object: orange, in: corridor)), Take(object: fruits, from: side table), Take(object: apple, from: side table))"
  },
  {
    "Id": 340,
    "Sentence": "Could you please get the apple, find Patricia at the exit, and answer a question",
    "Remarks": "apple\n\t Robot will find it on the desk\n\n",
    "Command": "Sequence(Take(object: apple, from: desk), Find(Person(Patricia, at: exit)), Answer(question: question))"
  },
  {
    "Id": 341,
    "Sentence": "Grasp the fruits from the bookcase, get the orange from the bookcase, and navigate to the bookcase, locate the cup, and put it on the storage table",
    "Remarks": "orange\n\t Place to \n\n",
    "Command": "Sequence(Take(object: fruits, from: bookcase), Bring(object: orange, from: bookcase, to: todo))"
  },
  {
    "Id": 342,
    "Sentence": "Deliver to me some chocolate drink in a bowl please",
    "Remarks": null,
    "Command": "Pour(chocolate drink, in: bowl)"
  },
  {
    "Id": 343,
    "Sentence": "Bring the sausages to the tallest person in the living room please",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Bring(object: sausages, to: Person(tallest person), in: living room)"
  },
  {
    "Id": 344,
    "Sentence": "Please look for Alex in the dining room, locate Alex at the bed, and say something",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022something about yourself\u0022\n\n",
    "Command": "Sequence(Find(Person(Alex, in: dining room)), Find(Person(Alex, at: bed)), Speak())"
  },
  {
    "Id": 345,
    "Sentence": "Place the apple in the living room done, spot a apple in the bedroom, and tell your team\u0027s affiliation",
    "Remarks": null,
    "Command": "Sequence(Bring(object: apple, in: living room)), Find(Find(object: apple, in: bedroom)), Speak(your team\u0027s affiliation))"
  },
  {
    "Id": 346,
    "Sentence": "Grasp the paprika, leave it on the bookcase, and answer a question",
    "Remarks": "paprika\n\t Robot will find it on the sink\n\n",
    "Command": "Sequence(Bring(object: paprika, from: sink, to: todo), Answer(question: question))"
  },
  {
    "Id": 347,
    "Sentence": "Pick up the fruits from the bookcase, place it on the bookcase, and look for James in the dining room please",
    "Remarks": "paprika\n\t Place to \n\n",
    "Command": "Sequence(Bring(object: fruits, from: bookcase, to: bookcase), Find(Person(James, in: dining room)))"
  },
  {
    "Id": 348,
    "Sentence": "Robot please tell me how many men are wearing shirts in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: men are wearing shirts, in: kitchen)"
  },
  {
    "Id": 349,
    "Sentence": "Spot the tray in the bedroom",
    "Remarks": null,
    "Command": "Find(object: tray, in: bedroom)"
  },
  {
    "Id": 350,
    "Sentence": "Tell me how many children are pointing to the right in the living room please",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children are pointing to the right, in: living room)"
  },
  {
    "Id": 351,
    "Sentence": "Tell me how many women wearing jackets there are in the bedroom",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women wearing jackets, in: bedroom)"
  },
  {
    "Id": 352,
    "Sentence": "Look for Linda in the dining room, find Linda at the bed, and escort her please",
    "Remarks": null,
    "Command": "Sequence(Find(Person(Linda, in: dining room)), Guide(Person(Linda, at: bed)))"
  },
  {
    "Id": 353,
    "Sentence": "Tell me how many elders are wearing gray in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: elders are wearing gray, in: kitchen)"
  },
  {
    "Id": 354,
    "Sentence": "Could you please enter to the corridor, look for the food, and hand the tray to the person raising their right arm in the living room",
    "Remarks": null,
    "Command": "Bring(object: food, in: corridor, to: todo)"
  },
  {
    "Id": 355,
    "Sentence": "Pour some sprite in a bowl please",
    "Remarks": null,
    "Command": "Pour(sprite, in: bowl)"
  },
  {
    "Id": 356,
    "Sentence": "Tell me how many elders are sitting in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: elders are sitting, in: kitchen)"
  },
  {
    "Id": 357,
    "Sentence": "Tell me how many children are standing in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children are standing, in: kitchen)"
  },
  {
    "Id": 358,
    "Sentence": "Could you open the corridor door",
    "Remarks": null,
    "Command": "Open(door: corridor)"
  },
  {
    "Id": 359,
    "Sentence": "Locate the basket in the dining room",
    "Remarks": null,
    "Command": "Find(object: basket, in: dining room)"
  },
  {
    "Id": 360,
    "Sentence": "Please count the black tableware objects at the end table and inform me",
    "Remarks": null,
    "Command": "Count(object: black tableware objects, at: end table, reportTo: speaker)"
  },
  {
    "Id": 361,
    "Sentence": "Robot please offer something to drink to all the men wearing shoes in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: men wearing shoes, in: living room, somethingTo: drink)"
  },
  {
    "Id": 362,
    "Sentence": "Look for Mary at the couch, locate a coke in the living room, and locate Mary please",
    "Remarks": "Mary\n\t She is waving at the entrance\n\n",
    "Command": "Sequence(Find(Person(Mary, at: couch)), Find(Find(object: coke, in: living room)), Find(Person(Mary)))"
  },
  {
    "Id": 363,
    "Sentence": "Enter to the kitchen, find Robin, and find Robin please",
    "Remarks": "Robin\n\t He is lying at the dishwasher\n\n",
    "Command": "Sequence(Find(Person(Robin, in: kitchen)), Find(Person(Robin)))"
  },
  {
    "Id": 364,
    "Sentence": "Tell me how many elders are pointing to the right in the bedroom please",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: elders are pointing to the right, in: bedroom)"
  },
  {
    "Id": 365,
    "Sentence": "Tell me how many people dressed in gray there are in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: people dressed in gray, in: dining room)"
  },
  {
    "Id": 366,
    "Sentence": "Offer something to eat to all the women in the living room please",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: women, in: living room, somethingTo: eat)"
  },
  {
    "Id": 367,
    "Sentence": "Could you please offer something to eat to all the people pointing to the right in the bedroom",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "Serve(to: people pointing to the right, in: bedroom, somethingTo: eat)"
  },
  {
    "Id": 368,
    "Sentence": "Get to know Michael at the sink, then find him in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\nRemarks\n\tThere is only one person at sink\n\n",
    "Command": "Meet(Person(named: Michael, at: sink), movingTo: kitchen)"
  },
  {
    "Id": 369,
    "Sentence": "Get the orange, navigate to the cupboard, look for the cloth, and put it on the cupboard, and answer a question please",
    "Remarks": "orange\n\t Robot will find it on the cupboard\n\n",
    "Command": "Sequence(Bring(object: orange, from: cupboard, to: todo), Answer(question: question))"
  },
  {
    "Id": 370,
    "Sentence": "Bring me some cutlery from the microwave",
    "Remarks": null,
    "Command": "Bring(category: cutlery, from: microwave, to speaker)"
  },
  {
    "Id": 371,
    "Sentence": "Close the corridor door",
    "Remarks": null,
    "Command": "Close(door: corridor)"
  },
  {
    "Id": 372,
    "Sentence": "Give me some chocolate drink in a bowl please",
    "Remarks": null,
    "Command": "Pour(chocolate drink, in: bowl)"
  },
  {
    "Id": 373,
    "Sentence": "Open the entrance door",
    "Remarks": null,
    "Command": "Open(door: entrance)"
  },
  {
    "Id": 374,
    "Sentence": "Tell me how many men are wearing red in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: men are wearing red, in: dining room)"
  },
  {
    "Id": 375,
    "Sentence": "Locate a sprite in the bedroom, grasp the apple, and get the apple from the dining table please",
    "Remarks": "apple\n\t Robot will find it on the dining table\n\n",
    "Command": "Sequence(Find(Find(object: sprite, in: bedroom)), Take(object: apple, from: dining table), Take(object: apple, from: dining table))"
  },
  {
    "Id": 376,
    "Sentence": "Bring the paprika to the person dressed in an orange jacket in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Bring(object: paprika, to: Person(person dressed in an orange jacket), in: kitchen)"
  },
  {
    "Id": 377,
    "Sentence": "Please go to the corridor, locate the cleaning stuff, and put it on the counter",
    "Remarks": null,
    "Command": "Bring(object: cleaning stuff, in: corridor, to: todo)"
  },
  {
    "Id": 378,
    "Sentence": "Enter to the kitchen, locate the fruits, and tell the day of the week",
    "Remarks": null,
    "Command": "Sequence(Find(object: fruits, in: kitchen), Speak(the day of the week))"
  },
  {
    "Id": 379,
    "Sentence": "Robot please get to know Charlie at the dining table, then find him in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\nRemarks\n\tThere is only one person at dining table\n\n",
    "Command": "Meet(Person(named: Charlie, at: dining table), movingTo: dining room)"
  },
  {
    "Id": 380,
    "Sentence": "Could you please bring me something in a bowl",
    "Remarks": null,
    "Command": "BringSomething(containedIn: bowl, to: speaker)"
  },
  {
    "Id": 381,
    "Sentence": "Offer something to eat to all the children waving in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Serve(to: children waving, in: corridor, somethingTo: eat)"
  },
  {
    "Id": 382,
    "Sentence": "Place apple on the dining table, spot Robin in the dining room, and say something",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022something about yourself\u0022\n\n",
    "Command": "Sequence(Bring(object: apple, on: dining table), Find(Person(Robin, in: dining room)), Speak())"
  },
  {
    "Id": 383,
    "Sentence": "Locate John at the end table, escort him, and tell your team\u0027s affiliation please",
    "Remarks": null,
    "Command": "Sequence(Guide(Person(John, at: end table)), Speak(your team\u0027s affiliation))"
  },
  {
    "Id": 384,
    "Sentence": "Put a cup on the dining table and a knife on its left please",
    "Remarks": null,
    "Command": "SetTheTable(using: cup, on: dining table, place: knife, at: on its left)"
  },
  {
    "Id": 385,
    "Sentence": "Open the corridor door please",
    "Remarks": null,
    "Command": "Open(door: corridor)"
  },
  {
    "Id": 386,
    "Sentence": "Could you please serve some sprite in a bowl",
    "Remarks": null,
    "Command": "Pour(sprite, in: bowl)"
  },
  {
    "Id": 387,
    "Sentence": "Salute the fattest woman in the living room please",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(fattest woman, in: living room), method: salute)"
  },
  {
    "Id": 388,
    "Sentence": "Tell me how many elders are wearing yellow in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: elders are wearing yellow, in: dining room)"
  },
  {
    "Id": 389,
    "Sentence": "Could you please serve some coke in a bowl",
    "Remarks": null,
    "Command": "Pour(coke, in: bowl)"
  },
  {
    "Id": 390,
    "Sentence": "Could you please count the orange dish at the storage table and inform me",
    "Remarks": null,
    "Command": "Count(object: orange dish, at: storage table, reportTo: speaker)"
  },
  {
    "Id": 391,
    "Sentence": "Follow the person at the exit",
    "Remarks": "Remarks\n\t The Professional Walker must leave the arena and walk through a crowd of at least 5 people who must not let the robot pass. Once the robot has re-encountered its operator, the Professional Walker must lead the robot to kitchen \n\n",
    "Command": "Follow(Person(at: exit))"
  },
  {
    "Id": 392,
    "Sentence": "Could you locate the apple, locate Skyler at the dining table, and pinpoint Skyler at the dining table",
    "Remarks": "apple\n\t Robot must place it on the cupboard\n\n",
    "Command": "Sequence(Find(object: apple), Find(Person(Skyler, at: dining table)), Find(Person(Skyler, at: dining table)))"
  },
  {
    "Id": 393,
    "Sentence": "Open the exit door",
    "Remarks": null,
    "Command": "Open(door: exit)"
  },
  {
    "Id": 394,
    "Sentence": "Please tell me how many people in the living room are wearing black",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: people are wearing black, in: living room)"
  },
  {
    "Id": 395,
    "Sentence": "Offer something to drink to all the men dressed in yellow in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Serve(to: men dressed in yellow, in: kitchen, somethingTo: drink)"
  },
  {
    "Id": 396,
    "Sentence": "Tell me how many children dressed in gray there are in the living room please",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children dressed in gray, in: living room)"
  },
  {
    "Id": 397,
    "Sentence": "Could you please look for Alex at the entrance, escort her, and answer a question",
    "Remarks": null,
    "Command": "Sequence(Guide(Person(Alex, at: entrance)), Answer(question: question))"
  },
  {
    "Id": 398,
    "Sentence": "Could you tell me how many children in the dining room are wearing orange",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children are wearing orange, in: dining room)"
  },
  {
    "Id": 399,
    "Sentence": "Robot please meet Linda at the end table and follow her to the living room",
    "Remarks": null,
    "Command": "todo"
  },
  {
    "Id": 400,
    "Sentence": "Greet the man wearing a hat in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(man wearing a hat, in: kitchen), method: greet)"
  },
  {
    "Id": 401,
    "Sentence": "Describe the objects in the bookcase to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: bookcase, to: me)"
  },
  {
    "Id": 402,
    "Sentence": "Deliver me some cleaning stuff from the fridge",
    "Remarks": null,
    "Command": "Bring(category: cleaning stuff, from: fridge, to speaker)"
  },
  {
    "Id": 403,
    "Sentence": "Could you look for a orange in the kitchen, look for Mary at the bed, and say something",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022the day of the week\u0022\n\n",
    "Command": "Sequence(Find(Find(object: orange, in: kitchen)), Find(Person(Mary, at: bed)), Speak())"
  },
  {
    "Id": 404,
    "Sentence": "Deliver me something in a cup",
    "Remarks": null,
    "Command": "BringSomething(containedIn: cup, to: speaker)"
  },
  {
    "Id": 405,
    "Sentence": "Robot please salute the person pointing to the left in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(person pointing to the left, in: kitchen), method: salute)"
  },
  {
    "Id": 406,
    "Sentence": "Say hello to the person raising their right arm in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(person raising their right arm, in: kitchen), method: say hello to)"
  },
  {
    "Id": 407,
    "Sentence": "Accompany the person at the end table to the exit",
    "Remarks": "Remarks\n\t All doors between end table and the target location are closed, as well as all paths to get there are blocked. \n\n",
    "Command": "Guide(Person(at: end table), to: exit)"
  },
  {
    "Id": 408,
    "Sentence": "Please open the corridor door",
    "Remarks": null,
    "Command": "Open(door: corridor)"
  },
  {
    "Id": 409,
    "Sentence": "Robot please leave a dish on the side table and a knife on its right",
    "Remarks": null,
    "Command": "SetTheTable(using: dish, on: side table, place: knife, at: on its right)"
  },
  {
    "Id": 410,
    "Sentence": "Pour some chocolate drink in a bowl please",
    "Remarks": null,
    "Command": "Pour(chocolate drink, in: bowl)"
  },
  {
    "Id": 411,
    "Sentence": "Place dish on the sink, pinpoint the dish, and answer a question",
    "Remarks": "dish\n\t Robot must place it on the sink\n\n",
    "Command": "Sequence(Bring(object: dish, on: sink), Find(object: dish), Answer(question: question))"
  },
  {
    "Id": 412,
    "Sentence": "Find a apple in the living room, spot Jennifer in the living room, and locate a apple please",
    "Remarks": "apple\n\t Robot must place it on the end table\n\n",
    "Command": "Sequence(Find(Find(object: apple, in: living room)), Find(Person(Jennifer, in: living room)), Find(object: apple))"
  },
  {
    "Id": 413,
    "Sentence": "Put sprite on the sink, pinpoint Alex, and tell what day is tomorrow please",
    "Remarks": "Alex\n\t He is lying at the bookcase\n\n",
    "Command": "Sequence(Bring(object: sprite, on: sink), Find(Person(Alex)), Speak(what day is tomorrow))"
  },
  {
    "Id": 414,
    "Sentence": "Robot please retrieve the paprika, leave it on the side table, and locate Robert in the dining room",
    "Remarks": "paprika\n\t Robot will find it on the side table\n\n",
    "Command": "Sequence(Bring(object: paprika, from: side table, to: side table), Find(Person(Robert, in: dining room)))"
  },
  {
    "Id": 415,
    "Sentence": "Pick up the apple from the storage table, grasp the orange, and leave it to the kitchen please",
    "Remarks": null,
    "Command": "Sequence(Take(object: apple, from: storage table), Bring(todo, to: kitchen))"
  },
  {
    "Id": 416,
    "Sentence": "Locate Robin at the exit, look for Robin at the exit, and locate the potato chips",
    "Remarks": "potato chips\n\t Robot must place it on the counter\n\n",
    "Command": "Sequence(Find(Person(Robin, at: exit)), Find(Person(Robin, at: exit)), Find(object: potato chips))"
  },
  {
    "Id": 417,
    "Sentence": "Get acquainted with James at the sink, then greet him in the bedroom",
    "Remarks": "bedroom\n\t At least three people must be here\nRemarks\n\tThere is only one person at sink\n\n",
    "Command": "Meet(Person(named: James, at: sink), movingTo: bedroom)"
  },
  {
    "Id": 418,
    "Sentence": "Please pick up the apple from the desk, put the sprite in the bedroom done, and say the day of the month",
    "Remarks": null,
    "Command": "Sequence(Take(object: apple, from: desk), Bring(object: sprite, in: bedroom)), Speak(the day of the month))"
  },
  {
    "Id": 419,
    "Sentence": "Look for Michael, lead him to the bookcase, and tell the time",
    "Remarks": "Michael\n\t He is standing at the end table\n\n",
    "Command": "Sequence(Guide(Person(Michael)), Speak(the time))"
  },
  {
    "Id": 420,
    "Sentence": "Could you enter to the corridor, pinpoint Francis, and answer a question",
    "Remarks": "Francis\n\t She is sitting. Place three people in the room\n\n",
    "Command": "Sequence(Find(Person(Francis, in: corridor)), Answer(question: question))"
  },
  {
    "Id": 421,
    "Sentence": "Look for the basket in the living room",
    "Remarks": null,
    "Command": "Find(object: basket, in: living room)"
  },
  {
    "Id": 422,
    "Sentence": "Grasp the fruits from the cupboard, put it on the cupboard, and pick up the cloth",
    "Remarks": "apple\n\t Place to \n\n",
    "Command": "Sequence(Bring(object: fruits, from: cupboard, to: cupboard), Take(todo))"
  },
  {
    "Id": 423,
    "Sentence": "Escort Skyler from the dining table to the desk please",
    "Remarks": "Remarks\n\t The person being guided must deviate when indicated by the referee before reaching the desk\n\n",
    "Command": "todo"
  },
  {
    "Id": 424,
    "Sentence": "Could you open the corridor door",
    "Remarks": null,
    "Command": "Open(door: corridor)"
  },
  {
    "Id": 425,
    "Sentence": "Find Robin in the living room, accompany her, and say something please",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022a joke\u0022\n\n",
    "Command": "Sequence(Follow(Person(Robin, in: living room)), Speak())"
  },
  {
    "Id": 426,
    "Sentence": "Robot please tell me how many children are wearing blue in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children are wearing blue, in: dining room)"
  },
  {
    "Id": 427,
    "Sentence": "Open the entrance door please",
    "Remarks": null,
    "Command": "Open(door: entrance)"
  },
  {
    "Id": 428,
    "Sentence": "Could you please enter to the kitchen, find the paprika, and put it to the kitchen",
    "Remarks": null,
    "Command": "Bring(object: paprika, in: kitchen, to: kitchen)"
  },
  {
    "Id": 429,
    "Sentence": "Look for Patricia in the kitchen, pinpoint Patricia, and place orange juice on the counter please",
    "Remarks": "Patricia\n\t She is waving at the dining table\n\n",
    "Command": "Sequence(Find(Person(Patricia, in: kitchen)), Find(Person(Patricia)), Bring(object: orange juice, on: counter))"
  },
  {
    "Id": 430,
    "Sentence": "Could you please offer something to drink to all the men pointing to the left in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: men pointing to the left, in: living room, somethingTo: drink)"
  },
  {
    "Id": 431,
    "Sentence": "Serve some sprite in a cup",
    "Remarks": null,
    "Command": "Pour(sprite, in: cup)"
  },
  {
    "Id": 432,
    "Sentence": "Could you lead the man raising their left arm in the kitchen to the exit",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Guide(Person(man raising their left arm, in: kitchen), to: exit)"
  },
  {
    "Id": 433,
    "Sentence": "Spot Charlie, find Charlie in the kitchen, and answer a question please",
    "Remarks": "Charlie\n\t He is lying at the bed\n\n",
    "Command": "Sequence(Find(Person(Charlie)), Find(Person(Charlie, in: kitchen)), Answer(question: question))"
  },
  {
    "Id": 434,
    "Sentence": "Robot please describe the objects in the desk to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: desk, to: me)"
  },
  {
    "Id": 435,
    "Sentence": "Could you please serve some chocolate drink in a cup",
    "Remarks": null,
    "Command": "Pour(chocolate drink, in: cup)"
  },
  {
    "Id": 436,
    "Sentence": "Enter to the dining room, pinpoint the drinks, and find Mary at the couch please",
    "Remarks": null,
    "Command": "Sequence(Find(object: drinks, in: dining room), Find(Person(Mary, at: couch)))"
  },
  {
    "Id": 437,
    "Sentence": "Get the cloth, grasp the tray, and set it to the kitchen please",
    "Remarks": null,
    "Command": "Sequence(Take(todo), Bring(todo, to: kitchen))"
  },
  {
    "Id": 438,
    "Sentence": "Locate the basket in the corridor please",
    "Remarks": null,
    "Command": "Find(object: basket, in: corridor)"
  },
  {
    "Id": 439,
    "Sentence": "Could you find Michael in the corridor, look for Michael at the desk, and speak",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022your team\u0027s country\u0022\n\n",
    "Command": "Sequence(Find(Person(Michael, in: corridor)), Find(Person(Michael, at: desk)), Speak())"
  },
  {
    "Id": 440,
    "Sentence": "Set a cup on the end table and a fork in it",
    "Remarks": null,
    "Command": "SetTheTable(using: cup, on: end table, place: fork, at: in it)"
  },
  {
    "Id": 441,
    "Sentence": "Meet John at the exit, then greet him in the dining room please",
    "Remarks": "dining room\n\t At least three people must be here\nRemarks\n\tThere is only one person at exit\n\n",
    "Command": "Meet(Person(named: John, at: exit), movingTo: dining room)"
  },
  {
    "Id": 442,
    "Sentence": "Could you please look for John at the bed, locate John at the bed, and find John",
    "Remarks": "John\n\t He is waving at the dining table\n\n",
    "Command": "Sequence(Find(Person(John, at: bed)), Find(Person(John, at: bed)), Find(Person(John)))"
  },
  {
    "Id": 443,
    "Sentence": "Deliver me some tableware from the microwave",
    "Remarks": null,
    "Command": "Bring(category: tableware, from: microwave, to speaker)"
  },
  {
    "Id": 444,
    "Sentence": "Could you describe the objects in the end table to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: end table, to: me)"
  },
  {
    "Id": 445,
    "Sentence": "Locate Robin at the end table, accompany him to the exit, and locate Robin please",
    "Remarks": "Robin\n\t He is sitting at the entrance\n\n",
    "Command": "Sequence(Guide(Person(Robin, at: end table)), Find(Person(Robin)))"
  },
  {
    "Id": 446,
    "Sentence": "Please pour some orange juice in a bowl",
    "Remarks": null,
    "Command": "Pour(orange juice, in: bowl)"
  },
  {
    "Id": 447,
    "Sentence": "Could you please take the paprika from the side table, locate Charlie at the dishwasher, and say something",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022the time\u0022\n\n",
    "Command": "Sequence(Take(object: paprika, from: side table), Find(Person(Charlie, at: dishwasher)), Speak())"
  },
  {
    "Id": 448,
    "Sentence": "Accompany the person at the bookcase to the exit",
    "Remarks": "Remarks\n\t All doors between bookcase and the target location are closed, as well as all paths to get there are blocked. \n\n",
    "Command": "Guide(Person(at: bookcase), to: exit)"
  },
  {
    "Id": 449,
    "Sentence": "Open the entrance door please",
    "Remarks": null,
    "Command": "Open(door: entrance)"
  },
  {
    "Id": 450,
    "Sentence": "Place paprika on the storage table, locate Robin at the desk, and speak please",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022the day of the week\u0022\n\n",
    "Command": "Sequence(Bring(object: paprika, on: storage table), Find(Person(Robin, at: desk)), Speak())"
  },
  {
    "Id": 451,
    "Sentence": "Could you locate Robert at the bookcase, place orange on the cupboard, and say something",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022the time\u0022\n\n",
    "Command": "Sequence(Find(Person(Robert, at: bookcase)), Bring(object: orange, on: cupboard), Speak())"
  },
  {
    "Id": 452,
    "Sentence": "Robot please enter to the living room, spot the fruits, and answer a question",
    "Remarks": null,
    "Command": "Sequence(Find(object: fruits, in: living room), Answer(question: question))"
  },
  {
    "Id": 453,
    "Sentence": "Place apple on the desk, find Charlie, and answer a question please",
    "Remarks": "Charlie\n\t He is sitting at the dining room\n\n",
    "Command": "Sequence(Bring(object: apple, on: desk), Find(Person(Charlie)), Answer(question: question))"
  },
  {
    "Id": 454,
    "Sentence": "Go to the dining room, spot Skyler, and tell what day is tomorrow please",
    "Remarks": "Skyler\n\t She is waving. Place three people in the room\n\n",
    "Command": "Sequence(Find(Person(Skyler, in: dining room)), Speak(what day is tomorrow))"
  },
  {
    "Id": 455,
    "Sentence": "Could you describe the objects in the end table to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: end table, to: me)"
  },
  {
    "Id": 456,
    "Sentence": "Introduce yourself to the child in the living room please",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(child, in: living room), method: introduce yourself to)"
  },
  {
    "Id": 457,
    "Sentence": "Describe the person lying down at the sink to the person at the exit",
    "Remarks": null,
    "Command": "Describe(person: lying down, at: sink, to: Person(at: sink)))"
  },
  {
    "Id": 458,
    "Sentence": "Retrieve the fruits from the storage table, find Alex in the kitchen, and answer a question please",
    "Remarks": "orange\n\t Place to \n\n",
    "Command": "Sequence(Take(object: fruits, from: storage table), Find(Person(Alex, in: kitchen)), Answer(question: question))"
  },
  {
    "Id": 459,
    "Sentence": "Offer something to eat to all the men waving in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Serve(to: men waving, in: kitchen, somethingTo: eat)"
  },
  {
    "Id": 460,
    "Sentence": "Meet Alex at the exit, then find him in the bedroom please",
    "Remarks": "bedroom\n\t At least three people must be here\nRemarks\n\tThere is only one person at exit\n\n",
    "Command": "Meet(Person(named: Alex, at: exit), movingTo: bedroom)"
  },
  {
    "Id": 461,
    "Sentence": "Locate the basket in the kitchen",
    "Remarks": null,
    "Command": "Find(object: basket, in: kitchen)"
  },
  {
    "Id": 462,
    "Sentence": "Enter to the kitchen, locate Mary, and say something please",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022the day of the month\u0022\n\n",
    "Command": "Sequence(Find(Person(Mary, in: kitchen)), Speak())"
  },
  {
    "Id": 463,
    "Sentence": "Take the cloth, take the apple from the dining table from the dining table to the cupboard, and speak please",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022your team\u0027s affiliation\u0022\n\n",
    "Command": "Sequence(Bring(todo, to: dining table), Speak())"
  },
  {
    "Id": 464,
    "Sentence": "Close the corridor door please",
    "Remarks": null,
    "Command": "Close(door: corridor)"
  },
  {
    "Id": 465,
    "Sentence": "Robot please tell me how many men in the bedroom are wearing blue",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: men are wearing blue, in: bedroom)"
  },
  {
    "Id": 466,
    "Sentence": "Could you find Skyler in the living room, put orange on the bookcase, and say something",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022the day of the month\u0022\n\n",
    "Command": "Sequence(Find(Person(Skyler, in: living room)), Bring(object: orange, on: bookcase), Speak())"
  },
  {
    "Id": 467,
    "Sentence": "Describe the objects in the storage table to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: storage table, to: me)"
  },
  {
    "Id": 468,
    "Sentence": "Open the entrance door please",
    "Remarks": null,
    "Command": "Open(door: entrance)"
  },
  {
    "Id": 469,
    "Sentence": "Bring the noodles to the fattest person in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Bring(object: noodles, to: Person(fattest person), in: kitchen)"
  },
  {
    "Id": 470,
    "Sentence": "Could you please describe the objects in the storage table to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: storage table, to: me)"
  },
  {
    "Id": 471,
    "Sentence": "Describe the person sitting at the dining table to me please",
    "Remarks": null,
    "Command": "Describe(person: sitting, at: dining table, to: speaker)"
  },
  {
    "Id": 472,
    "Sentence": "Robot please tell me how many yellow cutlery objects are in the cupboard",
    "Remarks": null,
    "Command": "Count(object: yellow cutlery objects, at: cupboard, reportTo: speaker)"
  },
  {
    "Id": 473,
    "Sentence": "Tell me how many children wearing sweaters there are in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children wearing sweaters, in: corridor)"
  },
  {
    "Id": 474,
    "Sentence": "Describe the objects in the side table to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: side table, to: me)"
  },
  {
    "Id": 475,
    "Sentence": "Offer something to eat to all the elders wearing sweaters in the bedroom please",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "Serve(to: elders wearing sweaters, in: bedroom, somethingTo: eat)"
  },
  {
    "Id": 476,
    "Sentence": "Please locate Patricia, place apple on the desk, and answer a question",
    "Remarks": "Patricia\n\t She is waving at the kitchen\n\n",
    "Command": "Sequence(Find(Person(Patricia)), Bring(object: apple, on: desk), Answer(question: question))"
  },
  {
    "Id": 477,
    "Sentence": "Enter to the dining room, look for Skyler, and accompany him to the exit please",
    "Remarks": "Skyler\n\t He is sitting. Place three people in the room\n\n",
    "Command": "Guide(Person(Skyler, in: dining room), to: exit)"
  },
  {
    "Id": 478,
    "Sentence": "Set a bowl on the bookcase and a spoon on it please",
    "Remarks": null,
    "Command": "SetTheTable(using: bowl, on: bookcase, place: spoon, at: on it)"
  },
  {
    "Id": 479,
    "Sentence": "Tell me how many elders are waving in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: elders are waving, in: dining room)"
  },
  {
    "Id": 480,
    "Sentence": "Place spoon on the cupboard, find John in the living room, and speak",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022your team\u0027s country\u0022\n\n",
    "Command": "Sequence(Bring(object: spoon, on: cupboard), Find(Person(John, in: living room)), Speak())"
  },
  {
    "Id": 481,
    "Sentence": "Pinpoint Charlie in the living room, place the paprika in the kitchen done, and answer a question",
    "Remarks": null,
    "Command": "Sequence(Find(Person(Charlie, in: living room)), Bring(object: paprika, in: kitchen)), Answer(question: question))"
  },
  {
    "Id": 482,
    "Sentence": "Robot please describe the person lying down at the dining table to me",
    "Remarks": null,
    "Command": "Describe(person: lying down, at: dining table, to: speaker)"
  },
  {
    "Id": 483,
    "Sentence": "Robot please open the corridor door",
    "Remarks": null,
    "Command": "Open(door: corridor)"
  },
  {
    "Id": 484,
    "Sentence": "Robot please deliver me the biggest containers from the dining table",
    "Remarks": null,
    "Command": "Bring(object: biggest containers, from: dining table, to: speaker)"
  },
  {
    "Id": 485,
    "Sentence": "Bring the knife to the tallest woman in the living room please",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Bring(object: knife, to: Person(tallest woman), in: living room)"
  },
  {
    "Id": 486,
    "Sentence": "Close the corridor door please",
    "Remarks": null,
    "Command": "Close(door: corridor)"
  },
  {
    "Id": 487,
    "Sentence": "Take the food at the bookcase \u0027s right to the cupboard",
    "Remarks": null,
    "Command": "Bring(category: food, from: Location(right, of: bookcase), to: bookcase)"
  },
  {
    "Id": 488,
    "Sentence": "Could you place a dish on the bookcase and a fork in it",
    "Remarks": null,
    "Command": "SetTheTable(using: dish, on: bookcase, place: fork, at: in it)"
  },
  {
    "Id": 489,
    "Sentence": "Tell me how many people there are in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: people, in: dining room)"
  },
  {
    "Id": 490,
    "Sentence": "Could you please take the fruits from the end table, look for Charlie in the corridor, and follow him",
    "Remarks": "paprika\n\t Place to \n\n",
    "Command": "Sequence(Take(object: fruits, from: end table), Follow(Person(Charlie, in: corridor)))"
  },
  {
    "Id": 491,
    "Sentence": "Describe the person standing at the bookcase to me please",
    "Remarks": null,
    "Command": "Describe(person: standing, at: bookcase, to: speaker)"
  },
  {
    "Id": 492,
    "Sentence": "Find a coke in the bedroom, take the bowl, and say something",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022your team\u0027s affiliation\u0022\n\n",
    "Command": "Sequence(Find(Find(object: coke, in: bedroom)), Take(todo), Speak())"
  },
  {
    "Id": 493,
    "Sentence": "Tell me how many women are pointing to the left in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women are pointing to the left, in: kitchen)"
  },
  {
    "Id": 494,
    "Sentence": "Close the entrance door",
    "Remarks": null,
    "Command": "Close(door: entrance)"
  },
  {
    "Id": 495,
    "Sentence": "Could you please navigate to the kitchen, locate Charlie, and escort him",
    "Remarks": null,
    "Command": "Guide(Person(Charlie, in: kitchen))"
  },
  {
    "Id": 496,
    "Sentence": "Tell me how many women in the bedroom are wearing coats please",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women are wearing coats, in: bedroom)"
  },
  {
    "Id": 497,
    "Sentence": "Robot please tell me how many elders are pointing to the right in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: elders are pointing to the right, in: kitchen)"
  },
  {
    "Id": 498,
    "Sentence": "Offer something to eat to all the people in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: people, in: living room, somethingTo: eat)"
  },
  {
    "Id": 499,
    "Sentence": "Look for the paprika, look for John at the couch, and lead him to the exit",
    "Remarks": "paprika\n\t Robot must place it on the end table\n\n",
    "Command": "Sequence(Find(object: paprika), Guide(Person(John, at: couch)))"
  },
  {
    "Id": 500,
    "Sentence": "Open the entrance door please",
    "Remarks": null,
    "Command": "Open(door: entrance)"
  },
  {
    "Id": 501,
    "Sentence": "Navigate to the exit, find Robin, and escort her",
    "Remarks": null,
    "Command": "Guide(Person(Robin, at: exit))"
  },
  {
    "Id": 502,
    "Sentence": "Take the cloth, deliver to it to Mary at the desk, and say something please",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022the day of the month\u0022\n\n",
    "Command": "Sequence(Bring(todo, to: Person(Mary, at: desk)), Speak())"
  },
  {
    "Id": 503,
    "Sentence": "Place the orange in the living room done, get the apple from the bookcase, and put orange on the bookcase",
    "Remarks": null,
    "Command": "Sequence(Bring(object: orange, in: living room)), Take(object: apple, from: bookcase), Bring(object: orange, on: bookcase))"
  },
  {
    "Id": 504,
    "Sentence": "Put the grape juice into the microwave please",
    "Remarks": null,
    "Command": "Store(object: grape juice, in: microwave)"
  },
  {
    "Id": 505,
    "Sentence": "Please deliver me some drinks from the fridge",
    "Remarks": null,
    "Command": "Bring(category: drinks, from: fridge, to speaker)"
  },
  {
    "Id": 506,
    "Sentence": "Place a bowl on the bookcase and a spoon on its left please",
    "Remarks": null,
    "Command": "SetTheTable(using: bowl, on: bookcase, place: spoon, at: on its left)"
  },
  {
    "Id": 507,
    "Sentence": "Please get to know Charlie at the bookcase, then find him in the living room",
    "Remarks": "living room\n\t At least three people must be here\nRemarks\n\tThere is only one person at bookcase\n\n",
    "Command": "Meet(Person(named: Charlie, at: bookcase), movingTo: living room)"
  },
  {
    "Id": 508,
    "Sentence": "Place paprika on the counter, locate Elizabeth in the kitchen, and look for Elizabeth please",
    "Remarks": "Elizabeth\n\t She is waving at the end table\n\n",
    "Command": "Sequence(Bring(object: paprika, on: counter), Find(Person(Elizabeth, in: kitchen)), Find(Person(Elizabeth)))"
  },
  {
    "Id": 509,
    "Sentence": "Could you count the fruits items at the cupboard and inform me",
    "Remarks": null,
    "Command": "Count(object: fruits items, at: cupboard, reportTo: speaker)"
  },
  {
    "Id": 510,
    "Sentence": "Describe to me the person standing at the exit",
    "Remarks": null,
    "Command": "Describe(person: standing, at: exit, to: speaker)"
  },
  {
    "Id": 511,
    "Sentence": "Tell me how many women are wearing blue in the corridor please",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women are wearing blue, in: corridor)"
  },
  {
    "Id": 512,
    "Sentence": "Close the exit door",
    "Remarks": null,
    "Command": "Close(door: exit)"
  },
  {
    "Id": 513,
    "Sentence": "Leave a fruits on the bookcase done, pick up the cloth, and answer a question",
    "Remarks": "paprika\n\t Place 3 objects of the same category at bookcase\n\n",
    "Command": "Sequence(Bring(object: fruits, on: bookcase), Take(todo), Answer(question: question))"
  },
  {
    "Id": 514,
    "Sentence": "Look for a apple in the corridor, find Alex, and say your team\u0027s name please",
    "Remarks": "Alex\n\t She is sitting at the desk\n\n",
    "Command": "Sequence(Find(Find(object: apple, in: corridor)), Find(Person(Alex)), Speak(your team\u0027s name))"
  },
  {
    "Id": 515,
    "Sentence": "Could you offer something to drink to all the standing women in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Serve(to: standing women, in: corridor, somethingTo: drink)"
  },
  {
    "Id": 516,
    "Sentence": "Greet the fattest man in the bedroom please",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(fattest man, in: bedroom), method: greet)"
  },
  {
    "Id": 517,
    "Sentence": "Could you give me some cleaning stuff from the oven",
    "Remarks": null,
    "Command": "Bring(category: cleaning stuff, from: oven, to speaker)"
  },
  {
    "Id": 518,
    "Sentence": "Robot please offer something to drink to all the elders pointing to the right in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Serve(to: elders pointing to the right, in: kitchen, somethingTo: drink)"
  },
  {
    "Id": 519,
    "Sentence": "Describe the objects in the storage table to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: storage table, to: me)"
  },
  {
    "Id": 520,
    "Sentence": "Bring the chocolate drink to the person pointing to the left in the corridor please",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Bring(object: chocolate drink, to: Person(person pointing to the left), in: corridor)"
  },
  {
    "Id": 521,
    "Sentence": "Put a bowl on the cupboard and a spoon in it",
    "Remarks": null,
    "Command": "SetTheTable(using: bowl, on: cupboard, place: spoon, at: in it)"
  },
  {
    "Id": 522,
    "Sentence": "Look for a apple, locate a apple in the corridor, and answer a question",
    "Remarks": "apple\n\t Robot must place it on the sink\n\n",
    "Command": "Sequence(Find(object: apple), Find(Find(object: apple, in: corridor)), Answer(question: question))"
  },
  {
    "Id": 523,
    "Sentence": "Could you describe the objects in the cupboard to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: cupboard, to: me)"
  },
  {
    "Id": 524,
    "Sentence": "Could you locate the paprika, locate Charlie at the entrance, and conduct her to the corridor",
    "Remarks": "paprika\n\t Robot must place it on the sink\n\n",
    "Command": "Sequence(Find(object: paprika), Guide(Person(Charlie, at: entrance)))"
  },
  {
    "Id": 525,
    "Sentence": "Find Robin in the kitchen, find a orange in the kitchen, and find Robin",
    "Remarks": "Robin\n\t She is standing at the bedroom\n\n",
    "Command": "Sequence(Find(Person(Robin, in: kitchen)), Find(Find(object: orange, in: kitchen)), Find(Person(Robin)))"
  },
  {
    "Id": 526,
    "Sentence": "Describe the objects in the counter to me please",
    "Remarks": null,
    "Command": "DescribeObjects(at: counter, to: me)"
  },
  {
    "Id": 527,
    "Sentence": "Please look for William, take the cloth, and locate William at the sink",
    "Remarks": "William\n\t He is waving at the desk\n\n",
    "Command": "Sequence(Find(Person(William)), Take(todo), Find(Person(William, at: sink)))"
  },
  {
    "Id": 528,
    "Sentence": "Please tell me how many lying down people there are in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: lying down people, in: living room)"
  },
  {
    "Id": 529,
    "Sentence": "Tell me how many women are raising their right arm in the corridor please",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women are raising their right arm, in: corridor)"
  },
  {
    "Id": 530,
    "Sentence": "Put the fork in the kitchen done, grasp the paprika from the counter, and find a fork in the dining room please",
    "Remarks": null,
    "Command": "Sequence(Bring(object: fork, in: kitchen)), Take(object: paprika, from: counter), Find(Find(object: fork, in: dining room)))"
  },
  {
    "Id": 531,
    "Sentence": "Tell me how many people are waving in the bedroom please",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: people are waving, in: bedroom)"
  },
  {
    "Id": 532,
    "Sentence": "Get the fruits from the end table, pick up the bowl, and answer a question",
    "Remarks": "paprika\n\t Place to \n\n",
    "Command": "Sequence(Take(object: fruits, from: end table), Take(todo), Answer(question: question))"
  },
  {
    "Id": 533,
    "Sentence": "Deliver to me some fruits from the fridge please",
    "Remarks": null,
    "Command": "Bring(category: fruits, from: fridge, to speaker)"
  },
  {
    "Id": 534,
    "Sentence": "Could you locate Robin at the bookcase, accompany her to the living room, and look for Robin",
    "Remarks": "Robin\n\t She is standing at the dining room\n\n",
    "Command": "Sequence(Guide(Person(Robin, at: bookcase)), Find(Person(Robin)))"
  },
  {
    "Id": 535,
    "Sentence": "Could you please navigate to the dining room, pinpoint Mary, and retrieve the fruits from the dining table",
    "Remarks": "apple\n\t Place to \n\n",
    "Command": "Sequence(Find(Person(Mary, in: dining room)), Take(object: fruits, from: dining table))"
  },
  {
    "Id": 536,
    "Sentence": "Count the white scrubby at the cupboard and inform me please",
    "Remarks": null,
    "Command": "Count(object: white scrubby, at: cupboard, reportTo: speaker)"
  },
  {
    "Id": 537,
    "Sentence": "Tell me how many elders dressed in orange there are in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: elders dressed in orange, in: kitchen)"
  },
  {
    "Id": 538,
    "Sentence": "Could you please tell me how many children are raising their left arm in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children are raising their left arm, in: living room)"
  },
  {
    "Id": 539,
    "Sentence": "Guide the child in the bedroom to the living room",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "Guide(Person(child, in: bedroom), to: living room)"
  },
  {
    "Id": 540,
    "Sentence": "Pick up the tray, leave it on the dining table, and speak please",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022the day of the week\u0022\n\n",
    "Command": "Sequence(Bring(todo, to: todo), Speak())"
  },
  {
    "Id": 541,
    "Sentence": "Could you please enter to the dining room, look for James, and speak",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022your team\u0027s name\u0022\n\n",
    "Command": "Sequence(Find(Person(James, in: dining room)), Speak())"
  },
  {
    "Id": 542,
    "Sentence": "Robot please give me some cleaning stuff from the fridge",
    "Remarks": null,
    "Command": "Bring(category: cleaning stuff, from: fridge, to speaker)"
  },
  {
    "Id": 543,
    "Sentence": "Robot please tell me how many yellow scrubby are in the counter",
    "Remarks": null,
    "Command": "Count(object: yellow scrubby, at: counter, reportTo: speaker)"
  },
  {
    "Id": 544,
    "Sentence": "Tell me how many men in the corridor are wearing blue please",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: men are wearing blue, in: corridor)"
  },
  {
    "Id": 545,
    "Sentence": "Bring me the right-most food from the cupboard",
    "Remarks": null,
    "Command": "Bring(object: right-most food, from: cupboard, to: speaker)"
  },
  {
    "Id": 546,
    "Sentence": "Could you please greet the person wearing a blue shirt in the bedroom",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(person wearing a blue shirt, in: bedroom), method: greet)"
  },
  {
    "Id": 547,
    "Sentence": "Bring the apple to the slimmest woman in the bedroom",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "Bring(object: apple, to: Person(slimmest woman), in: bedroom)"
  },
  {
    "Id": 548,
    "Sentence": "Could you please close the corridor door",
    "Remarks": null,
    "Command": "Close(door: corridor)"
  },
  {
    "Id": 549,
    "Sentence": "Tell me how many men are pointing to the right in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: men are pointing to the right, in: corridor)"
  },
  {
    "Id": 550,
    "Sentence": "Lead William to the exit, you may find him at the sink please",
    "Remarks": "Remarks\n\t The person being guided must deviate when indicated by the referee before reaching the exit\n\n",
    "Command": "todo"
  },
  {
    "Id": 551,
    "Sentence": "Look for Linda at the bed, locate Linda in the dining room, and say something please",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022your team\u0027s name\u0022\n\n",
    "Command": "Sequence(Find(Person(Linda, at: bed)), Find(Person(Linda, in: dining room)), Speak())"
  },
  {
    "Id": 552,
    "Sentence": "Robot please open the exit door",
    "Remarks": null,
    "Command": "Open(door: exit)"
  },
  {
    "Id": 553,
    "Sentence": "Meet Robin at the desk and follow him",
    "Remarks": "Remarks\n\t Follow Robin to the dining room\n\n",
    "Command": "todo"
  },
  {
    "Id": 554,
    "Sentence": "Robot please take the woman raising their right arm in the kitchen to the exit",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Guide(Person(woman raising their right arm, in: kitchen), to: exit)"
  },
  {
    "Id": 555,
    "Sentence": "Spot the paprika, spot Francis at the entrance, and put paprika on the counter please",
    "Remarks": "paprika\n\t Robot must place it on the counter\n\n",
    "Command": "Sequence(Find(object: paprika), Find(Person(Francis, at: entrance)), Bring(object: paprika, on: counter))"
  },
  {
    "Id": 556,
    "Sentence": "Could you tell me how many men are wearing T-shirts in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: men are wearing T-shirts, in: living room)"
  },
  {
    "Id": 557,
    "Sentence": "Open the entrance door please",
    "Remarks": null,
    "Command": "Open(door: entrance)"
  },
  {
    "Id": 558,
    "Sentence": "Please place a bowl on the end table and a fork on it",
    "Remarks": null,
    "Command": "SetTheTable(using: bowl, on: end table, place: fork, at: on it)"
  },
  {
    "Id": 559,
    "Sentence": "Tell me how many women are wearing blouses in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women are wearing blouses, in: kitchen)"
  },
  {
    "Id": 560,
    "Sentence": "Robot please bring the sprite to the person wearing orange pants in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Bring(object: sprite, to: Person(person wearing orange pants), in: corridor)"
  },
  {
    "Id": 561,
    "Sentence": "Robot please hand me some orange juice in a cup",
    "Remarks": null,
    "Command": "Pour(orange juice, in: cup)"
  },
  {
    "Id": 562,
    "Sentence": "Meet James at the sink and go behind him to the bedroom please",
    "Remarks": null,
    "Command": "todo"
  },
  {
    "Id": 563,
    "Sentence": "Robot please place a bowl on the side table and a fork on its left",
    "Remarks": null,
    "Command": "SetTheTable(using: bowl, on: side table, place: fork, at: on its left)"
  },
  {
    "Id": 564,
    "Sentence": "Locate Francis in the dining room, locate Francis at the bookcase, and say something please",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022what day is tomorrow\u0022\n\n",
    "Command": "Sequence(Find(Person(Francis, in: dining room)), Find(Person(Francis, at: bookcase)), Speak())"
  },
  {
    "Id": 565,
    "Sentence": "Guide the fattest woman in the kitchen to the exit please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Guide(Person(fattest woman, in: kitchen), to: exit)"
  },
  {
    "Id": 566,
    "Sentence": "Introduce yourself to the child in the living room please",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(child, in: living room), method: introduce yourself to)"
  },
  {
    "Id": 567,
    "Sentence": "Offer something to drink to all the women waving in the living room please",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: women waving, in: living room, somethingTo: drink)"
  },
  {
    "Id": 568,
    "Sentence": "Could you please offer something to drink to all the standing elders in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: standing elders, in: living room, somethingTo: drink)"
  },
  {
    "Id": 569,
    "Sentence": "Set a dish on the storage table and a knife on its right please",
    "Remarks": null,
    "Command": "SetTheTable(using: dish, on: storage table, place: knife, at: on its right)"
  },
  {
    "Id": 570,
    "Sentence": "Find the tray in the kitchen",
    "Remarks": null,
    "Command": "Find(object: tray, in: kitchen)"
  },
  {
    "Id": 571,
    "Sentence": "Look for Jennifer, find Jennifer at the bed, and tell your team\u0027s affiliation please",
    "Remarks": "Jennifer\n\t She is sitting at the bookcase\n\n",
    "Command": "Sequence(Find(Person(Jennifer)), Find(Person(Jennifer, at: bed)), Speak(your team\u0027s affiliation))"
  },
  {
    "Id": 572,
    "Sentence": "Locate Mary, get the cloth, and tell your team\u0027s name",
    "Remarks": "Mary\n\t She is sitting at the corridor\n\n",
    "Command": "Sequence(Find(Person(Mary)), Take(todo), Speak(your team\u0027s name))"
  },
  {
    "Id": 573,
    "Sentence": "Robot please offer something to drink to all the sitting children in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Serve(to: sitting children, in: kitchen, somethingTo: drink)"
  },
  {
    "Id": 574,
    "Sentence": "Take the yellow object from the storage table to the side table",
    "Remarks": null,
    "Command": "Bring(object: yellow object, from: storage table, to: storage table)"
  },
  {
    "Id": 575,
    "Sentence": "Greet the child in the corridor please",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(child, in: corridor), method: greet)"
  },
  {
    "Id": 576,
    "Sentence": "Pinpoint Patricia at the couch, look for Patricia, and lead her to the couch",
    "Remarks": "Patricia\n\t She is lying at the exit\n\n",
    "Command": "Sequence(Find(Person(Patricia, at: couch)), Guide(Person(Patricia)))"
  },
  {
    "Id": 577,
    "Sentence": "Describe the objects in the desk to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: desk, to: me)"
  },
  {
    "Id": 578,
    "Sentence": "Offer something to drink to all the women in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Serve(to: women, in: kitchen, somethingTo: drink)"
  },
  {
    "Id": 579,
    "Sentence": "Robot please bring the crackers to the slimmest man in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Bring(object: crackers, to: Person(slimmest man), in: corridor)"
  },
  {
    "Id": 580,
    "Sentence": "Offer something to eat to all the standing children in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Serve(to: standing children, in: kitchen, somethingTo: eat)"
  },
  {
    "Id": 581,
    "Sentence": "Could you grasp the orange from the storage table, leave it to the kitchen, and answer a question",
    "Remarks": null,
    "Command": "Sequence(Bring(object: orange, from: storage table, to: kitchen), Answer(question: question))"
  },
  {
    "Id": 582,
    "Sentence": "Retrieve the apple from the storage table, put the bowl on the side table, and speak please",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022your team\u0027s country\u0022\n\n",
    "Command": "Sequence(Bring(object: apple, from: storage table, to: side table), Speak())"
  },
  {
    "Id": 583,
    "Sentence": "Offer something to eat to all the children raising their right arm in the corridor please",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Serve(to: children raising their right arm, in: corridor, somethingTo: eat)"
  },
  {
    "Id": 584,
    "Sentence": "Offer something to eat to all the elders pointing to the left in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Serve(to: elders pointing to the left, in: kitchen, somethingTo: eat)"
  },
  {
    "Id": 585,
    "Sentence": "Grasp the fruits from the counter, locate a orange in the bedroom, and answer a question",
    "Remarks": "apple\n\t Place to \n\n",
    "Command": "Sequence(Take(object: fruits, from: counter), Find(Find(object: orange, in: bedroom)), Answer(question: question))"
  },
  {
    "Id": 586,
    "Sentence": "Tell me how many women are wearing blue in the living room please",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women are wearing blue, in: living room)"
  },
  {
    "Id": 587,
    "Sentence": "Retrieve the tray, place it on the cupboard, and put the sprite in the kitchen done",
    "Remarks": null,
    "Command": "Sequence(Bring(todo, to: cupboard), Bring(object: sprite, in: kitchen)))"
  },
  {
    "Id": 588,
    "Sentence": "Look for Robin at the dishwasher, spot Robin, and find Robin at the dishwasher",
    "Remarks": "Robin\n\t She is sitting at the bedroom\n\n",
    "Command": "Sequence(Find(Person(Robin, at: dishwasher)), Find(Person(Robin)), Find(Person(Robin, at: dishwasher)))"
  },
  {
    "Id": 589,
    "Sentence": "Enter to the kitchen, pinpoint the fruits, and place paprika on the storage table please",
    "Remarks": null,
    "Command": "Sequence(Find(object: fruits, in: kitchen), Bring(object: paprika, on: storage table))"
  },
  {
    "Id": 590,
    "Sentence": "Place a bowl on the side table and a fork on its left",
    "Remarks": null,
    "Command": "SetTheTable(using: bowl, on: side table, place: fork, at: on its left)"
  },
  {
    "Id": 591,
    "Sentence": "Get acquainted with Alex at the bookcase, then find her in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\nRemarks\n\tThere is only one person at bookcase\n\n",
    "Command": "Meet(Person(named: Alex, at: bookcase), movingTo: dining room)"
  },
  {
    "Id": 592,
    "Sentence": "Put the cascade pod in the living room done, grasp the orange from the bookcase, and answer a question",
    "Remarks": null,
    "Command": "Sequence(Bring(object: cascade pod, in: living room)), Take(object: orange, from: bookcase), Answer(question: question))"
  },
  {
    "Id": 593,
    "Sentence": "Pick up a snacks from the end table and put it into the oven",
    "Remarks": null,
    "Command": "Store(category: snacks, from: end table, in: oven)"
  },
  {
    "Id": 594,
    "Sentence": "Could you deliver me the tallest fruits from the bookcase",
    "Remarks": null,
    "Command": "Bring(object: tallest fruits, from: bookcase, to: speaker)"
  },
  {
    "Id": 595,
    "Sentence": "Robot please locate Skyler, spot a apple in the dining room, and locate a apple in the dining room",
    "Remarks": "Skyler\n\t He is sitting at the bedroom\n\n",
    "Command": "Sequence(Find(Person(Skyler)), Find(Find(object: apple, in: dining room)), Find(Find(object: apple, in: dining room)))"
  },
  {
    "Id": 596,
    "Sentence": "Find Alex, grasp the bowl, and put it on the end table please",
    "Remarks": "Alex\n\t She is standing at the dining room\n\n",
    "Command": "Sequence(Find(Person(Alex)), Bring(todo, to: todo))"
  },
  {
    "Id": 597,
    "Sentence": "Grasp the apple, put it on the side table, and answer a question",
    "Remarks": "apple\n\t Robot will find it on the side table\n\n",
    "Command": "Sequence(Bring(object: apple, from: side table, to: side table), Answer(question: question))"
  },
  {
    "Id": 598,
    "Sentence": "Tell me how many people are wearing shirts in the dining room please",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: people are wearing shirts, in: dining room)"
  },
  {
    "Id": 599,
    "Sentence": "Locate Linda, place apple on the cupboard, and answer a question please",
    "Remarks": "Linda\n\t She is waving at the dishwasher\n\n",
    "Command": "Sequence(Find(Person(Linda)), Bring(object: apple, on: cupboard), Answer(question: question))"
  },
  {
    "Id": 600,
    "Sentence": "Robot please offer something to drink to all the women dressed in red in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Serve(to: women dressed in red, in: kitchen, somethingTo: drink)"
  },
  {
    "Id": 601,
    "Sentence": "Please guide Elizabeth from the bookcase to the bed",
    "Remarks": "Remarks\n\t The person being guided must deviate when indicated by the referee before reaching the bed\n\n",
    "Command": "todo"
  },
  {
    "Id": 602,
    "Sentence": "Tell me how many elders in the bedroom are lying down",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: elders are lying down, in: bedroom)"
  },
  {
    "Id": 603,
    "Sentence": "Could you please navigate to the kitchen, find the fruits, and place the orange on the bookcase",
    "Remarks": null,
    "Command": "Bring(object: fruits, in: kitchen, to: bookcase)"
  },
  {
    "Id": 604,
    "Sentence": "Could you offer something to eat to all the men pointing to the right in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: men pointing to the right, in: living room, somethingTo: eat)"
  },
  {
    "Id": 605,
    "Sentence": "Pour some orange juice in a cup please",
    "Remarks": null,
    "Command": "Pour(orange juice, in: cup)"
  },
  {
    "Id": 606,
    "Sentence": "Get the apple from the side table, set it on the storage table, and spot the paprika please",
    "Remarks": "paprika\n\t Robot must place it on the side table\n\n",
    "Command": "Sequence(Bring(object: apple, from: side table, to: todo), Find(object: paprika))"
  },
  {
    "Id": 607,
    "Sentence": "Put apple on the dining table, take the paprika from the dining table, and look for the apple please",
    "Remarks": "apple\n\t Robot must place it on the dining table\n\n",
    "Command": "Sequence(Bring(object: apple, on: dining table), Take(object: paprika, from: dining table), Find(object: apple))"
  },
  {
    "Id": 608,
    "Sentence": "Could you please bring me some chocolate drink in a bowl",
    "Remarks": null,
    "Command": "Pour(chocolate drink, in: bowl)"
  },
  {
    "Id": 609,
    "Sentence": "Look for the tray in the corridor please",
    "Remarks": null,
    "Command": "Find(object: tray, in: corridor)"
  },
  {
    "Id": 610,
    "Sentence": "Could you please tell me how many white food objects are in the end table",
    "Remarks": null,
    "Command": "Count(object: white food objects, at: end table, reportTo: speaker)"
  },
  {
    "Id": 611,
    "Sentence": "Meet Francis at the couch, then find him in the corridor please",
    "Remarks": "corridor\n\t At least three people must be here\nRemarks\n\tThere is only one person at couch\n\n",
    "Command": "Meet(Person(named: Francis, at: couch), movingTo: corridor)"
  },
  {
    "Id": 612,
    "Sentence": "Could you please locate Francis in the living room, look for Francis in the living room, and leave a fruits on the counter done",
    "Remarks": "paprika\n\t Place 3 objects of the same category at counter\n\n",
    "Command": "Sequence(Find(Person(Francis, in: living room)), Find(Person(Francis, in: living room)), Bring(object: fruits, on: counter))"
  },
  {
    "Id": 613,
    "Sentence": "Tell me how many elders there are in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: elders, in: living room)"
  },
  {
    "Id": 614,
    "Sentence": "Describe the person sitting at the bed to me please",
    "Remarks": null,
    "Command": "Describe(person: sitting, at: bed, to: speaker)"
  },
  {
    "Id": 615,
    "Sentence": "Deliver me some containers from the fridge please",
    "Remarks": null,
    "Command": "Bring(category: containers, from: fridge, to speaker)"
  },
  {
    "Id": 616,
    "Sentence": "Offer something to drink to all the lying down men in the corridor please",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Serve(to: lying down men, in: corridor, somethingTo: drink)"
  },
  {
    "Id": 617,
    "Sentence": "Could you salute the oldest woman in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(oldest woman, in: corridor), method: salute)"
  },
  {
    "Id": 618,
    "Sentence": "Could you please go to the bedroom, locate Robin, and look for Robin",
    "Remarks": "Robin\n\t He is standing at the sink\n\n",
    "Command": "Sequence(Find(Person(Robin, in: bedroom)), Find(Person(Robin)))"
  },
  {
    "Id": 619,
    "Sentence": "Tell me how many children are raising their left arm in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children are raising their left arm, in: kitchen)"
  },
  {
    "Id": 620,
    "Sentence": "Look for Charlie, find Charlie in the bedroom, and tell what day is tomorrow",
    "Remarks": "Charlie\n\t She is sitting at the kitchen\n\n",
    "Command": "Sequence(Find(Person(Charlie)), Find(Person(Charlie, in: bedroom)), Speak(what day is tomorrow))"
  },
  {
    "Id": 621,
    "Sentence": "Deliver me some tableware from the oven please",
    "Remarks": null,
    "Command": "Bring(category: tableware, from: oven, to speaker)"
  },
  {
    "Id": 622,
    "Sentence": "Offer something to eat to all the elders raising their left arm in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Serve(to: elders raising their left arm, in: kitchen, somethingTo: eat)"
  },
  {
    "Id": 623,
    "Sentence": "Place a cup on the end table and a fork on it",
    "Remarks": null,
    "Command": "SetTheTable(using: cup, on: end table, place: fork, at: on it)"
  },
  {
    "Id": 624,
    "Sentence": "Follow the oldest woman in the bedroom please",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "Follow(Person(oldest woman, in: bedroom))"
  },
  {
    "Id": 625,
    "Sentence": "Could you please contact Alex at the sink, then greet him in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\nRemarks\n\tThere is only one person at sink\n\n",
    "Command": "Meet(Person(named: Alex, at: sink), movingTo: kitchen)"
  },
  {
    "Id": 626,
    "Sentence": "Tell me how many cutlery items are in the desk",
    "Remarks": null,
    "Command": "Count(object: cutlery items, at: desk, reportTo: speaker)"
  },
  {
    "Id": 627,
    "Sentence": "Describe the objects in the storage table to me please",
    "Remarks": null,
    "Command": "DescribeObjects(at: storage table, to: me)"
  },
  {
    "Id": 628,
    "Sentence": "Spot Alex at the exit, escort her to the exit, and say something",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022the day of the month\u0022\n\n",
    "Command": "Sequence(Guide(Person(Alex, at: exit)), Speak())"
  },
  {
    "Id": 629,
    "Sentence": "Offer something to drink to all the elders raising their right arm in the bedroom please",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "Serve(to: elders raising their right arm, in: bedroom, somethingTo: drink)"
  },
  {
    "Id": 630,
    "Sentence": "Robot please set apple on the storage table, retrieve the tray, and speak",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022what day is tomorrow\u0022\n\n",
    "Command": "Sequence(Bring(object: apple, on: storage table), Take(todo), Speak())"
  },
  {
    "Id": 631,
    "Sentence": "Please find a fork in the living room, spot Jennifer at the exit, and take the paprika",
    "Remarks": "paprika\n\t Robot will find it on the bookcase\n\n",
    "Command": "Sequence(Find(Find(object: fork, in: living room)), Find(Person(Jennifer, at: exit)), Take(object: paprika, from: bookcase))"
  },
  {
    "Id": 632,
    "Sentence": "Bring me some snacks from the fridge",
    "Remarks": null,
    "Command": "Bring(category: snacks, from: fridge, to speaker)"
  },
  {
    "Id": 633,
    "Sentence": "Offer something to drink to all the men in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Serve(to: men, in: corridor, somethingTo: drink)"
  },
  {
    "Id": 634,
    "Sentence": "Bring the knife to the woman pointing to the right in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Bring(object: knife, to: Person(woman pointing to the right), in: corridor)"
  },
  {
    "Id": 635,
    "Sentence": "Offer something to drink to all the elders pointing to the right in the dining room please",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: elders pointing to the right, in: dining room, somethingTo: drink)"
  },
  {
    "Id": 636,
    "Sentence": "Pinpoint Patricia, come behind her, and leave sponge on the counter please",
    "Remarks": "Patricia\n\t She is waving at the dining room\n\n",
    "Command": "Sequence(Follow(Person(Patricia)), Bring(object: sponge, on: counter))"
  },
  {
    "Id": 637,
    "Sentence": "Please offer something to eat to all the men waving in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Serve(to: men waving, in: kitchen, somethingTo: eat)"
  },
  {
    "Id": 638,
    "Sentence": "Could you enter to the kitchen, find Robin, and escort her to the exit",
    "Remarks": "Robin\n\t She is waving. Place three people in the room\n\n",
    "Command": "Guide(Person(Robin, in: kitchen), to: exit)"
  },
  {
    "Id": 639,
    "Sentence": "Could you follow the person at the dining table",
    "Remarks": "Remarks\n\t The Professional Walker must leave the arena and walk through a crowd of at least 5 people who must not let the robot pass. Once the robot has re-encountered its operator, the Professional Walker must lead the robot to corridor \n\n",
    "Command": "Follow(Person(at: dining table))"
  },
  {
    "Id": 640,
    "Sentence": "Tell me how many children in the kitchen are wearing shoes",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children are wearing shoes, in: kitchen)"
  },
  {
    "Id": 641,
    "Sentence": "Go to the kitchen, look for the fruits, and tell a joke",
    "Remarks": null,
    "Command": "Sequence(Find(object: fruits, in: kitchen), Speak(a joke))"
  },
  {
    "Id": 642,
    "Sentence": "Navigate to the living room, find the tableware, and place cup on the storage table",
    "Remarks": null,
    "Command": "Sequence(Find(object: tableware, in: living room), Bring(object: cup, on: storage table))"
  },
  {
    "Id": 643,
    "Sentence": "Contact Robert at the exit, then greet him in the living room",
    "Remarks": "living room\n\t At least three people must be here\nRemarks\n\tThere is only one person at exit\n\n",
    "Command": "Meet(Person(named: Robert, at: exit), movingTo: living room)"
  },
  {
    "Id": 644,
    "Sentence": "Get to know Alex at the entrance, then find him in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\nRemarks\n\tThere is only one person at entrance\n\n",
    "Command": "Meet(Person(named: Alex, at: entrance), movingTo: kitchen)"
  },
  {
    "Id": 645,
    "Sentence": "Could you count the gray food objects at the sink and inform me",
    "Remarks": null,
    "Command": "Count(object: gray food objects, at: sink, reportTo: speaker)"
  },
  {
    "Id": 646,
    "Sentence": "Introduce yourself to the tallest man in the living room please",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(tallest man, in: living room), method: introduce yourself to)"
  },
  {
    "Id": 647,
    "Sentence": "Could you tell me how many elders are raising their left arm in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: elders are raising their left arm, in: dining room)"
  },
  {
    "Id": 648,
    "Sentence": "Open the corridor door please",
    "Remarks": null,
    "Command": "Open(door: corridor)"
  },
  {
    "Id": 649,
    "Sentence": "Tell me how many men are raising their left arm in the corridor please",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: men are raising their left arm, in: corridor)"
  },
  {
    "Id": 650,
    "Sentence": "Find Skyler at the end table, put a fruits on the storage table done, and pick up the tray please",
    "Remarks": "apple\n\t Place 3 objects of the same category at storage table\n\n",
    "Command": "Sequence(Find(Person(Skyler, at: end table)), Bring(object: fruits, on: storage table), Take(todo))"
  },
  {
    "Id": 651,
    "Sentence": "Robot please tell me how many people in the dining room are wearing shirts",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: people are wearing shirts, in: dining room)"
  },
  {
    "Id": 652,
    "Sentence": "Offer something to eat to all the standing people in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: standing people, in: dining room, somethingTo: eat)"
  },
  {
    "Id": 653,
    "Sentence": "Pinpoint Skyler at the end table, grasp the cloth, and place it to the bedroom please",
    "Remarks": null,
    "Command": "Sequence(Find(Person(Skyler, at: end table)), Bring(todo, to: bedroom))"
  },
  {
    "Id": 654,
    "Sentence": "Bring the apple to the youngest man in the bedroom please",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "Bring(object: apple, to: Person(youngest man), in: bedroom)"
  },
  {
    "Id": 655,
    "Sentence": "Find Francis in the bedroom, follow her, and look for a pringles please",
    "Remarks": "pringles\n\t Robot must place it on the sink\n\n",
    "Command": "Sequence(Follow(Person(Francis, in: bedroom)), Find(object: pringles))"
  },
  {
    "Id": 656,
    "Sentence": "Offer something to drink to all the children pointing to the left in the living room please",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: children pointing to the left, in: living room, somethingTo: drink)"
  },
  {
    "Id": 657,
    "Sentence": "Could you please look for Linda at the end table, escort her, and pinpoint Linda at the end table",
    "Remarks": null,
    "Command": "Sequence(Guide(Person(Linda, at: end table)), Find(Person(Linda, at: end table)))"
  },
  {
    "Id": 658,
    "Sentence": "Place potato chips on the cupboard, spot a potato chips, and put potato chips on the cupboard please",
    "Remarks": "potato chips\n\t Robot must place it on the cupboard\n\n",
    "Command": "Sequence(Bring(object: potato chips, on: cupboard), Find(object: potato chips), Bring(object: potato chips, on: cupboard))"
  },
  {
    "Id": 659,
    "Sentence": "Offer something to drink to all the people waving in the dining room please",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: people waving, in: dining room, somethingTo: drink)"
  },
  {
    "Id": 660,
    "Sentence": "Robot please describe to me the person sitting at the dining table",
    "Remarks": null,
    "Command": "Describe(person: sitting, at: dining table, to: speaker)"
  },
  {
    "Id": 661,
    "Sentence": "Navigate to the living room, find the fruits, and locate Michael in the living room please",
    "Remarks": null,
    "Command": "Sequence(Find(object: fruits, in: living room), Find(Person(Michael, in: living room)))"
  },
  {
    "Id": 662,
    "Sentence": "Tell me how many men in the kitchen are sitting",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: men are sitting, in: kitchen)"
  },
  {
    "Id": 663,
    "Sentence": "Please bring the sausages to the child in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Bring(object: sausages, to: Person(child), in: living room)"
  },
  {
    "Id": 664,
    "Sentence": "Could you bring the paprika to the woman dressed in a blue blouse in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Bring(object: paprika, to: Person(woman dressed in a blue blouse), in: living room)"
  },
  {
    "Id": 665,
    "Sentence": "Find a orange, grasp the cloth, and go to the side table, find the cloth, and deliver to it to me please",
    "Remarks": "orange\n\t Robot must place it on the side table\n\n",
    "Command": "Sequence(Find(object: orange), Bring(todo, to: todo))"
  },
  {
    "Id": 666,
    "Sentence": "Retrieve the apple from the counter, put it on the storage table, and say something",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022the day of the month\u0022\n\n",
    "Command": "Sequence(Bring(object: apple, from: counter, to: todo), Speak())"
  },
  {
    "Id": 667,
    "Sentence": "Enter to the kitchen, look for Skyler, and tell what day is today please",
    "Remarks": "Skyler\n\t He is sitting. Place three people in the room\n\n",
    "Command": "Sequence(Find(Person(Skyler, in: kitchen)), Speak(what day is today))"
  },
  {
    "Id": 668,
    "Sentence": "Enter to the living room, find Elizabeth, and retrieve the apple from the cupboard please",
    "Remarks": "Elizabeth\n\t She is standing. Place three people in the room\n\n",
    "Command": "Sequence(Find(Person(Elizabeth, in: living room)), Take(object: apple, from: cupboard))"
  },
  {
    "Id": 669,
    "Sentence": "Offer something to drink to all the women raising their right arm in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Serve(to: women raising their right arm, in: kitchen, somethingTo: drink)"
  },
  {
    "Id": 670,
    "Sentence": "Find Alex in the corridor, find Alex, and look for Alex in the corridor",
    "Remarks": "Alex\n\t He is sitting at the living room\n\n",
    "Command": "Sequence(Find(Person(Alex, in: corridor)), Find(Person(Alex)), Find(Person(Alex, in: corridor)))"
  },
  {
    "Id": 671,
    "Sentence": "Describe the person standing at the desk to me please",
    "Remarks": null,
    "Command": "Describe(person: standing, at: desk, to: speaker)"
  },
  {
    "Id": 672,
    "Sentence": "Enter to the bedroom, look for Patricia, and set orange on the bookcase please",
    "Remarks": "Patricia\n\t She is sitting. Place three people in the room\n\n",
    "Command": "Sequence(Find(Person(Patricia, in: bedroom)), Bring(object: orange, on: bookcase))"
  },
  {
    "Id": 673,
    "Sentence": "Find Robin, find Robin in the dining room, and put orange on the side table",
    "Remarks": "Robin\n\t She is sitting at the living room\n\n",
    "Command": "Sequence(Find(Person(Robin)), Find(Person(Robin, in: dining room)), Bring(object: orange, on: side table))"
  },
  {
    "Id": 674,
    "Sentence": "Hand me the biggest object from the counter",
    "Remarks": null,
    "Command": "Bring(object: biggest object, from: counter, to: speaker)"
  },
  {
    "Id": 675,
    "Sentence": "Could you please tell me how many lying down children there are in the bedroom",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: lying down children, in: bedroom)"
  },
  {
    "Id": 676,
    "Sentence": "Lead John to the bookcase, you may find him at the couch please",
    "Remarks": "Remarks\n\t The person being guided must deviate when indicated by the referee before reaching the bookcase\n\n",
    "Command": "todo"
  },
  {
    "Id": 677,
    "Sentence": "Put a bowl on the bookcase and a fork in it please",
    "Remarks": null,
    "Command": "SetTheTable(using: bowl, on: bookcase, place: fork, at: in it)"
  },
  {
    "Id": 678,
    "Sentence": "Open the exit door please",
    "Remarks": null,
    "Command": "Open(door: exit)"
  },
  {
    "Id": 679,
    "Sentence": "Find Skyler, take him to the dining table, and answer a question",
    "Remarks": "Skyler\n\t He is waving at the desk\n\n",
    "Command": "Sequence(Guide(Person(Skyler)), Answer(question: question))"
  },
  {
    "Id": 680,
    "Sentence": "Locate the basket in the dining room",
    "Remarks": null,
    "Command": "Find(object: basket, in: dining room)"
  },
  {
    "Id": 681,
    "Sentence": "Could you please tell me how many children in the kitchen are sitting",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children are sitting, in: kitchen)"
  },
  {
    "Id": 682,
    "Sentence": "Tell me how many people are pointing to the right in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: people are pointing to the right, in: dining room)"
  },
  {
    "Id": 683,
    "Sentence": "Place a dish on the bookcase and a spoon in it please",
    "Remarks": null,
    "Command": "SetTheTable(using: dish, on: bookcase, place: spoon, at: in it)"
  },
  {
    "Id": 684,
    "Sentence": "Locate Skyler in the dining room, place sponge on the counter, and find the sponge",
    "Remarks": "sponge\n\t Robot must place it on the counter\n\n",
    "Command": "Sequence(Find(Person(Skyler, in: dining room)), Bring(object: sponge, on: counter), Find(object: sponge))"
  },
  {
    "Id": 685,
    "Sentence": "Tell me how many children are wearing sweaters in the corridor please",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children are wearing sweaters, in: corridor)"
  },
  {
    "Id": 686,
    "Sentence": "Grasp the apple, set it on the side table, and say something please",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022your team\u0027s name\u0022\n\n",
    "Command": "Sequence(Bring(todo, to: side table), Speak())"
  },
  {
    "Id": 687,
    "Sentence": "Robot please find Michael in the dining room, find Michael, and answer a question",
    "Remarks": "Michael\n\t He is waving at the corridor\n\n",
    "Command": "Sequence(Find(Person(Michael, in: dining room)), Find(Person(Michael)), Answer(question: question))"
  },
  {
    "Id": 688,
    "Sentence": "Place a fruits on the cupboard done, look for James at the exit, and say whether you dream or not on electric sheep",
    "Remarks": "paprika\n\t Place 3 objects of the same category at cupboard\n\n",
    "Command": "Sequence(Bring(object: fruits, on: cupboard), Find(Person(James, at: exit)), Speak(whether you dream or not on electric sheep))"
  },
  {
    "Id": 689,
    "Sentence": "Robot please spot a paprika in the corridor, take the orange from the storage table, and find Jennifer",
    "Remarks": "Jennifer\n\t She is standing at the living room\n\n",
    "Command": "Sequence(Find(Find(object: paprika, in: corridor)), Take(object: orange, from: storage table), Find(Person(Jennifer)))"
  },
  {
    "Id": 690,
    "Sentence": "Pick up the fruits from the cupboard, put scrubby on the cupboard, and find Linda in the dining room",
    "Remarks": "orange\n\t Place to \n\n",
    "Command": "Sequence(Take(object: fruits, from: cupboard), Bring(object: scrubby, on: cupboard), Find(Person(Linda, in: dining room)))"
  },
  {
    "Id": 691,
    "Sentence": "Robot please spot Elizabeth in the bedroom, follow her, and put the chocolate drink in the dining room done",
    "Remarks": null,
    "Command": "Sequence(Follow(Person(Elizabeth, in: bedroom)), Bring(object: chocolate drink, in: dining room)))"
  },
  {
    "Id": 692,
    "Sentence": "Bring the orange to the person raising their right arm in the bedroom",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "Bring(object: orange, to: Person(person raising their right arm), in: bedroom)"
  },
  {
    "Id": 693,
    "Sentence": "Bring the paprika to the person wearing earrings in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Bring(object: paprika, to: Person(person wearing earrings), in: kitchen)"
  },
  {
    "Id": 694,
    "Sentence": "Tell me how many gray tableware objects are in the end table please",
    "Remarks": null,
    "Command": "Count(object: gray tableware objects, at: end table, reportTo: speaker)"
  },
  {
    "Id": 695,
    "Sentence": "Could you close the exit door",
    "Remarks": null,
    "Command": "Close(door: exit)"
  },
  {
    "Id": 696,
    "Sentence": "Place a bowl on the cupboard and a fork in it please",
    "Remarks": null,
    "Command": "SetTheTable(using: bowl, on: cupboard, place: fork, at: in it)"
  },
  {
    "Id": 697,
    "Sentence": "Could you take the paprika from the storage table, find the bowl, and place bowl on the storage table",
    "Remarks": "bowl\n\t Robot must place it on the storage table\n\n",
    "Command": "Sequence(Take(object: paprika, from: storage table), Find(object: bowl), Bring(object: bowl, on: storage table))"
  },
  {
    "Id": 698,
    "Sentence": "Put a dish on the cupboard and a fork in it please",
    "Remarks": null,
    "Command": "SetTheTable(using: dish, on: cupboard, place: fork, at: in it)"
  },
  {
    "Id": 699,
    "Sentence": "Offer something to eat to all the women pointing to the left in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: women pointing to the left, in: dining room, somethingTo: eat)"
  },
  {
    "Id": 700,
    "Sentence": "Tell me how many elders dressed in blue there are in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: elders dressed in blue, in: dining room)"
  },
  {
    "Id": 701,
    "Sentence": "Bring the cereal to the woman wearing a yellow blouse in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Bring(object: cereal, to: Person(woman wearing a yellow blouse), in: dining room)"
  },
  {
    "Id": 702,
    "Sentence": "Describe the person lying down at the desk to me please",
    "Remarks": null,
    "Command": "Describe(person: lying down, at: desk, to: speaker)"
  },
  {
    "Id": 703,
    "Sentence": "Give me some cleaning stuff from the fridge",
    "Remarks": null,
    "Command": "Bring(category: cleaning stuff, from: fridge, to speaker)"
  },
  {
    "Id": 704,
    "Sentence": "Offer something to eat to all the elders pointing to the left in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: elders pointing to the left, in: living room, somethingTo: eat)"
  },
  {
    "Id": 705,
    "Sentence": "Describe the objects in the sink to me please",
    "Remarks": null,
    "Command": "DescribeObjects(at: sink, to: me)"
  },
  {
    "Id": 706,
    "Sentence": "Enter to the corridor, spot the orange, and place it to the living room please",
    "Remarks": null,
    "Command": "Bring(object: orange, in: corridor, to: living room)"
  },
  {
    "Id": 707,
    "Sentence": "Grasp the knife, get the apple, and give it to me",
    "Remarks": "apple\n\t Robot will find it on the bookcase\n\n",
    "Command": "Sequence(Take(todo), Bring(object: apple, from: bookcase, to: speaker))"
  },
  {
    "Id": 708,
    "Sentence": "Put a dish on the sink and a spoon on its left",
    "Remarks": null,
    "Command": "SetTheTable(using: dish, on: sink, place: spoon, at: on its left)"
  },
  {
    "Id": 709,
    "Sentence": "Spot Jennifer in the bedroom, find a cereal in the bedroom, and say something",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022your team\u0027s name\u0022\n\n",
    "Command": "Sequence(Find(Person(Jennifer, in: bedroom)), Find(Find(object: cereal, in: bedroom)), Speak())"
  },
  {
    "Id": 710,
    "Sentence": "Could you find the basket in the corridor",
    "Remarks": null,
    "Command": "Find(object: basket, in: corridor)"
  },
  {
    "Id": 711,
    "Sentence": "Could you please find Skyler at the dining table, escort her, and answer a question",
    "Remarks": null,
    "Command": "Sequence(Guide(Person(Skyler, at: dining table)), Answer(question: question))"
  },
  {
    "Id": 712,
    "Sentence": "Retrieve the paprika from the counter, set it on the counter, and speak please",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022your team\u0027s name\u0022\n\n",
    "Command": "Sequence(Bring(object: paprika, from: counter, to: counter), Speak())"
  },
  {
    "Id": 713,
    "Sentence": "Tell me how many elders are wearing T-shirts in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: elders are wearing T-shirts, in: kitchen)"
  },
  {
    "Id": 714,
    "Sentence": "Guide the woman waving in the kitchen to the exit please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Guide(Person(woman waving, in: kitchen), to: exit)"
  },
  {
    "Id": 715,
    "Sentence": "Take the paprika from the end table, place it on the end table, and pick up the paprika please",
    "Remarks": "paprika\n\t Robot will find it on the end table\n\n",
    "Command": "Sequence(Bring(object: paprika, from: end table, to: end table), Take(object: paprika, from: end table))"
  },
  {
    "Id": 716,
    "Sentence": "Grasp the paprika from the side table, give it to Francis, and tell what day is tomorrow",
    "Remarks": "Francis\n\t He is waving at the sink\n\n",
    "Command": "Sequence(Bring(object: paprika, from: side table, to: Person(Francis)), Speak(what day is tomorrow))"
  },
  {
    "Id": 717,
    "Sentence": "Put paprika on the dining table, find Robin, and pick up the apple from the dining table please",
    "Remarks": "Robin\n\t She is standing at the entrance\n\n",
    "Command": "Sequence(Bring(object: paprika, on: dining table), Find(Person(Robin)), Take(object: apple, from: dining table))"
  },
  {
    "Id": 718,
    "Sentence": "Describe to me the person lying down at the dishwasher",
    "Remarks": null,
    "Command": "Describe(person: lying down, at: dishwasher, to: speaker)"
  },
  {
    "Id": 719,
    "Sentence": "Deliver to me the cutlery at the right bookcase",
    "Remarks": null,
    "Command": "Bring(category: cutlery, from: Location(right, of: bookcase), to: speaker)"
  },
  {
    "Id": 720,
    "Sentence": "Could you please tell me how many people dressed in blue there are in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: people dressed in blue, in: living room)"
  },
  {
    "Id": 721,
    "Sentence": "Get acquainted with Alex at the bed, then find him in the living room",
    "Remarks": "living room\n\t At least three people must be here\nRemarks\n\tThere is only one person at bed\n\n",
    "Command": "Meet(Person(named: Alex, at: bed), movingTo: living room)"
  },
  {
    "Id": 722,
    "Sentence": "Take the tallest person in the dining room to the bedroom",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Guide(Person(tallest person, in: dining room), to: bedroom)"
  },
  {
    "Id": 723,
    "Sentence": "Deliver me some grape juice in a cup please",
    "Remarks": null,
    "Command": "Pour(grape juice, in: cup)"
  },
  {
    "Id": 724,
    "Sentence": "Put the sausages into the basket on the storage table please",
    "Remarks": null,
    "Command": "Store(object: sausages, in: basket on the storage table)"
  },
  {
    "Id": 725,
    "Sentence": "Tell me how many standing men there are in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: standing men, in: dining room)"
  },
  {
    "Id": 726,
    "Sentence": "Greet the child in the dining room please",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(child, in: dining room), method: greet)"
  },
  {
    "Id": 727,
    "Sentence": "Take the orange from the storage table, put the tray on the counter, and set a fruits on the storage table done",
    "Remarks": "paprika\n\t Place 3 objects of the same category at storage table\n\n",
    "Command": "Sequence(Bring(object: orange, from: storage table, to: counter), Bring(object: fruits, on: storage table))"
  },
  {
    "Id": 728,
    "Sentence": "Find the bag in the kitchen",
    "Remarks": null,
    "Command": "Find(object: bag, in: kitchen)"
  },
  {
    "Id": 729,
    "Sentence": "Bring the knife to the man dressed in a red jacket in the living room please",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Bring(object: knife, to: Person(man dressed in a red jacket), in: living room)"
  },
  {
    "Id": 730,
    "Sentence": "Count the white tableware objects at the sink and report to me please",
    "Remarks": null,
    "Command": "Count(object: white tableware objects, at: sink, reportTo: speaker)"
  },
  {
    "Id": 731,
    "Sentence": "Offer something to drink to all the children pointing to the left in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Serve(to: children pointing to the left, in: kitchen, somethingTo: drink)"
  },
  {
    "Id": 732,
    "Sentence": "Offer something to drink to all the lying down women in the corridor please",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Serve(to: lying down women, in: corridor, somethingTo: drink)"
  },
  {
    "Id": 733,
    "Sentence": "Tell me how the person sitting at the bookcase looks like",
    "Remarks": null,
    "Command": "Describe(person: sitting, at: bookcase, to: speaker)"
  },
  {
    "Id": 734,
    "Sentence": "Pick up a cutlery from the bookcase and put it into the fridge",
    "Remarks": null,
    "Command": "Store(category: cutlery, from: bookcase, in: fridge)"
  },
  {
    "Id": 735,
    "Sentence": "Offer something to eat to all the men wearing blouses in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: men wearing blouses, in: living room, somethingTo: eat)"
  },
  {
    "Id": 736,
    "Sentence": "Describe to me the person lying down at the dishwasher please",
    "Remarks": null,
    "Command": "Describe(person: lying down, at: dishwasher, to: speaker)"
  },
  {
    "Id": 737,
    "Sentence": "Robot please tell me how many people are waving in the bedroom",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: people are waving, in: bedroom)"
  },
  {
    "Id": 738,
    "Sentence": "Locate the bag in the dining room",
    "Remarks": null,
    "Command": "Find(object: bag, in: dining room)"
  },
  {
    "Id": 739,
    "Sentence": "Find Michael at the bookcase, pinpoint a potato chips in the kitchen, and locate Michael please",
    "Remarks": "Michael\n\t He is standing at the end table\n\n",
    "Command": "Sequence(Find(Person(Michael, at: bookcase)), Find(Find(object: potato chips, in: kitchen)), Find(Person(Michael)))"
  },
  {
    "Id": 740,
    "Sentence": "Give me some grape juice in a bowl please",
    "Remarks": null,
    "Command": "Pour(grape juice, in: bowl)"
  },
  {
    "Id": 741,
    "Sentence": "Pick up the cloth, take the fruits from the storage table, and look for a paprika in the corridor please",
    "Remarks": "orange\n\t Place to \n\n",
    "Command": "Sequence(Take(todo), Take(object: fruits, from: storage table), Find(Find(object: paprika, in: corridor)))"
  },
  {
    "Id": 742,
    "Sentence": "Could you tell me how many people are pointing to the left in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: people are pointing to the left, in: dining room)"
  },
  {
    "Id": 743,
    "Sentence": "Robot please greet the youngest person in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(youngest person, in: dining room), method: greet)"
  },
  {
    "Id": 744,
    "Sentence": "Locate William in the bedroom, set the pringles in the kitchen done, and grasp the paprika from the cupboard",
    "Remarks": null,
    "Command": "Sequence(Find(Person(William, in: bedroom)), Bring(object: pringles, in: kitchen)), Take(object: paprika, from: cupboard))"
  },
  {
    "Id": 745,
    "Sentence": "Open the corridor door please",
    "Remarks": null,
    "Command": "Open(door: corridor)"
  },
  {
    "Id": 746,
    "Sentence": "Grasp the fruits from the cupboard, retrieve the bowl, and place it on the cupboard",
    "Remarks": "orange\n\t Place to \n\n",
    "Command": "Sequence(Take(object: fruits, from: cupboard), Bring(todo, to: cupboard))"
  },
  {
    "Id": 747,
    "Sentence": "Could you look for the apple, locate a apple in the dining room, and answer a question",
    "Remarks": "apple\n\t Robot must place it on the cupboard\n\n",
    "Command": "Sequence(Find(object: apple), Find(Find(object: apple, in: dining room)), Answer(question: question))"
  },
  {
    "Id": 748,
    "Sentence": "Could you please enter to the living room, pinpoint James, and look for James",
    "Remarks": "James\n\t He is lying at the exit\n\n",
    "Command": "Sequence(Find(Person(James, in: living room)), Find(Person(James)))"
  },
  {
    "Id": 749,
    "Sentence": "Could you tell me how many children in the bedroom are pointing to the left",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children are pointing to the left, in: bedroom)"
  },
  {
    "Id": 750,
    "Sentence": "Find the tray in the dining room",
    "Remarks": null,
    "Command": "Find(object: tray, in: dining room)"
  },
  {
    "Id": 751,
    "Sentence": "Offer something to eat to all the elders dressed in black in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Serve(to: elders dressed in black, in: kitchen, somethingTo: eat)"
  },
  {
    "Id": 752,
    "Sentence": "Look for Francis, accompany her to the dishwasher, and answer a question",
    "Remarks": "Francis\n\t She is standing at the entrance\n\n",
    "Command": "Sequence(Guide(Person(Francis)), Answer(question: question))"
  },
  {
    "Id": 753,
    "Sentence": "Locate Robin, look for Robin at the dishwasher, and say a joke please",
    "Remarks": "Robin\n\t She is waving at the living room\n\n",
    "Command": "Sequence(Find(Person(Robin)), Find(Person(Robin, at: dishwasher)), Speak(a joke))"
  },
  {
    "Id": 754,
    "Sentence": "Please meet Alex at the bed, then find her in the bedroom",
    "Remarks": "bedroom\n\t At least three people must be here\nRemarks\n\tThere is only one person at bed\n\n",
    "Command": "Meet(Person(named: Alex, at: bed), movingTo: bedroom)"
  },
  {
    "Id": 755,
    "Sentence": "Bring me some chocolate drink in a bowl please",
    "Remarks": null,
    "Command": "Pour(chocolate drink, in: bowl)"
  },
  {
    "Id": 756,
    "Sentence": "Put the paprika into the bag on the bookcase please",
    "Remarks": null,
    "Command": "Store(object: paprika, in: bag on the bookcase)"
  },
  {
    "Id": 757,
    "Sentence": "Could you get the bowl, place it to the living room, and answer a question",
    "Remarks": null,
    "Command": "Sequence(Bring(todo, to: living room), Answer(question: question))"
  },
  {
    "Id": 758,
    "Sentence": "Follow the person at the bed",
    "Remarks": "Remarks\n\t The Professional Walker must leave the arena and walk through a crowd of at least 5 people who must not let the robot pass. Once the robot has re-encountered its operator, the Professional Walker must lead the robot to corridor \n\n",
    "Command": "Follow(Person(at: bed))"
  },
  {
    "Id": 759,
    "Sentence": "Spot the cup, locate Elizabeth at the couch, and escort her to the exit",
    "Remarks": "cup\n\t Robot must place it on the sink\n\n",
    "Command": "Sequence(Find(object: cup), Guide(Person(Elizabeth, at: couch)))"
  },
  {
    "Id": 760,
    "Sentence": "Robot please tell me how many women in the living room are wearing orange",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women are wearing orange, in: living room)"
  },
  {
    "Id": 761,
    "Sentence": "Go behind the youngest person in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Follow(Person(youngest person, in: kitchen))"
  },
  {
    "Id": 762,
    "Sentence": "Describe the person standing at the bed to me",
    "Remarks": null,
    "Command": "Describe(person: standing, at: bed, to: speaker)"
  },
  {
    "Id": 763,
    "Sentence": "Tell me how the person sitting at the sink looks like",
    "Remarks": null,
    "Command": "Describe(person: sitting, at: sink, to: speaker)"
  },
  {
    "Id": 764,
    "Sentence": "Could you navigate to the kitchen, locate the cutlery, and give me the cloth",
    "Remarks": null,
    "Command": "Bring(object: cutlery, in: kitchen, to: todo)"
  },
  {
    "Id": 765,
    "Sentence": "Enter to the dining room, spot Alex, and follow her please",
    "Remarks": "Alex\n\t She is sitting. Place three people in the room\n\n",
    "Command": "Follow(Person(Alex, in: dining room))"
  },
  {
    "Id": 766,
    "Sentence": "Could you please enter to the kitchen, spot the fruits, and place it on the bookcase",
    "Remarks": null,
    "Command": "Bring(object: fruits, in: kitchen, to: todo)"
  },
  {
    "Id": 767,
    "Sentence": "Look for Linda, grasp the cloth, and pick up the apple from the side table from the side table to the side table",
    "Remarks": "Linda\n\t She is waving at the corridor\n\n",
    "Command": "Sequence(Find(Person(Linda)), Bring(todo, to: side table))"
  },
  {
    "Id": 768,
    "Sentence": "Describe the objects in the dining table to me please",
    "Remarks": null,
    "Command": "DescribeObjects(at: dining table, to: me)"
  },
  {
    "Id": 769,
    "Sentence": "Tell me how many men in the kitchen are wearing red",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: men are wearing red, in: kitchen)"
  },
  {
    "Id": 770,
    "Sentence": "Locate Michael, pick up the orange from the end table, and give it to Michael at the end table please",
    "Remarks": "Michael\n\t He is sitting at the dishwasher\n\n",
    "Command": "Sequence(Find(Person(Michael)), Bring(object: orange, from: end table, to: Person(Michael, at: end table)))"
  },
  {
    "Id": 771,
    "Sentence": "Say hello to the man raising their left arm in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(man raising their left arm, in: living room), method: say hello to)"
  },
  {
    "Id": 772,
    "Sentence": "Find the basket in the living room",
    "Remarks": null,
    "Command": "Find(object: basket, in: living room)"
  },
  {
    "Id": 773,
    "Sentence": "Enter to the kitchen, pinpoint the noodles, and place it to the kitchen",
    "Remarks": null,
    "Command": "Bring(object: noodles, in: kitchen, to: kitchen)"
  },
  {
    "Id": 774,
    "Sentence": "Bring the cloth to the person wearing a black sweater in the living room please",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Bring(object: cloth, to: Person(person wearing a black sweater), in: living room)"
  },
  {
    "Id": 775,
    "Sentence": "Take the orange from the end table, place paprika on the end table, and say something",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022what day is tomorrow\u0022\n\n",
    "Command": "Sequence(Take(object: orange, from: end table), Bring(object: paprika, on: end table), Speak())"
  },
  {
    "Id": 776,
    "Sentence": "Enter to the corridor, locate Robin, and speak",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022what day is today\u0022\n\n",
    "Command": "Sequence(Find(Person(Robin, in: corridor)), Speak())"
  },
  {
    "Id": 777,
    "Sentence": "Take the snacks at the side table \u0027s top to the cupboard",
    "Remarks": null,
    "Command": "Bring(category: snacks, from: Location(top, of: side table), to: side table)"
  },
  {
    "Id": 778,
    "Sentence": "Hand me some containers from the oven",
    "Remarks": null,
    "Command": "Bring(category: containers, from: oven, to speaker)"
  },
  {
    "Id": 779,
    "Sentence": "Tell me how many children in the dining room are wearing orange",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children are wearing orange, in: dining room)"
  },
  {
    "Id": 780,
    "Sentence": "Put coke on the end table, find a coke, and say your team\u0027s affiliation please",
    "Remarks": "coke\n\t Robot must place it on the end table\n\n",
    "Command": "Sequence(Bring(object: coke, on: end table), Find(object: coke), Speak(your team\u0027s affiliation))"
  },
  {
    "Id": 781,
    "Sentence": "Tell me how many men dressed in blue there are in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: men dressed in blue, in: corridor)"
  },
  {
    "Id": 782,
    "Sentence": "Open the exit door",
    "Remarks": null,
    "Command": "Open(door: exit)"
  },
  {
    "Id": 783,
    "Sentence": "Describe the objects in the side table to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: side table, to: me)"
  },
  {
    "Id": 784,
    "Sentence": "Meet Michael at the sink, then find him in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\nRemarks\n\tThere is only one person at sink\n\n",
    "Command": "Meet(Person(named: Michael, at: sink), movingTo: dining room)"
  },
  {
    "Id": 785,
    "Sentence": "Could you please bring me some containers from the microwave",
    "Remarks": null,
    "Command": "Bring(category: containers, from: microwave, to speaker)"
  },
  {
    "Id": 786,
    "Sentence": "Find James, come behind him, and grasp the bowl please",
    "Remarks": "James\n\t He is sitting at the dining room\n\n",
    "Command": "Sequence(Follow(Person(James)), Take(todo))"
  },
  {
    "Id": 787,
    "Sentence": "Robot please find Patricia in the bedroom, locate a orange in the bedroom, and look for Patricia",
    "Remarks": "Patricia\n\t She is lying at the sink\n\n",
    "Command": "Sequence(Find(Person(Patricia, in: bedroom)), Find(Find(object: orange, in: bedroom)), Find(Person(Patricia)))"
  },
  {
    "Id": 788,
    "Sentence": "Could you please bring the paprika to the oldest woman in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Bring(object: paprika, to: Person(oldest woman), in: kitchen)"
  },
  {
    "Id": 789,
    "Sentence": "Robot please offer something to eat to all the elders pointing to the left in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: elders pointing to the left, in: dining room, somethingTo: eat)"
  },
  {
    "Id": 790,
    "Sentence": "Place a bowl on the counter and a knife in it please",
    "Remarks": null,
    "Command": "SetTheTable(using: bowl, on: counter, place: knife, at: in it)"
  },
  {
    "Id": 791,
    "Sentence": "Tell me how many children are wearing orange in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children are wearing orange, in: kitchen)"
  },
  {
    "Id": 792,
    "Sentence": "Look for Charlie, follow her, and put grape juice on the bookcase please",
    "Remarks": "Charlie\n\t She is waving at the kitchen\n\n",
    "Command": "Sequence(Follow(Person(Charlie)), Bring(object: grape juice, on: bookcase))"
  },
  {
    "Id": 793,
    "Sentence": "Tell me how many elders are pointing to the right in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: elders are pointing to the right, in: dining room)"
  },
  {
    "Id": 794,
    "Sentence": "Bring the orange to the woman dressed in an orange coat in the bedroom please",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "Bring(object: orange, to: Person(woman dressed in an orange coat), in: bedroom)"
  },
  {
    "Id": 795,
    "Sentence": "Tell me how many elders there are in the bedroom",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: elders, in: bedroom)"
  },
  {
    "Id": 796,
    "Sentence": "Count the cleaning stuff items at the counter and inform me please",
    "Remarks": null,
    "Command": "Count(object: cleaning stuff items, at: counter, reportTo: speaker)"
  },
  {
    "Id": 797,
    "Sentence": "Take the fruits from the desk, set it on the desk, and answer a question",
    "Remarks": "apple\n\t Place to \n\n",
    "Command": "Sequence(Bring(object: fruits, from: desk, to: desk), Answer(question: question))"
  },
  {
    "Id": 798,
    "Sentence": "Tell me how the person lying down at the dishwasher looks like",
    "Remarks": null,
    "Command": "Describe(person: lying down, at: dishwasher, to: speaker)"
  },
  {
    "Id": 799,
    "Sentence": "Could you please bring the orange to the woman raising their left arm in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Bring(object: orange, to: Person(woman raising their left arm), in: corridor)"
  },
  {
    "Id": 800,
    "Sentence": "Take the orange from the cupboard, leave it on the side table, and say something",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022whether you dream or not on electric sheep\u0022\n\n",
    "Command": "Sequence(Bring(object: orange, from: cupboard, to: todo), Speak())"
  },
  {
    "Id": 801,
    "Sentence": "Go after the person at the sink",
    "Remarks": "Remarks\n\t The Professional Walker must leave the arena and walk through a crowd of at least 5 people who must not let the robot pass. Once the robot has re-encountered its operator, the Professional Walker must lead the robot to corridor \n\n",
    "Command": "Follow(Person(at: sink))"
  },
  {
    "Id": 802,
    "Sentence": "Place orange on the sink, get the fruits from the sink, and set it on the sink",
    "Remarks": "apple\n\t Place to \n\n",
    "Command": "Sequence(Bring(object: orange, on: sink), Bring(object: fruits, from: sink, to: sink))"
  },
  {
    "Id": 803,
    "Sentence": "Offer something to drink to all the children wearing blouses in the bedroom please",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "Serve(to: children wearing blouses, in: bedroom, somethingTo: drink)"
  },
  {
    "Id": 804,
    "Sentence": "Meet Francis at the bed and come behind her",
    "Remarks": "Remarks\n\t Follow Francis to the kitchen\n\n",
    "Command": "todo"
  },
  {
    "Id": 805,
    "Sentence": "Could you please greet the child in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(child, in: corridor), method: greet)"
  },
  {
    "Id": 806,
    "Sentence": "Locate Michael at the dining table, accompany him to the kitchen, and find Michael",
    "Remarks": "Michael\n\t He is sitting at the living room\n\n",
    "Command": "Sequence(Guide(Person(Michael, at: dining table)), Find(Person(Michael)))"
  },
  {
    "Id": 807,
    "Sentence": "Robot please pick up a cleaning stuff from the side table and put it into the microwave",
    "Remarks": null,
    "Command": "Store(category: cleaning stuff, from: side table, in: microwave)"
  },
  {
    "Id": 808,
    "Sentence": "Look for Mary in the bedroom, locate Mary at the dishwasher, and speak",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022the day of the month\u0022\n\n",
    "Command": "Sequence(Find(Person(Mary, in: bedroom)), Find(Person(Mary, at: dishwasher)), Speak())"
  },
  {
    "Id": 809,
    "Sentence": "Robot please take the fruits from the storage table, spot Alex in the living room, and put paprika on the storage table",
    "Remarks": "orange\n\t Place to \n\n",
    "Command": "Sequence(Take(object: fruits, from: storage table), Find(Person(Alex, in: living room)), Bring(object: paprika, on: storage table))"
  },
  {
    "Id": 810,
    "Sentence": "Get acquainted with Skyler at the entrance, then find him in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\nRemarks\n\tThere is only one person at entrance\n\n",
    "Command": "Meet(Person(named: Skyler, at: entrance), movingTo: dining room)"
  },
  {
    "Id": 811,
    "Sentence": "Could you meet Jennifer at the entrance and take her to the dining table",
    "Remarks": "Remarks\n\t The person being guided must deviate when indicated by the referee before reaching the dining table\n\n",
    "Command": "todo"
  },
  {
    "Id": 812,
    "Sentence": "Could you tell me how many gray cutlery objects are in the counter",
    "Remarks": null,
    "Command": "Count(object: gray cutlery objects, at: counter, reportTo: speaker)"
  },
  {
    "Id": 813,
    "Sentence": "Describe the objects in the desk to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: desk, to: me)"
  },
  {
    "Id": 814,
    "Sentence": "Go to the exit, meet Skyler, and escort her to the dining table please",
    "Remarks": "Remarks\n\t The person being guided must deviate when indicated by the referee before reaching the dining table\n\n",
    "Command": "todo"
  },
  {
    "Id": 815,
    "Sentence": "Could you please give me some food from the oven",
    "Remarks": null,
    "Command": "Bring(category: food, from: oven, to speaker)"
  },
  {
    "Id": 816,
    "Sentence": "Offer something to drink to all the men in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Serve(to: men, in: kitchen, somethingTo: drink)"
  },
  {
    "Id": 817,
    "Sentence": "Could you please get the tray, put it to the bedroom, and locate Robert at the bed",
    "Remarks": null,
    "Command": "Sequence(Bring(todo, to: bedroom), Find(Person(Robert, at: bed)))"
  },
  {
    "Id": 818,
    "Sentence": "Could you tell me how many lying down men there are in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: lying down men, in: living room)"
  },
  {
    "Id": 819,
    "Sentence": "Could you please spot a apple, place apple on the bookcase, and look for Robin at the sink",
    "Remarks": "apple\n\t Robot must place it on the bookcase\n\n",
    "Command": "Sequence(Find(object: apple), Bring(object: apple, on: bookcase), Find(Person(Robin, at: sink)))"
  },
  {
    "Id": 820,
    "Sentence": "Could you please close the entrance door",
    "Remarks": null,
    "Command": "Close(door: entrance)"
  },
  {
    "Id": 821,
    "Sentence": "Bring me some containers from the basket on the bookcase",
    "Remarks": null,
    "Command": "Bring(category: containers, from: basket on the bookcase, to speaker)"
  },
  {
    "Id": 822,
    "Sentence": "Take the youngest man in the dining room to the living room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Guide(Person(youngest man, in: dining room), to: living room)"
  },
  {
    "Id": 823,
    "Sentence": "Say hello to the child in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(child, in: dining room), method: say hello to)"
  },
  {
    "Id": 824,
    "Sentence": "Could you look for Charlie, spot Charlie in the corridor, and find Charlie at the bed",
    "Remarks": "Charlie\n\t She is sitting at the couch\n\n",
    "Command": "Sequence(Find(Person(Charlie)), Find(Person(Charlie, in: corridor)), Find(Person(Charlie, at: bed)))"
  },
  {
    "Id": 825,
    "Sentence": "Describe the person sitting at the sink to me please",
    "Remarks": null,
    "Command": "Describe(person: sitting, at: sink, to: speaker)"
  },
  {
    "Id": 826,
    "Sentence": "Please look for a crackers in the kitchen, locate Michael at the sink, and speak",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022something about yourself\u0022\n\n",
    "Command": "Sequence(Find(Find(object: crackers, in: kitchen)), Find(Person(Michael, at: sink)), Speak())"
  },
  {
    "Id": 827,
    "Sentence": "Could you tell me how many tableware items are in the counter",
    "Remarks": null,
    "Command": "Count(object: tableware items, at: counter, reportTo: speaker)"
  },
  {
    "Id": 828,
    "Sentence": "Enter to the corridor, look for the food, and locate Robin at the entrance",
    "Remarks": null,
    "Command": "Sequence(Find(object: food, in: corridor), Find(Person(Robin, at: entrance)))"
  },
  {
    "Id": 829,
    "Sentence": "Pick up a cutlery from the bookcase and put it into the oven",
    "Remarks": null,
    "Command": "Store(category: cutlery, from: bookcase, in: oven)"
  },
  {
    "Id": 830,
    "Sentence": "Could you describe the objects in the sink to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: sink, to: me)"
  },
  {
    "Id": 831,
    "Sentence": "Please pick up the paprika from the end table, place the orange in the living room done, and tell the time",
    "Remarks": null,
    "Command": "Sequence(Take(object: paprika, from: end table), Bring(object: orange, in: living room)), Speak(the time))"
  },
  {
    "Id": 832,
    "Sentence": "Tell me how many standing women there are in the bedroom please",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: standing women, in: bedroom)"
  },
  {
    "Id": 833,
    "Sentence": "Robot please locate Charlie in the kitchen, look for Charlie, and accompany him to the kitchen",
    "Remarks": "Charlie\n\t He is waving at the bed\n\n",
    "Command": "Sequence(Find(Person(Charlie, in: kitchen)), Guide(Person(Charlie)))"
  },
  {
    "Id": 834,
    "Sentence": "Offer something to drink to all the women raising their right arm in the corridor please",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Serve(to: women raising their right arm, in: corridor, somethingTo: drink)"
  },
  {
    "Id": 835,
    "Sentence": "Grasp the apple, look for Alex at the end table, and pinpoint Alex at the end table",
    "Remarks": "apple\n\t Robot will find it on the dining table\n\n",
    "Command": "Sequence(Take(object: apple, from: dining table), Find(Person(Alex, at: end table)), Find(Person(Alex, at: end table)))"
  },
  {
    "Id": 836,
    "Sentence": "Hand me some orange juice in a cup",
    "Remarks": null,
    "Command": "Pour(orange juice, in: cup)"
  },
  {
    "Id": 837,
    "Sentence": "Meet Francis at the couch and come after her",
    "Remarks": "Remarks\n\t Follow Francis to the living room\n\n",
    "Command": "todo"
  },
  {
    "Id": 838,
    "Sentence": "Bring the orange to the child in the bedroom",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "Bring(object: orange, to: Person(child), in: bedroom)"
  },
  {
    "Id": 839,
    "Sentence": "Pick up a snacks from the counter and put it into the fridge please",
    "Remarks": null,
    "Command": "Store(category: snacks, from: counter, in: fridge)"
  },
  {
    "Id": 840,
    "Sentence": "Grasp the orange, put it on the bookcase, and place cup on the side table",
    "Remarks": "orange\n\t Robot will find it on the side table\n\n",
    "Command": "Sequence(Bring(object: orange, from: side table, to: todo), Bring(object: cup, on: side table))"
  },
  {
    "Id": 841,
    "Sentence": "Enter to the corridor, pinpoint Linda, and go after her please",
    "Remarks": "Linda\n\t She is sitting. Place three people in the room\n\n",
    "Command": "Follow(Person(Linda, in: corridor))"
  },
  {
    "Id": 842,
    "Sentence": "Could you open the entrance door",
    "Remarks": null,
    "Command": "Open(door: entrance)"
  },
  {
    "Id": 843,
    "Sentence": "Could you please put orange on the end table, leave the orange in the living room done, and answer a question",
    "Remarks": null,
    "Command": "Sequence(Bring(object: orange, on: end table), Bring(object: orange, in: living room)), Answer(question: question))"
  },
  {
    "Id": 844,
    "Sentence": "Describe the objects in the dining table to me please",
    "Remarks": null,
    "Command": "DescribeObjects(at: dining table, to: me)"
  },
  {
    "Id": 845,
    "Sentence": "Locate Robin, grasp the orange from the end table, and give it to me",
    "Remarks": "Robin\n\t He is waving at the corridor\n\n",
    "Command": "Sequence(Find(Person(Robin)), Bring(object: orange, from: end table, to: speaker))"
  },
  {
    "Id": 846,
    "Sentence": "Robot please salute the person wearing a necklace in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(person wearing a necklace, in: kitchen), method: salute)"
  },
  {
    "Id": 847,
    "Sentence": "Could you tell me how many children wearing T-shirts there are in the bedroom",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children wearing T-shirts, in: bedroom)"
  },
  {
    "Id": 848,
    "Sentence": "Robot please serve some orange juice in a cup",
    "Remarks": null,
    "Command": "Pour(orange juice, in: cup)"
  },
  {
    "Id": 849,
    "Sentence": "Follow the person at the end table",
    "Remarks": "Remarks\n\t The Professional Walker must leave the arena and walk through a crowd of at least 5 people who must not let the robot pass. Once the robot has re-encountered its operator, the Professional Walker must lead the robot to corridor \n\n",
    "Command": "Follow(Person(at: end table))"
  },
  {
    "Id": 850,
    "Sentence": "Robot please tell me how many children in the bedroom are wearing blue",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children are wearing blue, in: bedroom)"
  },
  {
    "Id": 851,
    "Sentence": "Offer something to eat to all the people raising their right arm in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Serve(to: people raising their right arm, in: corridor, somethingTo: eat)"
  },
  {
    "Id": 852,
    "Sentence": "Robot please offer something to eat to all the people in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: people, in: living room, somethingTo: eat)"
  },
  {
    "Id": 853,
    "Sentence": "Could you please conduct the woman raising their right arm in the bedroom to the living room",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "Guide(Person(woman raising their right arm, in: bedroom), to: living room)"
  },
  {
    "Id": 854,
    "Sentence": "Tell me how many children in the kitchen are wearing blue please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children are wearing blue, in: kitchen)"
  },
  {
    "Id": 855,
    "Sentence": "Take the bowl, place it to the kitchen, and find a paprika in the bedroom",
    "Remarks": null,
    "Command": "Sequence(Bring(todo, to: kitchen), Find(Find(object: paprika, in: bedroom)))"
  },
  {
    "Id": 856,
    "Sentence": "Please place a fruits on the cupboard done, find Jennifer in the kitchen, and find Jennifer at the bed",
    "Remarks": "paprika\n\t Place 3 objects of the same category at cupboard\n\n",
    "Command": "Sequence(Bring(object: fruits, on: cupboard), Find(Person(Jennifer, in: kitchen)), Find(Person(Jennifer, at: bed)))"
  },
  {
    "Id": 857,
    "Sentence": "Robot please describe the person lying down at the dishwasher to me",
    "Remarks": null,
    "Command": "Describe(person: lying down, at: dishwasher, to: speaker)"
  },
  {
    "Id": 858,
    "Sentence": "Tell me how many children in the corridor are lying down please",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: children are lying down, in: corridor)"
  },
  {
    "Id": 859,
    "Sentence": "Could you contact William at the entrance, then greet him in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\nRemarks\n\tThere is only one person at entrance\n\n",
    "Command": "Meet(Person(named: William, at: entrance), movingTo: corridor)"
  },
  {
    "Id": 860,
    "Sentence": "Bring the apple to the fattest person in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Bring(object: apple, to: Person(fattest person), in: kitchen)"
  },
  {
    "Id": 861,
    "Sentence": "Could you please offer something to drink to all the men wearing shirts in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: men wearing shirts, in: living room, somethingTo: drink)"
  },
  {
    "Id": 862,
    "Sentence": "Robot please enter to the corridor, look for the paprika, and give it to William",
    "Remarks": "William\n\t He is waving at the entrance\n\n",
    "Command": "Bring(object: paprika, in: corridor, to: Person(William))"
  },
  {
    "Id": 863,
    "Sentence": "Could you take the gray cutlery from the cupboard to the bookcase",
    "Remarks": null,
    "Command": "Bring(object: gray cutlery, from: cupboard, to: cupboard)"
  },
  {
    "Id": 864,
    "Sentence": "Take the orange, deliver it to me, and find Skyler in the dining room please",
    "Remarks": "orange\n\t Robot will find it on the desk\n\n",
    "Command": "Sequence(Bring(object: orange, from: desk, to: speaker), Find(Person(Skyler, in: dining room)))"
  },
  {
    "Id": 865,
    "Sentence": "Tell me how many people are wearing gray in the bedroom please",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: people are wearing gray, in: bedroom)"
  },
  {
    "Id": 866,
    "Sentence": "Count the black paprika at the end table and report to me",
    "Remarks": null,
    "Command": "Count(object: black paprika, at: end table, reportTo: speaker)"
  },
  {
    "Id": 867,
    "Sentence": "Locate the cup, place cup on the end table, and locate a cup in the living room",
    "Remarks": "cup\n\t Robot must place it on the end table\n\n",
    "Command": "Sequence(Find(object: cup), Bring(object: cup, on: end table), Find(Find(object: cup, in: living room)))"
  },
  {
    "Id": 868,
    "Sentence": "Count the fruits items at the side table and inform me",
    "Remarks": null,
    "Command": "Count(object: fruits items, at: side table, reportTo: speaker)"
  },
  {
    "Id": 869,
    "Sentence": "Describe the objects in the desk to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: desk, to: me)"
  },
  {
    "Id": 870,
    "Sentence": "Locate the bag in the dining room",
    "Remarks": null,
    "Command": "Find(object: bag, in: dining room)"
  },
  {
    "Id": 871,
    "Sentence": "Could you find a paprika in the dining room, locate Robin, and follow him",
    "Remarks": "Robin\n\t He is standing at the kitchen\n\n",
    "Command": "Sequence(Find(Find(object: paprika, in: dining room)), Follow(Person(Robin)))"
  },
  {
    "Id": 872,
    "Sentence": "Robot please open the corridor door",
    "Remarks": null,
    "Command": "Open(door: corridor)"
  },
  {
    "Id": 873,
    "Sentence": "Say hello to the youngest woman in the living room please",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(youngest woman, in: living room), method: say hello to)"
  },
  {
    "Id": 874,
    "Sentence": "Look for Francis in the dining room, come behind her, and leave a tableware on the bookcase done please",
    "Remarks": "dish\n\t Place 3 objects of the same category at bookcase\n\n",
    "Command": "Sequence(Follow(Person(Francis, in: dining room)), Bring(object: tableware, on: bookcase))"
  },
  {
    "Id": 875,
    "Sentence": "Could you please offer something to drink to all the people in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Serve(to: people, in: corridor, somethingTo: drink)"
  },
  {
    "Id": 876,
    "Sentence": "Offer something to drink to all the people raising their left arm in the dining room please",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: people raising their left arm, in: dining room, somethingTo: drink)"
  },
  {
    "Id": 877,
    "Sentence": "Locate Elizabeth in the living room, locate the spoon, and look for Elizabeth in the living room please",
    "Remarks": "spoon\n\t Robot must place it on the desk\n\n",
    "Command": "Sequence(Find(Person(Elizabeth, in: living room)), Find(object: spoon), Find(Person(Elizabeth, in: living room)))"
  },
  {
    "Id": 878,
    "Sentence": "Go to the kitchen, look for Alex, and escort her please",
    "Remarks": null,
    "Command": "Guide(Person(Alex, in: kitchen))"
  },
  {
    "Id": 879,
    "Sentence": "Retrieve the apple, put it on the dining table, and locate Charlie in the living room please",
    "Remarks": "apple\n\t Robot will find it on the dining table\n\n",
    "Command": "Sequence(Bring(object: apple, from: dining table, to: dining table), Find(Person(Charlie, in: living room)))"
  },
  {
    "Id": 880,
    "Sentence": "Tell me how many women in the kitchen are wearing blouses",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women are wearing blouses, in: kitchen)"
  },
  {
    "Id": 881,
    "Sentence": "Could you describe the objects in the side table to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: side table, to: me)"
  },
  {
    "Id": 882,
    "Sentence": "Put pringles on the end table, take the paprika, and say the time",
    "Remarks": "paprika\n\t Robot will find it on the end table\n\n",
    "Command": "Sequence(Bring(object: pringles, on: end table), Take(object: paprika, from: end table), Speak(the time))"
  },
  {
    "Id": 883,
    "Sentence": "Tell me how many women in the living room are wearing black",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women are wearing black, in: living room)"
  },
  {
    "Id": 884,
    "Sentence": "Look for the tray in the dining room",
    "Remarks": null,
    "Command": "Find(object: tray, in: dining room)"
  },
  {
    "Id": 885,
    "Sentence": "Look for Charlie in the corridor, come behind him, and speak",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022your team\u0027s name\u0022\n\n",
    "Command": "Sequence(Follow(Person(Charlie, in: corridor)), Speak())"
  },
  {
    "Id": 886,
    "Sentence": "Grasp the paprika, locate Robin at the end table, and look for Robin at the end table",
    "Remarks": "paprika\n\t Robot will find it on the counter\n\n",
    "Command": "Sequence(Take(object: paprika, from: counter), Find(Person(Robin, at: end table)), Find(Person(Robin, at: end table)))"
  },
  {
    "Id": 887,
    "Sentence": "Robot please look for Mary in the kitchen, pinpoint a orange in the kitchen, and find Mary",
    "Remarks": "Mary\n\t She is sitting at the end table\n\n",
    "Command": "Sequence(Find(Person(Mary, in: kitchen)), Find(Find(object: orange, in: kitchen)), Find(Person(Mary)))"
  },
  {
    "Id": 888,
    "Sentence": "Tell me how many people are wearing gray in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: people are wearing gray, in: living room)"
  },
  {
    "Id": 889,
    "Sentence": "Close the entrance door",
    "Remarks": null,
    "Command": "Close(door: entrance)"
  },
  {
    "Id": 890,
    "Sentence": "Could you please close the corridor door",
    "Remarks": null,
    "Command": "Close(door: corridor)"
  },
  {
    "Id": 891,
    "Sentence": "Robot please locate Robin in the living room, follow him, and speak",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022the time\u0022\n\n",
    "Command": "Sequence(Follow(Person(Robin, in: living room)), Speak())"
  },
  {
    "Id": 892,
    "Sentence": "Look for a grape juice in the kitchen, leave the grape juice in the kitchen done, and tell what day is tomorrow",
    "Remarks": null,
    "Command": "Sequence(Find(Find(object: grape juice, in: kitchen)), Bring(object: grape juice, in: kitchen)), Speak(what day is tomorrow))"
  },
  {
    "Id": 893,
    "Sentence": "Robot please locate Charlie at the end table, look for Charlie, and get the cloth",
    "Remarks": "Charlie\n\t He is sitting at the corridor\n\n",
    "Command": "Sequence(Find(Person(Charlie, at: end table)), Find(Person(Charlie)), Take(todo))"
  },
  {
    "Id": 894,
    "Sentence": "Give me some coke in a bowl",
    "Remarks": null,
    "Command": "Pour(coke, in: bowl)"
  },
  {
    "Id": 895,
    "Sentence": "Go to the dining room, pinpoint the fruits, and answer a question",
    "Remarks": null,
    "Command": "Sequence(Find(object: fruits, in: dining room), Answer(question: question))"
  },
  {
    "Id": 896,
    "Sentence": "Go to the corridor, locate the cleaning stuff, and navigate to the storage table, look for the cloth, and set it on the bookcase",
    "Remarks": null,
    "Command": "Bring(object: cleaning stuff, in: corridor, to: todo)"
  },
  {
    "Id": 897,
    "Sentence": "Robot please locate Robin at the bookcase, escort him, and pick up the tray",
    "Remarks": null,
    "Command": "Sequence(Guide(Person(Robin, at: bookcase)), Take(todo))"
  },
  {
    "Id": 898,
    "Sentence": "Guide the person at the bookcase to the exit",
    "Remarks": "Remarks\n\t The Professional Walker must, in any order: a) stop following the robot and head towards desk, b) stop and wait there, and c) start walking very slow. \n\n",
    "Command": "Guide(Person(at: bookcase), to: exit)"
  },
  {
    "Id": 899,
    "Sentence": "Enter to the kitchen, pinpoint the potato chips, and get the fruits from the end table",
    "Remarks": "apple\n\t Place to \n\n",
    "Command": "Sequence(Find(object: potato chips, in: kitchen), Take(object: fruits, from: end table))"
  },
  {
    "Id": 900,
    "Sentence": "Deliver me some coke in a cup please",
    "Remarks": null,
    "Command": "Pour(coke, in: cup)"
  },
  {
    "Id": 901,
    "Sentence": "Please locate Francis at the bed, spot a cup in the bedroom, and say something",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022the day of the week\u0022\n\n",
    "Command": "Sequence(Find(Person(Francis, at: bed)), Find(Find(object: cup, in: bedroom)), Speak())"
  },
  {
    "Id": 902,
    "Sentence": "Bring me some orange juice in a bowl please",
    "Remarks": null,
    "Command": "Pour(orange juice, in: bowl)"
  },
  {
    "Id": 903,
    "Sentence": "Contact Skyler at the entrance, then find her in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\nRemarks\n\tThere is only one person at entrance\n\n",
    "Command": "Meet(Person(named: Skyler, at: entrance), movingTo: dining room)"
  },
  {
    "Id": 904,
    "Sentence": "Take the orange, put it on the counter, and tell the day of the week",
    "Remarks": "orange\n\t Robot will find it on the counter\n\n",
    "Command": "Sequence(Bring(object: orange, from: counter, to: counter), Speak(the day of the week))"
  },
  {
    "Id": 905,
    "Sentence": "Locate Robin, locate Robin at the sink, and take the bowl please",
    "Remarks": "Robin\n\t She is sitting at the bed\n\n",
    "Command": "Sequence(Find(Person(Robin)), Find(Person(Robin, at: sink)), Take(todo))"
  },
  {
    "Id": 906,
    "Sentence": "Could you please find Skyler, look for Skyler in the bedroom, and pinpoint a orange in the bedroom",
    "Remarks": "Skyler\n\t He is standing at the living room\n\n",
    "Command": "Sequence(Find(Person(Skyler)), Find(Person(Skyler, in: bedroom)), Find(Find(object: orange, in: bedroom)))"
  },
  {
    "Id": 907,
    "Sentence": "Go to the desk, look for Elizabeth, and take her to the bedroom",
    "Remarks": "Elizabeth\n\t She is waving. Place three people there\n\n",
    "Command": "Guide(Person(Elizabeth, at: desk), to: bedroom)"
  },
  {
    "Id": 908,
    "Sentence": "Tell me how many women are wearing T-shirts in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women are wearing T-shirts, in: kitchen)"
  },
  {
    "Id": 909,
    "Sentence": "Could you pour some chocolate drink in a bowl",
    "Remarks": null,
    "Command": "Pour(chocolate drink, in: bowl)"
  },
  {
    "Id": 910,
    "Sentence": "Could you please bring the paprika to the person raising their right arm in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Bring(object: paprika, to: Person(person raising their right arm), in: dining room)"
  },
  {
    "Id": 911,
    "Sentence": "Tell me how many men are pointing to the right in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: men are pointing to the right, in: corridor)"
  },
  {
    "Id": 912,
    "Sentence": "Pour some orange juice in a bowl please",
    "Remarks": null,
    "Command": "Pour(orange juice, in: bowl)"
  },
  {
    "Id": 913,
    "Sentence": "Could you find Charlie, take the paprika from the side table, and answer a question",
    "Remarks": "Charlie\n\t She is lying at the exit\n\n",
    "Command": "Sequence(Find(Person(Charlie)), Take(object: paprika, from: side table), Answer(question: question))"
  },
  {
    "Id": 914,
    "Sentence": "Look for the bag in the corridor",
    "Remarks": null,
    "Command": "Find(object: bag, in: corridor)"
  },
  {
    "Id": 915,
    "Sentence": "Close the corridor door please",
    "Remarks": null,
    "Command": "Close(door: corridor)"
  },
  {
    "Id": 916,
    "Sentence": "Open the entrance door",
    "Remarks": null,
    "Command": "Open(door: entrance)"
  },
  {
    "Id": 917,
    "Sentence": "Escort Linda from the dishwasher to the exit please",
    "Remarks": "Remarks\n\t The person being guided must deviate when indicated by the referee before reaching the exit\n\n",
    "Command": "todo"
  },
  {
    "Id": 918,
    "Sentence": "Could you open the exit door",
    "Remarks": null,
    "Command": "Open(door: exit)"
  },
  {
    "Id": 919,
    "Sentence": "Could you open the exit door",
    "Remarks": null,
    "Command": "Open(door: exit)"
  },
  {
    "Id": 920,
    "Sentence": "Tell me how many cutlery items are in the side table",
    "Remarks": null,
    "Command": "Count(object: cutlery items, at: side table, reportTo: speaker)"
  },
  {
    "Id": 921,
    "Sentence": "Please place a dish on the storage table and a knife on its right",
    "Remarks": null,
    "Command": "SetTheTable(using: dish, on: storage table, place: knife, at: on its right)"
  },
  {
    "Id": 922,
    "Sentence": "Tell me how many elders are wearing black in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: elders are wearing black, in: dining room)"
  },
  {
    "Id": 923,
    "Sentence": "Find a pringles in the dining room, find Mary, and tell the time please",
    "Remarks": "Mary\n\t She is waving at the corridor\n\n",
    "Command": "Sequence(Find(Find(object: pringles, in: dining room)), Find(Person(Mary)), Speak(the time))"
  },
  {
    "Id": 924,
    "Sentence": "Enter to the kitchen, locate Jennifer, and look for Jennifer",
    "Remarks": "Jennifer\n\t She is waving at the living room\n\n",
    "Command": "Sequence(Find(Person(Jennifer, in: kitchen)), Find(Person(Jennifer)))"
  },
  {
    "Id": 925,
    "Sentence": "Robot please look for Michael, locate Michael at the dining table, and lead him to the dining table",
    "Remarks": "Michael\n\t He is waving at the end table\n\n",
    "Command": "Sequence(Find(Person(Michael)), Guide(Person(Michael, at: dining table)))"
  },
  {
    "Id": 926,
    "Sentence": "Locate the sausages, look for Francis at the desk, and answer a question please",
    "Remarks": "sausages\n\t Robot must place it on the counter\n\n",
    "Command": "Sequence(Find(object: sausages), Find(Person(Francis, at: desk)), Answer(question: question))"
  },
  {
    "Id": 927,
    "Sentence": "Could you please put a cup on the cupboard and a spoon on its right",
    "Remarks": null,
    "Command": "SetTheTable(using: cup, on: cupboard, place: spoon, at: on its right)"
  },
  {
    "Id": 928,
    "Sentence": "Look for Skyler in the bedroom, find a paprika in the bedroom, and take the fruits from the bookcase",
    "Remarks": "orange\n\t Place to \n\n",
    "Command": "Sequence(Find(Person(Skyler, in: bedroom)), Find(Find(object: paprika, in: bedroom)), Take(object: fruits, from: bookcase))"
  },
  {
    "Id": 929,
    "Sentence": "Locate Robin in the bedroom, grasp the cloth, and put a cleaning stuff on the storage table done",
    "Remarks": "sponge\n\t Place 3 objects of the same category at storage table\n\n",
    "Command": "Sequence(Find(Person(Robin, in: bedroom)), Take(todo), Bring(object: cleaning stuff, on: storage table))"
  },
  {
    "Id": 930,
    "Sentence": "Locate Jennifer in the kitchen, look for Jennifer, and tell your team\u0027s country please",
    "Remarks": "Jennifer\n\t She is lying at the couch\n\n",
    "Command": "Sequence(Find(Person(Jennifer, in: kitchen)), Find(Person(Jennifer)), Speak(your team\u0027s country))"
  },
  {
    "Id": 931,
    "Sentence": "Find Francis at the end table, get the fruits from the cupboard, and say what day is today",
    "Remarks": "orange\n\t Place to \n\n",
    "Command": "Sequence(Find(Person(Francis, at: end table)), Take(object: fruits, from: cupboard), Speak(what day is today))"
  },
  {
    "Id": 932,
    "Sentence": "Take the cutlery at the end table \u0027s top to the dining table",
    "Remarks": null,
    "Command": "Bring(category: cutlery, from: Location(top, of: end table), to: end table)"
  },
  {
    "Id": 933,
    "Sentence": "Describe the person lying down at the bookcase to me",
    "Remarks": null,
    "Command": "Describe(person: lying down, at: bookcase, to: speaker)"
  },
  {
    "Id": 934,
    "Sentence": "Take the tableware at the bookcase \u0027s middle bottom to the cupboard please",
    "Remarks": null,
    "Command": "Bring(category: tableware, from: Location(middle bottom, of: bookcase), to: bookcase)"
  },
  {
    "Id": 935,
    "Sentence": "Describe the objects in the bookcase to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: bookcase, to: me)"
  },
  {
    "Id": 936,
    "Sentence": "Take the orange, locate Skyler at the exit, and find a paprika in the kitchen",
    "Remarks": "orange\n\t Robot will find it on the side table\n\n",
    "Command": "Sequence(Take(object: orange, from: side table), Find(Person(Skyler, at: exit)), Find(Find(object: paprika, in: kitchen)))"
  },
  {
    "Id": 937,
    "Sentence": "Offer something to eat to all the men dressed in blue in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Serve(to: men dressed in blue, in: kitchen, somethingTo: eat)"
  },
  {
    "Id": 938,
    "Sentence": "Look for a paprika in the corridor, look for Skyler, and escort her to the corridor",
    "Remarks": "Skyler\n\t She is waving at the bookcase\n\n",
    "Command": "Sequence(Find(Find(object: paprika, in: corridor)), Guide(Person(Skyler)))"
  },
  {
    "Id": 939,
    "Sentence": "Locate Charlie in the kitchen, find a paprika in the kitchen, and put the paprika in the living room done",
    "Remarks": null,
    "Command": "Sequence(Find(Person(Charlie, in: kitchen)), Find(Find(object: paprika, in: kitchen)), Bring(object: paprika, in: living room)))"
  },
  {
    "Id": 940,
    "Sentence": "Could you please look for Charlie, pick up the paprika from the desk, and place it on the desk",
    "Remarks": "Charlie\n\t She is waving at the dishwasher\n\n",
    "Command": "Sequence(Find(Person(Charlie)), Bring(object: paprika, from: desk, to: desk))"
  },
  {
    "Id": 941,
    "Sentence": "Offer something to eat to all the children pointing to the right in the corridor please",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Serve(to: children pointing to the right, in: corridor, somethingTo: eat)"
  },
  {
    "Id": 942,
    "Sentence": "Get the paprika, put it on the storage table, and find Skyler in the bedroom please",
    "Remarks": "paprika\n\t Robot will find it on the storage table\n\n",
    "Command": "Sequence(Bring(object: paprika, from: storage table, to: todo), Find(Person(Skyler, in: bedroom)))"
  },
  {
    "Id": 943,
    "Sentence": "Meet Robin at the bookcase, then greet her in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\nRemarks\n\tThere is only one person at bookcase\n\n",
    "Command": "Meet(Person(named: Robin, at: bookcase), movingTo: corridor)"
  },
  {
    "Id": 944,
    "Sentence": "Get the tray, leave it to the bedroom, and take the orange from the side table",
    "Remarks": null,
    "Command": "Sequence(Bring(todo, to: bedroom), Take(object: orange, from: side table))"
  },
  {
    "Id": 945,
    "Sentence": "Could you grasp the cloth, deliver it to Charlie, and tell a joke",
    "Remarks": "Charlie\n\t She is sitting at the dishwasher\n\n",
    "Command": "Sequence(Bring(todo, to: Person(Charlie)), Speak(a joke))"
  },
  {
    "Id": 946,
    "Sentence": "Open the entrance door please",
    "Remarks": null,
    "Command": "Open(door: entrance)"
  },
  {
    "Id": 947,
    "Sentence": "Robot please enter to the bedroom, locate the snacks, and place it on the counter",
    "Remarks": null,
    "Command": "Bring(object: snacks, in: bedroom, to: counter)"
  },
  {
    "Id": 948,
    "Sentence": "Spot the tray in the dining room",
    "Remarks": null,
    "Command": "Find(object: tray, in: dining room)"
  },
  {
    "Id": 949,
    "Sentence": "Enter to the bedroom, locate the crackers, and leave it to the kitchen please",
    "Remarks": null,
    "Command": "Bring(object: crackers, in: bedroom, to: kitchen)"
  },
  {
    "Id": 950,
    "Sentence": "Bring the orange to the slimmest woman in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Bring(object: orange, to: Person(slimmest woman), in: living room)"
  },
  {
    "Id": 951,
    "Sentence": "Look for Charlie in the kitchen, put the noodles in the living room done, and spot a noodles in the kitchen",
    "Remarks": null,
    "Command": "Sequence(Find(Person(Charlie, in: kitchen)), Bring(object: noodles, in: living room)), Find(Find(object: noodles, in: kitchen)))"
  },
  {
    "Id": 952,
    "Sentence": "Say hello to the slimmest woman in the bedroom",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(slimmest woman, in: bedroom), method: say hello to)"
  },
  {
    "Id": 953,
    "Sentence": "Offer something to drink to all the women pointing to the left in the bedroom",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "Serve(to: women pointing to the left, in: bedroom, somethingTo: drink)"
  },
  {
    "Id": 954,
    "Sentence": "Robot please tell me how many men in the dining room are wearing sweaters",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: men are wearing sweaters, in: dining room)"
  },
  {
    "Id": 955,
    "Sentence": "Go to the bedroom, look for Charlie, and say something about yourself",
    "Remarks": "Charlie\n\t He is waving. Place three people in the room\n\n",
    "Command": "Sequence(Find(Person(Charlie, in: bedroom)), Speak(something about yourself))"
  },
  {
    "Id": 956,
    "Sentence": "Look for Patricia, lead her to the exit, and tell what day is today",
    "Remarks": "Patricia\n\t She is lying at the bed\n\n",
    "Command": "Sequence(Guide(Person(Patricia)), Speak(what day is today))"
  },
  {
    "Id": 957,
    "Sentence": "Robot please count the black snacks objects at the sink and inform me",
    "Remarks": null,
    "Command": "Count(object: black snacks objects, at: sink, reportTo: speaker)"
  },
  {
    "Id": 958,
    "Sentence": "Please offer something to eat to all the children pointing to the left in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: children pointing to the left, in: dining room, somethingTo: eat)"
  },
  {
    "Id": 959,
    "Sentence": "Tell me how many people are wearing coats in the bedroom please",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: people are wearing coats, in: bedroom)"
  },
  {
    "Id": 960,
    "Sentence": "Open the exit door",
    "Remarks": null,
    "Command": "Open(door: exit)"
  },
  {
    "Id": 961,
    "Sentence": "Offer something to eat to all the women dressed in red in the living room",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: women dressed in red, in: living room, somethingTo: eat)"
  },
  {
    "Id": 962,
    "Sentence": "Deliver me some food from the fridge please",
    "Remarks": null,
    "Command": "Bring(category: food, from: fridge, to speaker)"
  },
  {
    "Id": 963,
    "Sentence": "Offer something to drink to all the people raising their right arm in the corridor",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Serve(to: people raising their right arm, in: corridor, somethingTo: drink)"
  },
  {
    "Id": 964,
    "Sentence": "Grasp the orange from the counter, pick up the bowl, and give it to John please",
    "Remarks": "John\n\t He is waving at the exit\n\n",
    "Command": "Sequence(Take(object: orange, from: counter), Bring(todo, to: Person(John)))"
  },
  {
    "Id": 965,
    "Sentence": "Put apple on the counter, spot Linda in the living room, and look for a apple",
    "Remarks": "apple\n\t Robot must place it on the counter\n\n",
    "Command": "Sequence(Bring(object: apple, on: counter), Find(Person(Linda, in: living room)), Find(object: apple))"
  },
  {
    "Id": 966,
    "Sentence": "Look for Robin at the dining table, find Robin, and tell something about yourself",
    "Remarks": "Robin\n\t She is waving at the kitchen\n\n",
    "Command": "Sequence(Find(Person(Robin, at: dining table)), Find(Person(Robin)), Speak(something about yourself))"
  },
  {
    "Id": 967,
    "Sentence": "Tell me how many drinks items are in the bookcase",
    "Remarks": null,
    "Command": "Count(object: drinks items, at: bookcase, reportTo: speaker)"
  },
  {
    "Id": 968,
    "Sentence": "Enter to the kitchen, look for the apple, and say something please",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022your team\u0027s affiliation\u0022\n\n",
    "Command": "Sequence(Find(object: apple, in: kitchen), Speak())"
  },
  {
    "Id": 969,
    "Sentence": "Tell me how many elders are pointing to the left in the corridor please",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: elders are pointing to the left, in: corridor)"
  },
  {
    "Id": 970,
    "Sentence": "Bring the orange to the youngest man in the living room please",
    "Remarks": "living room\n\t At least three people must be here\n\n",
    "Command": "Bring(object: orange, to: Person(youngest man), in: living room)"
  },
  {
    "Id": 971,
    "Sentence": "Please deliver me some cleaning stuff from the oven",
    "Remarks": null,
    "Command": "Bring(category: cleaning stuff, from: oven, to speaker)"
  },
  {
    "Id": 972,
    "Sentence": "Put the orange into the microwave please",
    "Remarks": null,
    "Command": "Store(object: orange, in: microwave)"
  },
  {
    "Id": 973,
    "Sentence": "Open the entrance door please",
    "Remarks": null,
    "Command": "Open(door: entrance)"
  },
  {
    "Id": 974,
    "Sentence": "Get the orange from the bookcase, deliver it to Michael, and say something about yourself",
    "Remarks": "Michael\n\t He is standing at the exit\n\n",
    "Command": "Sequence(Bring(object: orange, from: bookcase, to: Person(Michael)), Speak(something about yourself))"
  },
  {
    "Id": 975,
    "Sentence": "Find the chocolate drink, pinpoint Alex at the end table, and answer a question",
    "Remarks": "chocolate drink\n\t Robot must place it on the storage table\n\n",
    "Command": "Sequence(Find(object: chocolate drink), Find(Person(Alex, at: end table)), Answer(question: question))"
  },
  {
    "Id": 976,
    "Sentence": "Robot please open the entrance door",
    "Remarks": null,
    "Command": "Open(door: entrance)"
  },
  {
    "Id": 977,
    "Sentence": "Offer something to drink to all the women raising their right arm in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: women raising their right arm, in: dining room, somethingTo: drink)"
  },
  {
    "Id": 978,
    "Sentence": "Could you offer something to drink to all the women in the dining room",
    "Remarks": "dining room\n\t At least three people must be here\n\n",
    "Command": "Serve(to: women, in: dining room, somethingTo: drink)"
  },
  {
    "Id": 979,
    "Sentence": "Bring me some grape juice in a bowl please",
    "Remarks": null,
    "Command": "Pour(grape juice, in: bowl)"
  },
  {
    "Id": 980,
    "Sentence": "Please get the fruits from the storage table, leave the tray on the cupboard, and say the day of the month",
    "Remarks": "apple\n\t Place to \n\n",
    "Command": "Sequence(Bring(object: fruits, from: storage table, to: cupboard), Speak(the day of the month))"
  },
  {
    "Id": 981,
    "Sentence": "Could you locate the orange, grasp the paprika from the sink, and put it on the bookcase",
    "Remarks": "orange\n\t Robot must place it on the sink\n\n",
    "Command": "Sequence(Find(object: orange), Bring(object: paprika, from: sink, to: todo))"
  },
  {
    "Id": 982,
    "Sentence": "Close the exit door",
    "Remarks": null,
    "Command": "Close(door: exit)"
  },
  {
    "Id": 983,
    "Sentence": "Look for a chocolate drink in the kitchen, put chocolate drink on the bookcase, and speak please",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022the time\u0022\n\n",
    "Command": "Sequence(Find(Find(object: chocolate drink, in: kitchen)), Bring(object: chocolate drink, on: bookcase), Speak())"
  },
  {
    "Id": 984,
    "Sentence": "Offer something to drink to all the men pointing to the left in the corridor please",
    "Remarks": "corridor\n\t At least three people must be here\n\n",
    "Command": "Serve(to: men pointing to the left, in: corridor, somethingTo: drink)"
  },
  {
    "Id": 985,
    "Sentence": "Take the bowl, locate Robin at the sink, and escort her please",
    "Remarks": null,
    "Command": "Sequence(Take(todo), Guide(Person(Robin, at: sink)))"
  },
  {
    "Id": 986,
    "Sentence": "Locate a sprite in the dining room, spot Charlie in the dining room, and say something",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022your team\u0027s affiliation\u0022\n\n",
    "Command": "Sequence(Find(Find(object: sprite, in: dining room)), Find(Person(Charlie, in: dining room)), Speak())"
  },
  {
    "Id": 987,
    "Sentence": "Could you accompany William from the dishwasher to the kitchen",
    "Remarks": null,
    "Command": "todo"
  },
  {
    "Id": 988,
    "Sentence": "Robot please retrieve the orange, place cloth on the side table, and find a cloth in the corridor",
    "Remarks": "orange\n\t Robot will find it on the side table\n\n",
    "Command": "Sequence(Take(object: orange, from: side table), Bring(object: cloth, on: side table), Find(Find(object: cloth, in: corridor)))"
  },
  {
    "Id": 989,
    "Sentence": "Tell me how many women there are in the kitchen",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "CountPeople(filter: women, in: kitchen)"
  },
  {
    "Id": 990,
    "Sentence": "Offer something to eat to all the people raising their right arm in the kitchen please",
    "Remarks": "kitchen\n\t At least three people must be here\n\n",
    "Command": "Serve(to: people raising their right arm, in: kitchen, somethingTo: eat)"
  },
  {
    "Id": 991,
    "Sentence": "Deliver to me some cutlery from the oven",
    "Remarks": null,
    "Command": "Bring(category: cutlery, from: oven, to speaker)"
  },
  {
    "Id": 992,
    "Sentence": "Could you please describe the objects in the cupboard to me",
    "Remarks": null,
    "Command": "DescribeObjects(at: cupboard, to: me)"
  },
  {
    "Id": 993,
    "Sentence": "Please get the paprika from the desk, give me the tray, and find Francis",
    "Remarks": "Francis\n\t He is standing at the bedroom\n\n",
    "Command": "Sequence(Bring(object: paprika, from: desk, to: todo), Find(Person(Francis)))"
  },
  {
    "Id": 994,
    "Sentence": "Pick up a fruits from the sink and put it into the basket on the storage table",
    "Remarks": null,
    "Command": "Store(category: fruits, from: sink, in: basket on the storage table)"
  },
  {
    "Id": 995,
    "Sentence": "Could you look for a spoon, leave spoon on the cupboard, and find a spoon in the living room",
    "Remarks": "spoon\n\t Robot must place it on the cupboard\n\n",
    "Command": "Sequence(Find(object: spoon), Bring(object: spoon, on: cupboard), Find(Find(object: spoon, in: living room)))"
  },
  {
    "Id": 996,
    "Sentence": "Please introduce yourself to the oldest woman in the bedroom",
    "Remarks": "bedroom\n\t At least three people must be here\n\n",
    "Command": "Greet(Person(oldest woman, in: bedroom), method: introduce yourself to)"
  },
  {
    "Id": 997,
    "Sentence": "Spot Francis at the entrance, conduct her to the corridor, and say something please",
    "Remarks": "Remarks\n\t When asked, reply to the robot: \u0022the time\u0022\n\n",
    "Command": "Sequence(Guide(Person(Francis, at: entrance)), Speak())"
  },
  {
    "Id": 998,
    "Sentence": "Serve some sprite in a cup",
    "Remarks": null,
    "Command": "Pour(sprite, in: cup)"
  },
  {
    "Id": 999,
    "Sentence": "Could you please find a apple in the kitchen, locate Charlie, and look for Charlie at the entrance",
    "Remarks": "Charlie\n\t She is sitting at the bed\n\n",
    "Command": "Sequence(Find(Find(object: apple, in: kitchen)), Find(Person(Charlie)), Find(Person(Charlie, at: entrance)))"
  }
]